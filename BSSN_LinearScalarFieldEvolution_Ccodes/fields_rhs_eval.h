/*
 * Evaluate the scalar fields RHSs
 */
void fields_rhs_eval(rfm_struct *restrict rfmstruct, const paramstruct *restrict params, const REAL *restrict in_gfs, REAL *restrict rhs_gfs) {
#include "./set_Cparameters-SIMD.h"

    #pragma omp parallel for
    for (int i2 = NGHOSTS; i2 < NGHOSTS+Nxx2; i2++) {
        #include "rfm_files/rfm_struct__SIMD_outer_read2.h"
        for (int i1 = NGHOSTS; i1 < NGHOSTS+Nxx1; i1++) {
            #include "rfm_files/rfm_struct__SIMD_outer_read1.h"
            for (int i0 = NGHOSTS; i0 < NGHOSTS+Nxx0; i0 += SIMD_width) {
                #include "rfm_files/rfm_struct__SIMD_inner_read0.h"
                {
                   /*
                    * NRPy+ Finite Difference Code Generation, Step 1 of 3: Read from main memory and compute finite difference stencils:
                    */
                   const REAL_SIMD_ARRAY hDD00_i0_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2-4)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1-4,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0m4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0-4,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0p4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0+4,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1+4,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2+4)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2-4)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1-4,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0m4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0-4,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0p4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0+4,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1+4,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2+4)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2-4)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1-4,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0m4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0-4,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0p4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0+4,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1+4,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2+4)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2-4)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1-4,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0m4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0-4,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0p4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0+4,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1+4,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2+4)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2-4)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1-4,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0m4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0-4,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0p4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0+4,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1+4,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2+4)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2-4)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1-4,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0m4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0-4,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0p4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0+4,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1+4,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2+4)]);
                   const REAL_SIMD_ARRAY vetU0 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY trK = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2-4)]);
                   const REAL_SIMD_ARRAY cf_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY cf_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-4,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-4,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY cf = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+4,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+4,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY cf_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY cf_i0_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2+4)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2-4)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-4,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-4,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+4,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+4,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1_i2m5 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1,i2-5)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m4_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-4,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m3_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-3,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m2_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-2,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m1_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-1,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p1_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+1,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p2_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+2,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p3_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+3,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p4_i2m4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+4,i2-4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m4_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-4,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m3_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-3,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m2_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-2,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m1_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-1,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p1_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+1,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p2_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+2,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p3_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+3,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p4_i2m3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+4,i2-3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m4_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-4,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m3_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-3,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m2_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-2,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m1_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-1,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p1_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+1,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p2_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+2,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p3_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+3,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p4_i2m2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+4,i2-2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m4_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-4,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m3_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-3,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m2_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-2,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m1_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-1,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p1_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+1,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p2_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+2,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p3_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+3,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p4_i2m1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+4,i2-1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m5_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-5,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1-4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1-4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1-4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1-4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1-4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1-4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1-4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1-4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1-3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1-3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1-3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1-3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1-3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1-3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1-3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1-3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1-2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1-2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1-2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1-2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1-2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1-2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1-2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1-2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1-1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1-1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1-1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1-1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1-1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1-1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1-1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1-1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m5_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-5,i1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY Phi = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p5_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+5,i1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1+1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1+1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1+1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1+1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1+1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1+1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1+1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1+1,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1+2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1+2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1+2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1+2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1+2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1+2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1+2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1+2,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1+3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1+3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1+3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1+3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1+3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1+3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1+3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1+3,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1+4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1+4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1+4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1+4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1+4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1+4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1+4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1+4,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p5_i2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+5,i2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m4_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-4,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m3_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-3,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m2_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-2,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m1_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-1,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p1_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+1,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p2_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+2,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p3_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+3,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p4_i2p1 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+4,i2+1)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m4_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-4,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m3_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-3,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m2_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-2,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m1_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-1,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p1_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+1,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p2_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+2,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p3_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+3,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p4_i2p2 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+4,i2+2)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m4_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-4,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m3_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-3,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m2_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-2,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m1_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-1,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p1_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+1,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p2_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+2,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p3_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+3,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p4_i2p3 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+4,i2+3)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m4_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-4,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m3_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-3,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m2_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-2,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1m1_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1-1,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0m4_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-4,i1,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0m3_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-3,i1,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0m2_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-2,i1,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0m1_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0-1,i1,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0p1_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+1,i1,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0p2_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+2,i1,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0p3_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+3,i1,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0p4_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0+4,i1,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p1_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+1,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p2_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+2,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p3_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+3,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1p4_i2p4 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1+4,i2+4)]);
                   const REAL_SIMD_ARRAY Phi_i0_i1_i2p5 = ReadSIMD(&in_gfs[IDX4S(PHIGF, i0,i1,i2+5)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1_i2m5 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1,i2-5)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1_i2m4 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1,i2-4)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1m5_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1-5,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1m4_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1-4,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0m5_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0-5,i1,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0m4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0-4,i1,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY Pi = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0p4_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0+4,i1,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0p5_i1_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0+5,i1,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1p4_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1+4,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1p5_i2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1+5,i2)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1_i2p4 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1,i2+4)]);
                   const REAL_SIMD_ARRAY Pi_i0_i1_i2p5 = ReadSIMD(&in_gfs[IDX4S(PIGF, i0,i1,i2+5)]);
                   const REAL_SIMD_ARRAY Phi_dD0 = SIMD_order_8_f_dD0(invdx0,Phi_i0m4_i1_i2,Phi_i0m3_i1_i2,Phi_i0m2_i1_i2,Phi_i0m1_i1_i2,Phi_i0p1_i1_i2,Phi_i0p2_i1_i2,Phi_i0p3_i1_i2,Phi_i0p4_i1_i2);
                   const REAL_SIMD_ARRAY alpha_dD0 = SIMD_order_8_f_dD0(invdx0,alpha_i0m4_i1_i2,alpha_i0m3_i1_i2,alpha_i0m2_i1_i2,alpha_i0m1_i1_i2,alpha_i0p1_i1_i2,alpha_i0p2_i1_i2,alpha_i0p3_i1_i2,alpha_i0p4_i1_i2);
                   const REAL_SIMD_ARRAY cf_dD0 = SIMD_order_8_f_dD0(invdx0,cf_i0m4_i1_i2,cf_i0m3_i1_i2,cf_i0m2_i1_i2,cf_i0m1_i1_i2,cf_i0p1_i1_i2,cf_i0p2_i1_i2,cf_i0p3_i1_i2,cf_i0p4_i1_i2);
                   const REAL_SIMD_ARRAY hDD_dD000 = SIMD_order_8_f_dD0(invdx0,hDD00_i0m4_i1_i2,hDD00_i0m3_i1_i2,hDD00_i0m2_i1_i2,hDD00_i0m1_i1_i2,hDD00_i0p1_i1_i2,hDD00_i0p2_i1_i2,hDD00_i0p3_i1_i2,hDD00_i0p4_i1_i2);
                   const REAL_SIMD_ARRAY hDD_dD010 = SIMD_order_8_f_dD0(invdx0,hDD01_i0m4_i1_i2,hDD01_i0m3_i1_i2,hDD01_i0m2_i1_i2,hDD01_i0m1_i1_i2,hDD01_i0p1_i1_i2,hDD01_i0p2_i1_i2,hDD01_i0p3_i1_i2,hDD01_i0p4_i1_i2);
                   const REAL_SIMD_ARRAY hDD_dD020 = SIMD_order_8_f_dD0(invdx0,hDD02_i0m4_i1_i2,hDD02_i0m3_i1_i2,hDD02_i0m2_i1_i2,hDD02_i0m1_i1_i2,hDD02_i0p1_i1_i2,hDD02_i0p2_i1_i2,hDD02_i0p3_i1_i2,hDD02_i0p4_i1_i2);
                   const REAL_SIMD_ARRAY hDD_dD110 = SIMD_order_8_f_dD0(invdx0,hDD11_i0m4_i1_i2,hDD11_i0m3_i1_i2,hDD11_i0m2_i1_i2,hDD11_i0m1_i1_i2,hDD11_i0p1_i1_i2,hDD11_i0p2_i1_i2,hDD11_i0p3_i1_i2,hDD11_i0p4_i1_i2);
                   const REAL_SIMD_ARRAY hDD_dD120 = SIMD_order_8_f_dD0(invdx0,hDD12_i0m4_i1_i2,hDD12_i0m3_i1_i2,hDD12_i0m2_i1_i2,hDD12_i0m1_i1_i2,hDD12_i0p1_i1_i2,hDD12_i0p2_i1_i2,hDD12_i0p3_i1_i2,hDD12_i0p4_i1_i2);
                   const REAL_SIMD_ARRAY hDD_dD220 = SIMD_order_8_f_dD0(invdx0,hDD22_i0m4_i1_i2,hDD22_i0m3_i1_i2,hDD22_i0m2_i1_i2,hDD22_i0m1_i1_i2,hDD22_i0p1_i1_i2,hDD22_i0p2_i1_i2,hDD22_i0p3_i1_i2,hDD22_i0p4_i1_i2);
                   const REAL_SIMD_ARRAY Phi_dD1 = SIMD_order_8_f_dD1(invdx1,Phi_i0_i1m4_i2,Phi_i0_i1m3_i2,Phi_i0_i1m2_i2,Phi_i0_i1m1_i2,Phi_i0_i1p1_i2,Phi_i0_i1p2_i2,Phi_i0_i1p3_i2,Phi_i0_i1p4_i2);
                   const REAL_SIMD_ARRAY alpha_dD1 = SIMD_order_8_f_dD1(invdx1,alpha_i0_i1m4_i2,alpha_i0_i1m3_i2,alpha_i0_i1m2_i2,alpha_i0_i1m1_i2,alpha_i0_i1p1_i2,alpha_i0_i1p2_i2,alpha_i0_i1p3_i2,alpha_i0_i1p4_i2);
                   const REAL_SIMD_ARRAY cf_dD1 = SIMD_order_8_f_dD1(invdx1,cf_i0_i1m4_i2,cf_i0_i1m3_i2,cf_i0_i1m2_i2,cf_i0_i1m1_i2,cf_i0_i1p1_i2,cf_i0_i1p2_i2,cf_i0_i1p3_i2,cf_i0_i1p4_i2);
                   const REAL_SIMD_ARRAY hDD_dD001 = SIMD_order_8_f_dD1(invdx1,hDD00_i0_i1m4_i2,hDD00_i0_i1m3_i2,hDD00_i0_i1m2_i2,hDD00_i0_i1m1_i2,hDD00_i0_i1p1_i2,hDD00_i0_i1p2_i2,hDD00_i0_i1p3_i2,hDD00_i0_i1p4_i2);
                   const REAL_SIMD_ARRAY hDD_dD011 = SIMD_order_8_f_dD1(invdx1,hDD01_i0_i1m4_i2,hDD01_i0_i1m3_i2,hDD01_i0_i1m2_i2,hDD01_i0_i1m1_i2,hDD01_i0_i1p1_i2,hDD01_i0_i1p2_i2,hDD01_i0_i1p3_i2,hDD01_i0_i1p4_i2);
                   const REAL_SIMD_ARRAY hDD_dD021 = SIMD_order_8_f_dD1(invdx1,hDD02_i0_i1m4_i2,hDD02_i0_i1m3_i2,hDD02_i0_i1m2_i2,hDD02_i0_i1m1_i2,hDD02_i0_i1p1_i2,hDD02_i0_i1p2_i2,hDD02_i0_i1p3_i2,hDD02_i0_i1p4_i2);
                   const REAL_SIMD_ARRAY hDD_dD111 = SIMD_order_8_f_dD1(invdx1,hDD11_i0_i1m4_i2,hDD11_i0_i1m3_i2,hDD11_i0_i1m2_i2,hDD11_i0_i1m1_i2,hDD11_i0_i1p1_i2,hDD11_i0_i1p2_i2,hDD11_i0_i1p3_i2,hDD11_i0_i1p4_i2);
                   const REAL_SIMD_ARRAY hDD_dD121 = SIMD_order_8_f_dD1(invdx1,hDD12_i0_i1m4_i2,hDD12_i0_i1m3_i2,hDD12_i0_i1m2_i2,hDD12_i0_i1m1_i2,hDD12_i0_i1p1_i2,hDD12_i0_i1p2_i2,hDD12_i0_i1p3_i2,hDD12_i0_i1p4_i2);
                   const REAL_SIMD_ARRAY hDD_dD221 = SIMD_order_8_f_dD1(invdx1,hDD22_i0_i1m4_i2,hDD22_i0_i1m3_i2,hDD22_i0_i1m2_i2,hDD22_i0_i1m1_i2,hDD22_i0_i1p1_i2,hDD22_i0_i1p2_i2,hDD22_i0_i1p3_i2,hDD22_i0_i1p4_i2);
                   const REAL_SIMD_ARRAY Phi_dD2 = SIMD_order_8_f_dD2(invdx2,Phi_i0_i1_i2m4,Phi_i0_i1_i2m3,Phi_i0_i1_i2m2,Phi_i0_i1_i2m1,Phi_i0_i1_i2p1,Phi_i0_i1_i2p2,Phi_i0_i1_i2p3,Phi_i0_i1_i2p4);
                   const REAL_SIMD_ARRAY alpha_dD2 = SIMD_order_8_f_dD2(invdx2,alpha_i0_i1_i2m4,alpha_i0_i1_i2m3,alpha_i0_i1_i2m2,alpha_i0_i1_i2m1,alpha_i0_i1_i2p1,alpha_i0_i1_i2p2,alpha_i0_i1_i2p3,alpha_i0_i1_i2p4);
                   const REAL_SIMD_ARRAY cf_dD2 = SIMD_order_8_f_dD2(invdx2,cf_i0_i1_i2m4,cf_i0_i1_i2m3,cf_i0_i1_i2m2,cf_i0_i1_i2m1,cf_i0_i1_i2p1,cf_i0_i1_i2p2,cf_i0_i1_i2p3,cf_i0_i1_i2p4);
                   const REAL_SIMD_ARRAY hDD_dD002 = SIMD_order_8_f_dD2(invdx2,hDD00_i0_i1_i2m4,hDD00_i0_i1_i2m3,hDD00_i0_i1_i2m2,hDD00_i0_i1_i2m1,hDD00_i0_i1_i2p1,hDD00_i0_i1_i2p2,hDD00_i0_i1_i2p3,hDD00_i0_i1_i2p4);
                   const REAL_SIMD_ARRAY hDD_dD012 = SIMD_order_8_f_dD2(invdx2,hDD01_i0_i1_i2m4,hDD01_i0_i1_i2m3,hDD01_i0_i1_i2m2,hDD01_i0_i1_i2m1,hDD01_i0_i1_i2p1,hDD01_i0_i1_i2p2,hDD01_i0_i1_i2p3,hDD01_i0_i1_i2p4);
                   const REAL_SIMD_ARRAY hDD_dD022 = SIMD_order_8_f_dD2(invdx2,hDD02_i0_i1_i2m4,hDD02_i0_i1_i2m3,hDD02_i0_i1_i2m2,hDD02_i0_i1_i2m1,hDD02_i0_i1_i2p1,hDD02_i0_i1_i2p2,hDD02_i0_i1_i2p3,hDD02_i0_i1_i2p4);
                   const REAL_SIMD_ARRAY hDD_dD112 = SIMD_order_8_f_dD2(invdx2,hDD11_i0_i1_i2m4,hDD11_i0_i1_i2m3,hDD11_i0_i1_i2m2,hDD11_i0_i1_i2m1,hDD11_i0_i1_i2p1,hDD11_i0_i1_i2p2,hDD11_i0_i1_i2p3,hDD11_i0_i1_i2p4);
                   const REAL_SIMD_ARRAY hDD_dD122 = SIMD_order_8_f_dD2(invdx2,hDD12_i0_i1_i2m4,hDD12_i0_i1_i2m3,hDD12_i0_i1_i2m2,hDD12_i0_i1_i2m1,hDD12_i0_i1_i2p1,hDD12_i0_i1_i2p2,hDD12_i0_i1_i2p3,hDD12_i0_i1_i2p4);
                   const REAL_SIMD_ARRAY hDD_dD222 = SIMD_order_8_f_dD2(invdx2,hDD22_i0_i1_i2m4,hDD22_i0_i1_i2m3,hDD22_i0_i1_i2m2,hDD22_i0_i1_i2m1,hDD22_i0_i1_i2p1,hDD22_i0_i1_i2p2,hDD22_i0_i1_i2p3,hDD22_i0_i1_i2p4);
                   const REAL_SIMD_ARRAY Phi_dDD00 = SIMD_order_8_f_dDD00(invdx0,Phi_i0m4_i1_i2,Phi_i0m3_i1_i2,Phi_i0m2_i1_i2,Phi_i0m1_i1_i2,Phi,Phi_i0p1_i1_i2,Phi_i0p2_i1_i2,Phi_i0p3_i1_i2,Phi_i0p4_i1_i2);
                   const REAL_SIMD_ARRAY Phi_dDD01 = SIMD_order_8_f_dDD01(invdx0,invdx1,Phi_i0m4_i1m4_i2,Phi_i0m3_i1m4_i2,Phi_i0m2_i1m4_i2,Phi_i0m1_i1m4_i2,Phi_i0p1_i1m4_i2,Phi_i0p2_i1m4_i2,Phi_i0p3_i1m4_i2,Phi_i0p4_i1m4_i2,Phi_i0m4_i1m3_i2,Phi_i0m3_i1m3_i2,Phi_i0m2_i1m3_i2,Phi_i0m1_i1m3_i2,Phi_i0p1_i1m3_i2,Phi_i0p2_i1m3_i2,Phi_i0p3_i1m3_i2,Phi_i0p4_i1m3_i2,Phi_i0m4_i1m2_i2,Phi_i0m3_i1m2_i2,Phi_i0m2_i1m2_i2,Phi_i0m1_i1m2_i2,Phi_i0p1_i1m2_i2,Phi_i0p2_i1m2_i2,Phi_i0p3_i1m2_i2,Phi_i0p4_i1m2_i2,Phi_i0m4_i1m1_i2,Phi_i0m3_i1m1_i2,Phi_i0m2_i1m1_i2,Phi_i0m1_i1m1_i2,Phi_i0p1_i1m1_i2,Phi_i0p2_i1m1_i2,Phi_i0p3_i1m1_i2,Phi_i0p4_i1m1_i2,Phi_i0m4_i1p1_i2,Phi_i0m3_i1p1_i2,Phi_i0m2_i1p1_i2,Phi_i0m1_i1p1_i2,Phi_i0p1_i1p1_i2,Phi_i0p2_i1p1_i2,Phi_i0p3_i1p1_i2,Phi_i0p4_i1p1_i2,Phi_i0m4_i1p2_i2,Phi_i0m3_i1p2_i2,Phi_i0m2_i1p2_i2,Phi_i0m1_i1p2_i2,Phi_i0p1_i1p2_i2,Phi_i0p2_i1p2_i2,Phi_i0p3_i1p2_i2,Phi_i0p4_i1p2_i2,Phi_i0m4_i1p3_i2,Phi_i0m3_i1p3_i2,Phi_i0m2_i1p3_i2,Phi_i0m1_i1p3_i2,Phi_i0p1_i1p3_i2,Phi_i0p2_i1p3_i2,Phi_i0p3_i1p3_i2,Phi_i0p4_i1p3_i2,Phi_i0m4_i1p4_i2,Phi_i0m3_i1p4_i2,Phi_i0m2_i1p4_i2,Phi_i0m1_i1p4_i2,Phi_i0p1_i1p4_i2,Phi_i0p2_i1p4_i2,Phi_i0p3_i1p4_i2,Phi_i0p4_i1p4_i2);
                   const REAL_SIMD_ARRAY Phi_dDD02 = SIMD_order_8_f_dDD02(invdx0,invdx2,Phi_i0m4_i1_i2m4,Phi_i0m3_i1_i2m4,Phi_i0m2_i1_i2m4,Phi_i0m1_i1_i2m4,Phi_i0p1_i1_i2m4,Phi_i0p2_i1_i2m4,Phi_i0p3_i1_i2m4,Phi_i0p4_i1_i2m4,Phi_i0m4_i1_i2m3,Phi_i0m3_i1_i2m3,Phi_i0m2_i1_i2m3,Phi_i0m1_i1_i2m3,Phi_i0p1_i1_i2m3,Phi_i0p2_i1_i2m3,Phi_i0p3_i1_i2m3,Phi_i0p4_i1_i2m3,Phi_i0m4_i1_i2m2,Phi_i0m3_i1_i2m2,Phi_i0m2_i1_i2m2,Phi_i0m1_i1_i2m2,Phi_i0p1_i1_i2m2,Phi_i0p2_i1_i2m2,Phi_i0p3_i1_i2m2,Phi_i0p4_i1_i2m2,Phi_i0m4_i1_i2m1,Phi_i0m3_i1_i2m1,Phi_i0m2_i1_i2m1,Phi_i0m1_i1_i2m1,Phi_i0p1_i1_i2m1,Phi_i0p2_i1_i2m1,Phi_i0p3_i1_i2m1,Phi_i0p4_i1_i2m1,Phi_i0m4_i1_i2p1,Phi_i0m3_i1_i2p1,Phi_i0m2_i1_i2p1,Phi_i0m1_i1_i2p1,Phi_i0p1_i1_i2p1,Phi_i0p2_i1_i2p1,Phi_i0p3_i1_i2p1,Phi_i0p4_i1_i2p1,Phi_i0m4_i1_i2p2,Phi_i0m3_i1_i2p2,Phi_i0m2_i1_i2p2,Phi_i0m1_i1_i2p2,Phi_i0p1_i1_i2p2,Phi_i0p2_i1_i2p2,Phi_i0p3_i1_i2p2,Phi_i0p4_i1_i2p2,Phi_i0m4_i1_i2p3,Phi_i0m3_i1_i2p3,Phi_i0m2_i1_i2p3,Phi_i0m1_i1_i2p3,Phi_i0p1_i1_i2p3,Phi_i0p2_i1_i2p3,Phi_i0p3_i1_i2p3,Phi_i0p4_i1_i2p3,Phi_i0m4_i1_i2p4,Phi_i0m3_i1_i2p4,Phi_i0m2_i1_i2p4,Phi_i0m1_i1_i2p4,Phi_i0p1_i1_i2p4,Phi_i0p2_i1_i2p4,Phi_i0p3_i1_i2p4,Phi_i0p4_i1_i2p4);
                   const REAL_SIMD_ARRAY Phi_dDD11 = SIMD_order_8_f_dDD11(invdx1,Phi_i0_i1m4_i2,Phi_i0_i1m3_i2,Phi_i0_i1m2_i2,Phi_i0_i1m1_i2,Phi,Phi_i0_i1p1_i2,Phi_i0_i1p2_i2,Phi_i0_i1p3_i2,Phi_i0_i1p4_i2);
                   const REAL_SIMD_ARRAY Phi_dDD12 = SIMD_order_8_f_dDD12(invdx1,invdx2,Phi_i0_i1m4_i2m4,Phi_i0_i1m3_i2m4,Phi_i0_i1m2_i2m4,Phi_i0_i1m1_i2m4,Phi_i0_i1p1_i2m4,Phi_i0_i1p2_i2m4,Phi_i0_i1p3_i2m4,Phi_i0_i1p4_i2m4,Phi_i0_i1m4_i2m3,Phi_i0_i1m3_i2m3,Phi_i0_i1m2_i2m3,Phi_i0_i1m1_i2m3,Phi_i0_i1p1_i2m3,Phi_i0_i1p2_i2m3,Phi_i0_i1p3_i2m3,Phi_i0_i1p4_i2m3,Phi_i0_i1m4_i2m2,Phi_i0_i1m3_i2m2,Phi_i0_i1m2_i2m2,Phi_i0_i1m1_i2m2,Phi_i0_i1p1_i2m2,Phi_i0_i1p2_i2m2,Phi_i0_i1p3_i2m2,Phi_i0_i1p4_i2m2,Phi_i0_i1m4_i2m1,Phi_i0_i1m3_i2m1,Phi_i0_i1m2_i2m1,Phi_i0_i1m1_i2m1,Phi_i0_i1p1_i2m1,Phi_i0_i1p2_i2m1,Phi_i0_i1p3_i2m1,Phi_i0_i1p4_i2m1,Phi_i0_i1m4_i2p1,Phi_i0_i1m3_i2p1,Phi_i0_i1m2_i2p1,Phi_i0_i1m1_i2p1,Phi_i0_i1p1_i2p1,Phi_i0_i1p2_i2p1,Phi_i0_i1p3_i2p1,Phi_i0_i1p4_i2p1,Phi_i0_i1m4_i2p2,Phi_i0_i1m3_i2p2,Phi_i0_i1m2_i2p2,Phi_i0_i1m1_i2p2,Phi_i0_i1p1_i2p2,Phi_i0_i1p2_i2p2,Phi_i0_i1p3_i2p2,Phi_i0_i1p4_i2p2,Phi_i0_i1m4_i2p3,Phi_i0_i1m3_i2p3,Phi_i0_i1m2_i2p3,Phi_i0_i1m1_i2p3,Phi_i0_i1p1_i2p3,Phi_i0_i1p2_i2p3,Phi_i0_i1p3_i2p3,Phi_i0_i1p4_i2p3,Phi_i0_i1m4_i2p4,Phi_i0_i1m3_i2p4,Phi_i0_i1m2_i2p4,Phi_i0_i1m1_i2p4,Phi_i0_i1p1_i2p4,Phi_i0_i1p2_i2p4,Phi_i0_i1p3_i2p4,Phi_i0_i1p4_i2p4);
                   const REAL_SIMD_ARRAY Phi_dDD22 = SIMD_order_8_f_dDD22(invdx2,Phi_i0_i1_i2m4,Phi_i0_i1_i2m3,Phi_i0_i1_i2m2,Phi_i0_i1_i2m1,Phi,Phi_i0_i1_i2p1,Phi_i0_i1_i2p2,Phi_i0_i1_i2p3,Phi_i0_i1_i2p4);
                   const REAL_SIMD_ARRAY UpwindAlgInputPhi_ddnD0 = SIMD_order_8_f_ddnD0(invdx0,Phi_i0m5_i1_i2,Phi_i0m4_i1_i2,Phi_i0m3_i1_i2,Phi_i0m2_i1_i2,Phi_i0m1_i1_i2,Phi,Phi_i0p1_i1_i2,Phi_i0p2_i1_i2,Phi_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputPi_ddnD0 = SIMD_order_8_f_ddnD0(invdx0,Pi_i0m5_i1_i2,Pi_i0m4_i1_i2,Pi_i0m3_i1_i2,Pi_i0m2_i1_i2,Pi_i0m1_i1_i2,Pi,Pi_i0p1_i1_i2,Pi_i0p2_i1_i2,Pi_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputPhi_ddnD1 = SIMD_order_8_f_ddnD1(invdx1,Phi_i0_i1m5_i2,Phi_i0_i1m4_i2,Phi_i0_i1m3_i2,Phi_i0_i1m2_i2,Phi_i0_i1m1_i2,Phi,Phi_i0_i1p1_i2,Phi_i0_i1p2_i2,Phi_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputPi_ddnD1 = SIMD_order_8_f_ddnD1(invdx1,Pi_i0_i1m5_i2,Pi_i0_i1m4_i2,Pi_i0_i1m3_i2,Pi_i0_i1m2_i2,Pi_i0_i1m1_i2,Pi,Pi_i0_i1p1_i2,Pi_i0_i1p2_i2,Pi_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputPhi_ddnD2 = SIMD_order_8_f_ddnD2(invdx2,Phi_i0_i1_i2m5,Phi_i0_i1_i2m4,Phi_i0_i1_i2m3,Phi_i0_i1_i2m2,Phi_i0_i1_i2m1,Phi,Phi_i0_i1_i2p1,Phi_i0_i1_i2p2,Phi_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputPi_ddnD2 = SIMD_order_8_f_ddnD2(invdx2,Pi_i0_i1_i2m5,Pi_i0_i1_i2m4,Pi_i0_i1_i2m3,Pi_i0_i1_i2m2,Pi_i0_i1_i2m1,Pi,Pi_i0_i1_i2p1,Pi_i0_i1_i2p2,Pi_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputPhi_dupD0 = SIMD_order_8_f_dupD0(invdx0,Phi_i0m3_i1_i2,Phi_i0m2_i1_i2,Phi_i0m1_i1_i2,Phi,Phi_i0p1_i1_i2,Phi_i0p2_i1_i2,Phi_i0p3_i1_i2,Phi_i0p4_i1_i2,Phi_i0p5_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputPi_dupD0 = SIMD_order_8_f_dupD0(invdx0,Pi_i0m3_i1_i2,Pi_i0m2_i1_i2,Pi_i0m1_i1_i2,Pi,Pi_i0p1_i1_i2,Pi_i0p2_i1_i2,Pi_i0p3_i1_i2,Pi_i0p4_i1_i2,Pi_i0p5_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputPhi_dupD1 = SIMD_order_8_f_dupD1(invdx1,Phi_i0_i1m3_i2,Phi_i0_i1m2_i2,Phi_i0_i1m1_i2,Phi,Phi_i0_i1p1_i2,Phi_i0_i1p2_i2,Phi_i0_i1p3_i2,Phi_i0_i1p4_i2,Phi_i0_i1p5_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputPi_dupD1 = SIMD_order_8_f_dupD1(invdx1,Pi_i0_i1m3_i2,Pi_i0_i1m2_i2,Pi_i0_i1m1_i2,Pi,Pi_i0_i1p1_i2,Pi_i0_i1p2_i2,Pi_i0_i1p3_i2,Pi_i0_i1p4_i2,Pi_i0_i1p5_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputPhi_dupD2 = SIMD_order_8_f_dupD2(invdx2,Phi_i0_i1_i2m3,Phi_i0_i1_i2m2,Phi_i0_i1_i2m1,Phi,Phi_i0_i1_i2p1,Phi_i0_i1_i2p2,Phi_i0_i1_i2p3,Phi_i0_i1_i2p4,Phi_i0_i1_i2p5);
                   const REAL_SIMD_ARRAY UpwindAlgInputPi_dupD2 = SIMD_order_8_f_dupD2(invdx2,Pi_i0_i1_i2m3,Pi_i0_i1_i2m2,Pi_i0_i1_i2m1,Pi,Pi_i0_i1_i2p1,Pi_i0_i1_i2p2,Pi_i0_i1_i2p3,Pi_i0_i1_i2p4,Pi_i0_i1_i2p5);
                   const double tmpFDPart1_Integer_1 = 1.0;
                   const REAL_SIMD_ARRAY FDPart1_Integer_1 = ConstSIMD(tmpFDPart1_Integer_1);
                   
                   const double tmpFDPart1_NegativeOne_ = -1.0;
                   const REAL_SIMD_ARRAY FDPart1_NegativeOne_ = ConstSIMD(tmpFDPart1_NegativeOne_);
                   
                   const REAL_SIMD_ARRAY FDPart1_0 = DivSIMD(FDPart1_Integer_1, f0_of_xx0);
                   const REAL_SIMD_ARRAY UpwindControlVectorU0 = DivSIMD(vetU0, f0_of_xx0__D0);
                   const REAL_SIMD_ARRAY UpwindControlVectorU1 = MulSIMD(FDPart1_0, vetU1);
                   const REAL_SIMD_ARRAY UpwindControlVectorU2 = MulSIMD(FDPart1_0, DivSIMD(vetU2, f1_of_xx1));
                   /*
                    * NRPy+ Finite Difference Code Generation, Step 2 of 3: Implement upwinding algorithm:
                    */
                   const double tmp_upwind_Integer_0 = 0.000000000000000000000000000000000;
                   const REAL_SIMD_ARRAY upwind_Integer_0 = ConstSIMD(tmp_upwind_Integer_0);
                   const double tmp_upwind_Integer_1 = 1.000000000000000000000000000000000;
                   const REAL_SIMD_ARRAY upwind_Integer_1 = ConstSIMD(tmp_upwind_Integer_1);
                   const REAL_SIMD_ARRAY UpWind0 = UPWIND_ALG(UpwindControlVectorU0);
                   const REAL_SIMD_ARRAY UpWind1 = UPWIND_ALG(UpwindControlVectorU1);
                   const REAL_SIMD_ARRAY UpWind2 = UPWIND_ALG(UpwindControlVectorU2);
                   const double tmpFDPart2_NegativeOne_ = -1.0;
                   const REAL_SIMD_ARRAY FDPart2_NegativeOne_ = ConstSIMD(tmpFDPart2_NegativeOne_);
                   
                   const REAL_SIMD_ARRAY Phi_dupD0 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputPhi_dupD0, UpwindAlgInputPhi_ddnD0), UpwindAlgInputPhi_ddnD0);
                   const REAL_SIMD_ARRAY Phi_dupD1 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputPhi_dupD1, UpwindAlgInputPhi_ddnD1), UpwindAlgInputPhi_ddnD1);
                   const REAL_SIMD_ARRAY Phi_dupD2 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputPhi_dupD2, UpwindAlgInputPhi_ddnD2), UpwindAlgInputPhi_ddnD2);
                   const REAL_SIMD_ARRAY Pi_dupD0 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputPi_dupD0, UpwindAlgInputPi_ddnD0), UpwindAlgInputPi_ddnD0);
                   const REAL_SIMD_ARRAY Pi_dupD1 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputPi_dupD1, UpwindAlgInputPi_ddnD1), UpwindAlgInputPi_ddnD1);
                   const REAL_SIMD_ARRAY Pi_dupD2 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputPi_dupD2, UpwindAlgInputPi_ddnD2), UpwindAlgInputPi_ddnD2);
                   /*
                    * NRPy+ Finite Difference Code Generation, Step 3 of 3: Evaluate SymPy expressions and write to main memory:
                    */
                   const double tmpFDPart3_Integer_1 = 1.0;
                   const REAL_SIMD_ARRAY FDPart3_Integer_1 = ConstSIMD(tmpFDPart3_Integer_1);
                   
                   const double tmpFDPart3_Integer_2 = 2.0;
                   const REAL_SIMD_ARRAY FDPart3_Integer_2 = ConstSIMD(tmpFDPart3_Integer_2);
                   
                   const double tmpFDPart3_NegativeOne_ = -1.0;
                   const REAL_SIMD_ARRAY FDPart3_NegativeOne_ = ConstSIMD(tmpFDPart3_NegativeOne_);
                   
                   const double tmpFDPart3_Rational_1_2 = 1.0/2.0;
                   const REAL_SIMD_ARRAY FDPart3_Rational_1_2 = ConstSIMD(tmpFDPart3_Rational_1_2);
                   
                   const REAL_SIMD_ARRAY FDPart3_1 = DivSIMD(FDPart3_Integer_1, f0_of_xx0);
                   const REAL_SIMD_ARRAY FDPart3_3 = MulSIMD(FDPart3_1, DivSIMD(vetU2, f1_of_xx1));
                   const REAL_SIMD_ARRAY FDPart3_4 = MulSIMD(f0_of_xx0__D0, MulSIMD(MulSIMD(f0_of_xx0, f0_of_xx0), f0_of_xx0));
                   const REAL_SIMD_ARRAY FDPart3_6 = MulSIMD(f0_of_xx0, f0_of_xx0);
                   const REAL_SIMD_ARRAY FDPart3_7 = FusedMulAddSIMD(FDPart3_6, hDD11, FDPart3_6);
                   const REAL_SIMD_ARRAY FDPart3_8 = MulSIMD(f0_of_xx0, f0_of_xx0__D0);
                   const REAL_SIMD_ARRAY FDPart3_10 = FusedMulSubSIMD(MulSIMD(FDPart3_4, f1_of_xx1), MulSIMD(hDD01, hDD12), MulSIMD(MulSIMD(FDPart3_7, FDPart3_8), MulSIMD(f1_of_xx1, hDD02)));
                   const REAL_SIMD_ARRAY FDPart3_11 = MulSIMD(f0_of_xx0__D0, f0_of_xx0__D0);
                   const REAL_SIMD_ARRAY FDPart3_13 = MulSIMD(f1_of_xx1, f1_of_xx1);
                   const REAL_SIMD_ARRAY FDPart3_14 = MulSIMD(FDPart3_13, MulSIMD(MulSIMD(MulSIMD(f0_of_xx0, f0_of_xx0), f0_of_xx0), f0_of_xx0));
                   const REAL_SIMD_ARRAY FDPart3_16 = FusedMulAddSIMD(FDPart3_11, hDD00, FDPart3_11);
                   const REAL_SIMD_ARRAY FDPart3_17 = MulSIMD(FDPart3_14, MulSIMD(FDPart3_NegativeOne_, MulSIMD(hDD12, hDD12)));
                   const REAL_SIMD_ARRAY FDPart3_18 = MulSIMD(FDPart3_13, FDPart3_6);
                   const REAL_SIMD_ARRAY FDPart3_20 = MulSIMD(MulSIMD(FDPart3_11, FDPart3_18), MulSIMD(FDPart3_NegativeOne_, MulSIMD(hDD02, hDD02)));
                   const REAL_SIMD_ARRAY FDPart3_21 = FusedMulAddSIMD(FDPart3_18, hDD22, FDPart3_18);
                   const REAL_SIMD_ARRAY FDPart3_22 = MulSIMD(MulSIMD(FDPart3_11, FDPart3_6), MulSIMD(FDPart3_NegativeOne_, MulSIMD(hDD01, hDD01)));
                   const REAL_SIMD_ARRAY FDPart3_24 = DivSIMD(FDPart3_Integer_1, FusedMulAddSIMD(FDPart3_21, FDPart3_22, FusedMulAddSIMD(FDPart3_16, MulSIMD(FDPart3_21, FDPart3_7), FusedMulAddSIMD(MulSIMD(FDPart3_Integer_2, hDD01), MulSIMD(MulSIMD(FDPart3_11, FDPart3_14), MulSIMD(hDD02, hDD12)), FusedMulAddSIMD(FDPart3_16, FDPart3_17, MulSIMD(FDPart3_20, FDPart3_7))))));
                   const REAL_SIMD_ARRAY FDPart3_25 = MulSIMD(cf, cf);
                   const REAL_SIMD_ARRAY FDPart3_27 = MulSIMD(FDPart3_24, MulSIMD(FDPart3_25, FDPart3_NegativeOne_));
                   const REAL_SIMD_ARRAY FDPart3_32 = MulSIMD(FDPart3_6, MulSIMD(FDPart3_NegativeOne_, f1_of_xx1));
                   const REAL_SIMD_ARRAY FDPart3_33 = FusedMulAddSIMD(FDPart3_16, MulSIMD(FDPart3_32, hDD12), MulSIMD(f1_of_xx1, MulSIMD(MulSIMD(FDPart3_11, FDPart3_6), MulSIMD(hDD01, hDD02))));
                   const REAL_SIMD_ARRAY FDPart3_35 = FusedMulAddSIMD(FDPart3_16, FDPart3_7, FDPart3_22);
                   const REAL_SIMD_ARRAY FDPart3_37 = FusedMulSubSIMD(MulSIMD(FDPart3_13, FDPart3_4), MulSIMD(hDD02, hDD12), MulSIMD(FDPart3_21, MulSIMD(FDPart3_8, hDD01)));
                   const REAL_SIMD_ARRAY FDPart3_38 = FusedMulAddSIMD(FDPart3_21, FDPart3_7, FDPart3_17);
                   const REAL_SIMD_ARRAY FDPart3_39 = MulSIMD(FDPart3_24, FDPart3_38);
                   const REAL_SIMD_ARRAY FDPart3_40 = MulSIMD(FDPart3_25, MulSIMD(FDPart3_39, FDPart3_NegativeOne_));
                   const REAL_SIMD_ARRAY FDPart3_41 = FusedMulAddSIMD(FDPart3_16, FDPart3_21, FDPart3_20);
                   const REAL_SIMD_ARRAY FDPart3_44 = MulSIMD(FDPart3_24, MulSIMD(Phi_dD0, cf));
                   const REAL_SIMD_ARRAY FDPart3_45 = MulSIMD(Phi_dD2, cf);
                   const REAL_SIMD_ARRAY FDPart3_46 = MulSIMD(FDPart3_10, FDPart3_24);
                   const REAL_SIMD_ARRAY FDPart3_47 = MulSIMD(Phi_dD1, cf);
                   const REAL_SIMD_ARRAY FDPart3_48 = MulSIMD(FDPart3_24, FDPart3_33);
                   const REAL_SIMD_ARRAY FDPart3_50 = MulSIMD(FDPart3_24, FDPart3_35);
                   const REAL_SIMD_ARRAY FDPart3_51 = MulSIMD(FDPart3_24, FDPart3_37);
                   const REAL_SIMD_ARRAY FDPart3_52 = MulSIMD(FDPart3_24, FDPart3_41);
                   const REAL_SIMD_ARRAY FDPart3_53 = MulSIMD(FDPart3_24, FDPart3_Rational_1_2);
                   const REAL_SIMD_ARRAY FDPart3_54 = MulSIMD(FDPart3_10, FDPart3_53);
                   const REAL_SIMD_ARRAY FDPart3_57 = MulSIMD(FDPart3_Integer_2, MulSIMD(f0_of_xx0, f0_of_xx0__D0));
                   const REAL_SIMD_ARRAY FDPart3_59 = FusedMulAddSIMD(FDPart3_57, hDD11, FusedMulAddSIMD(FDPart3_6, hDD_dD110, FDPart3_57));
                   const REAL_SIMD_ARRAY FDPart3_60 = MulSIMD(FDPart3_33, FDPart3_53);
                   const REAL_SIMD_ARRAY FDPart3_61 = MulSIMD(FDPart3_8, hDD_dD012);
                   const REAL_SIMD_ARRAY FDPart3_62 = MulSIMD(FDPart3_8, MulSIMD(f1_of_xx1, hDD_dD021));
                   const REAL_SIMD_ARRAY FDPart3_63 = MulSIMD(FDPart3_8, MulSIMD(f1_of_xx1__D1, hDD02));
                   const REAL_SIMD_ARRAY FDPart3_66 = FusedMulAddSIMD(FDPart3_57, MulSIMD(f1_of_xx1, hDD12), MulSIMD(FDPart3_6, MulSIMD(f1_of_xx1, hDD_dD120)));
                   const REAL_SIMD_ARRAY FDPart3_67 = AddSIMD(FDPart3_63, AddSIMD(FDPart3_66, SubSIMD(FDPart3_62, FDPart3_61)));
                   const REAL_SIMD_ARRAY FDPart3_68 = MulSIMD(FDPart3_35, FDPart3_53);
                   const REAL_SIMD_ARRAY FDPart3_69 = MulSIMD(FDPart3_25, Phi_dD2);
                   const REAL_SIMD_ARRAY FDPart3_70 = MulSIMD(FDPart3_69, FDPart3_Integer_2);
                   const REAL_SIMD_ARRAY FDPart3_73 = FusedMulAddSIMD(FDPart3_18, hDD_dD220, FusedMulAddSIMD(FDPart3_13, MulSIMD(FDPart3_57, hDD22), MulSIMD(FDPart3_13, FDPart3_57)));
                   const REAL_SIMD_ARRAY FDPart3_74 = AddSIMD(FDPart3_66, SubSIMD(SubSIMD(FDPart3_61, FDPart3_62), FDPart3_63));
                   const REAL_SIMD_ARRAY FDPart3_75 = MulSIMD(FDPart3_6, hDD_dD112);
                   const REAL_SIMD_ARRAY FDPart3_76 = AddSIMD(AddSIMD(FDPart3_62, FDPart3_63), FusedMulAddSIMD(FDPart3_32, hDD_dD120, NegFusedMulAddSIMD(f0_of_xx0__D0, MulSIMD(MulSIMD(FDPart3_Integer_2, f0_of_xx0), MulSIMD(f1_of_xx1, hDD12)), FDPart3_61)));
                   const REAL_SIMD_ARRAY FDPart3_77 = MulSIMD(FDPart3_6, MulSIMD(FDPart3_Integer_2, f1_of_xx1));
                   const REAL_SIMD_ARRAY FDPart3_80 = FusedMulAddSIMD(FDPart3_77, f1_of_xx1__D1, FusedMulAddSIMD(FDPart3_77, MulSIMD(f1_of_xx1__D1, hDD22), MulSIMD(FDPart3_18, hDD_dD221)));
                   const REAL_SIMD_ARRAY FDPart3_81 = MulSIMD(FDPart3_6, hDD_dD111);
                   const REAL_SIMD_ARRAY FDPart3_82 = NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(f0_of_xx0, f0_of_xx0__D0), FusedMulAddSIMD(f0_of_xx0, MulSIMD(MulSIMD(FDPart3_Integer_2, FDPart3_NegativeOne_), MulSIMD(f0_of_xx0__D0, hDD11)), FusedMulSubSIMD(FDPart3_57, hDD_dD011, MulSIMD(FDPart3_6, hDD_dD110))));
                   const REAL_SIMD_ARRAY FDPart3_83 = FusedMulAddSIMD(MulSIMD(FDPart3_6, FDPart3_Integer_2), MulSIMD(f1_of_xx1__D1, hDD12), FusedMulSubSIMD(FDPart3_77, hDD_dD121, MulSIMD(FDPart3_6, hDD_dD112)));
                   const REAL_SIMD_ARRAY FDPart3_84 = MulSIMD(FDPart3_38, FDPart3_53);
                   const REAL_SIMD_ARRAY FDPart3_86 = MulSIMD(FDPart3_37, FDPart3_53);
                   const REAL_SIMD_ARRAY FDPart3_87 = MulSIMD(FDPart3_25, Phi_dD0);
                   const REAL_SIMD_ARRAY FDPart3_88 = MulSIMD(FDPart3_87, FDPart3_Integer_2);
                   const REAL_SIMD_ARRAY FDPart3_90 = MulSIMD(FDPart3_41, FDPart3_53);
                   const REAL_SIMD_ARRAY FDPart3_91 = MulSIMD(FDPart3_25, Phi_dD1);
                   const REAL_SIMD_ARRAY FDPart3_92 = MulSIMD(FDPart3_91, FDPart3_Integer_2);
                   const REAL_SIMD_ARRAY FDPart3_93 = MulSIMD(FDPart3_Integer_2, MulSIMD(f0_of_xx0__D0, f0_of_xx0__DD00));
                   const REAL_SIMD_ARRAY FDPart3_94 = FusedMulAddSIMD(FDPart3_11, hDD_dD000, FusedMulAddSIMD(FDPart3_93, hDD00, FDPart3_93));
                   const REAL_SIMD_ARRAY FDPart3_96 = FusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(hDD01, FusedMulAddSIMD(f0_of_xx0, f0_of_xx0__DD00, FDPart3_11)), FusedMulSubSIMD(FDPart3_57, hDD_dD010, MulSIMD(FDPart3_11, hDD_dD001)));
                   const REAL_SIMD_ARRAY FDPart3_98 = FusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(hDD02, FusedMulAddSIMD(FDPart3_11, f1_of_xx1, MulSIMD(f0_of_xx0, MulSIMD(f0_of_xx0__DD00, f1_of_xx1)))), FusedMulSubSIMD(FDPart3_57, MulSIMD(f1_of_xx1, hDD_dD020), MulSIMD(FDPart3_11, hDD_dD002)));
                   const REAL_SIMD_ARRAY FDPart3_99 = MulSIMD(FDPart3_18, hDD_dD222);
                   const REAL_SIMD_ARRAY FDPart3_100 = SubSIMD(NegFusedMulAddSIMD(f0_of_xx0, MulSIMD(MulSIMD(FDPart3_13, FDPart3_Integer_2), MulSIMD(f0_of_xx0__D0, hDD22)), FusedMulSubSIMD(FDPart3_57, MulSIMD(f1_of_xx1, hDD_dD022), MulSIMD(FDPart3_18, hDD_dD220))), MulSIMD(MulSIMD(FDPart3_13, FDPart3_Integer_2), MulSIMD(f0_of_xx0, f0_of_xx0__D0)));
                   const REAL_SIMD_ARRAY FDPart3_101 = SubSIMD(NegFusedMulAddSIMD(f1_of_xx1, MulSIMD(MulSIMD(FDPart3_6, FDPart3_Integer_2), MulSIMD(f1_of_xx1__D1, hDD22)), FusedMulSubSIMD(FDPart3_77, hDD_dD122, MulSIMD(FDPart3_18, hDD_dD221))), MulSIMD(MulSIMD(FDPart3_6, FDPart3_Integer_2), MulSIMD(f1_of_xx1, f1_of_xx1__D1)));
                   const REAL_SIMD_ARRAY __RHS_exp_0 = FusedMulAddSIMD(FDPart3_1, MulSIMD(Phi_dupD1, vetU1), FusedMulAddSIMD(Phi_dupD0, DivSIMD(vetU0, f0_of_xx0__D0), FusedMulSubSIMD(FDPart3_3, Phi_dupD2, MulSIMD(Pi, alpha))));
                   const REAL_SIMD_ARRAY __RHS_exp_1 = FusedMulAddSIMD(MulSIMD(FDPart3_27, FDPart3_37), MulSIMD(Phi_dD0, alpha_dD1), FusedMulAddSIMD(MulSIMD(FDPart3_27, FDPart3_33), MulSIMD(Phi_dD2, alpha_dD1), FusedMulAddSIMD(MulSIMD(FDPart3_27, FDPart3_35), MulSIMD(Phi_dD2, alpha_dD2), FusedMulAddSIMD(MulSIMD(FDPart3_10, FDPart3_27), MulSIMD(Phi_dD2, alpha_dD0), FusedMulAddSIMD(MulSIMD(FDPart3_27, FDPart3_33), MulSIMD(Phi_dD1, alpha_dD2), FusedMulAddSIMD(Pi_dupD0, DivSIMD(vetU0, f0_of_xx0__D0), FusedMulAddSIMD(MulSIMD(FDPart3_10, FDPart3_27), MulSIMD(Phi_dD0, alpha_dD2), FusedMulAddSIMD(FDPart3_1, MulSIMD(Pi_dupD1, vetU1), FusedMulAddSIMD(FDPart3_40, MulSIMD(Phi_dD0, alpha_dD0), FusedMulAddSIMD(MulSIMD(FDPart3_27, FDPart3_37), MulSIMD(Phi_dD1, alpha_dD0), FusedMulAddSIMD(MulSIMD(FDPart3_27, FDPart3_41), MulSIMD(Phi_dD1, alpha_dD1), FusedMulAddSIMD(FDPart3_3, Pi_dupD2, MulSIMD(alpha, FusedMulAddSIMD(MulSIMD(FDPart3_39, Phi_dD0), MulSIMD(cf_dD0, cf), FusedMulAddSIMD(MulSIMD(FDPart3_33, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_24, FDPart3_25), MulSIMD(FDPart3_NegativeOne_, Phi_dDD12)), FusedMulAddSIMD(FDPart3_52, MulSIMD(FDPart3_87, FusedMulAddSIMD(FDPart3_81, FDPart3_86, FusedMulAddSIMD(FDPart3_82, FDPart3_84, MulSIMD(FDPart3_54, FDPart3_83)))), FusedMulAddSIMD(FDPart3_52, MulSIMD(FDPart3_91, FusedMulAddSIMD(FDPart3_81, FDPart3_90, FusedMulAddSIMD(FDPart3_82, FDPart3_86, MulSIMD(FDPart3_60, FDPart3_83)))), FusedMulAddSIMD(FDPart3_51, MulSIMD(FDPart3_92, FusedMulAddSIMD(FDPart3_60, FDPart3_67, FusedMulAddSIMD(FDPart3_11, MulSIMD(FDPart3_86, hDD_dD001), MulSIMD(FDPart3_59, FDPart3_90)))), FusedMulAddSIMD(FDPart3_52, MulSIMD(FDPart3_69, FusedMulAddSIMD(FDPart3_60, FDPart3_81, FusedMulAddSIMD(FDPart3_68, FDPart3_83, MulSIMD(FDPart3_54, FDPart3_82)))), FusedMulAddSIMD(FDPart3_51, MulSIMD(FDPart3_70, FusedMulAddSIMD(FDPart3_67, FDPart3_68, FusedMulAddSIMD(FDPart3_11, MulSIMD(FDPart3_54, hDD_dD001), MulSIMD(FDPart3_59, FDPart3_60)))), FusedMulAddSIMD(FDPart3_51, MulSIMD(FDPart3_88, FusedMulAddSIMD(FDPart3_59, FDPart3_86, FusedMulAddSIMD(FDPart3_11, MulSIMD(FDPart3_84, hDD_dD001), MulSIMD(FDPart3_54, FDPart3_67)))), FusedMulAddSIMD(FDPart3_50, MulSIMD(FDPart3_87, FusedMulAddSIMD(FDPart3_101, FDPart3_86, FusedMulAddSIMD(FDPart3_54, FDPart3_99, MulSIMD(FDPart3_100, FDPart3_84)))), FusedMulAddSIMD(FDPart3_50, MulSIMD(FDPart3_91, FusedMulAddSIMD(FDPart3_101, FDPart3_90, FusedMulAddSIMD(FDPart3_60, FDPart3_99, MulSIMD(FDPart3_100, FDPart3_86)))), FusedMulAddSIMD(FDPart3_48, MulSIMD(FDPart3_92, FusedMulAddSIMD(FDPart3_75, FDPart3_90, FusedMulAddSIMD(FDPart3_76, FDPart3_86, MulSIMD(FDPart3_60, FDPart3_80)))), FusedMulAddSIMD(FDPart3_50, MulSIMD(FDPart3_69, FusedMulAddSIMD(FDPart3_101, FDPart3_60, FusedMulAddSIMD(FDPart3_68, FDPart3_99, MulSIMD(FDPart3_100, FDPart3_54)))), FusedMulAddSIMD(FDPart3_48, MulSIMD(FDPart3_70, FusedMulAddSIMD(FDPart3_60, FDPart3_75, FusedMulAddSIMD(FDPart3_68, FDPart3_80, MulSIMD(FDPart3_54, FDPart3_76)))), FusedMulAddSIMD(FDPart3_48, MulSIMD(FDPart3_88, FusedMulAddSIMD(FDPart3_75, FDPart3_86, FusedMulAddSIMD(FDPart3_76, FDPart3_84, MulSIMD(FDPart3_54, FDPart3_80)))), FusedMulAddSIMD(FDPart3_47, MulSIMD(FDPart3_51, cf_dD0), FusedMulAddSIMD(FDPart3_47, MulSIMD(FDPart3_52, cf_dD1), FusedMulAddSIMD(FDPart3_46, MulSIMD(FDPart3_92, FusedMulAddSIMD(FDPart3_74, FDPart3_90, FusedMulAddSIMD(FDPart3_11, MulSIMD(FDPart3_86, hDD_dD002), MulSIMD(FDPart3_60, FDPart3_73)))), FusedMulAddSIMD(FDPart3_47, MulSIMD(FDPart3_48, cf_dD2), FusedMulAddSIMD(FDPart3_46, MulSIMD(FDPart3_70, FusedMulAddSIMD(FDPart3_68, FDPart3_73, FusedMulAddSIMD(FDPart3_11, MulSIMD(FDPart3_54, hDD_dD002), MulSIMD(FDPart3_60, FDPart3_74)))), FusedMulAddSIMD(FDPart3_46, MulSIMD(FDPart3_88, FusedMulAddSIMD(FDPart3_74, FDPart3_86, FusedMulAddSIMD(FDPart3_11, MulSIMD(FDPart3_84, hDD_dD002), MulSIMD(FDPart3_54, FDPart3_73)))), FusedMulAddSIMD(FDPart3_45, MulSIMD(FDPart3_48, cf_dD1), FusedMulAddSIMD(FDPart3_45, MulSIMD(FDPart3_50, cf_dD2), FusedMulAddSIMD(FDPart3_39, MulSIMD(FDPart3_91, FusedMulAddSIMD(FDPart3_86, FDPart3_94, FusedMulAddSIMD(FDPart3_90, FDPart3_96, MulSIMD(FDPart3_60, FDPart3_98)))), FusedMulAddSIMD(FDPart3_45, MulSIMD(FDPart3_46, cf_dD0), FusedMulAddSIMD(FDPart3_39, MulSIMD(FDPart3_69, FusedMulAddSIMD(FDPart3_60, FDPart3_96, FusedMulAddSIMD(FDPart3_68, FDPart3_98, MulSIMD(FDPart3_54, FDPart3_94)))), FusedMulAddSIMD(FDPart3_39, MulSIMD(FDPart3_87, FusedMulAddSIMD(FDPart3_84, FDPart3_94, FusedMulAddSIMD(FDPart3_86, FDPart3_96, MulSIMD(FDPart3_54, FDPart3_98)))), FusedMulAddSIMD(FDPart3_27, MulSIMD(FDPart3_41, Phi_dDD11), FusedMulAddSIMD(FDPart3_37, MulSIMD(FDPart3_44, cf_dD1), FusedMulAddSIMD(FDPart3_10, MulSIMD(FDPart3_44, cf_dD2), FusedMulAddSIMD(FDPart3_27, MulSIMD(FDPart3_35, Phi_dDD22), FusedMulAddSIMD(Phi, MulSIMD(mu_s, mu_s), FusedMulAddSIMD(Pi, trK, FusedMulAddSIMD(MulSIMD(FDPart3_37, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_24, FDPart3_25), MulSIMD(FDPart3_NegativeOne_, Phi_dDD01)), FusedMulSubSIMD(FDPart3_40, Phi_dDD00, MulSIMD(FDPart3_25, MulSIMD(MulSIMD(FDPart3_10, FDPart3_24), MulSIMD(FDPart3_Integer_2, Phi_dDD02))))))))))))))))))))))))))))))))))))))))))))))))));
                   WriteSIMD(&rhs_gfs[IDX4S(PHIGF, i0, i1, i2)], __RHS_exp_0);
                   WriteSIMD(&rhs_gfs[IDX4S(PIGF, i0, i1, i2)], __RHS_exp_1);
                }
            } // END LOOP: for (int i0 = NGHOSTS; i0 < NGHOSTS+Nxx0; i0 += SIMD_width)
        } // END LOOP: for (int i1 = NGHOSTS; i1 < NGHOSTS+Nxx1; i1++)
    } // END LOOP: for (int i2 = NGHOSTS; i2 < NGHOSTS+Nxx2; i2++)
}
