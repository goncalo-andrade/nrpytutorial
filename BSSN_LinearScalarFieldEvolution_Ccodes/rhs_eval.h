#include "finite_difference_functions.h"

/*
 * Evaluate the BSSN RHSs
 */
void rhs_eval(rfm_struct *restrict rfmstruct, const paramstruct *restrict params,
                    const REAL *restrict auxevol_gfs, const REAL *restrict in_gfs, REAL *restrict rhs_gfs) {
#include "./set_Cparameters-SIMD.h"

    #pragma omp parallel for
    for (int i2 = NGHOSTS; i2 < NGHOSTS+Nxx2; i2++) {
        #include "rfm_files/rfm_struct__SIMD_outer_read2.h"
        for (int i1 = NGHOSTS; i1 < NGHOSTS+Nxx1; i1++) {
            #include "rfm_files/rfm_struct__SIMD_outer_read1.h"
            for (int i0 = NGHOSTS; i0 < NGHOSTS+Nxx0; i0 += SIMD_width) {
                #include "rfm_files/rfm_struct__SIMD_inner_read0.h"
                {
                   /*
                    * NRPy+ Finite Difference Code Generation, Step 1 of 3: Read from main memory and compute finite difference stencils:
                    */
                   const REAL_SIMD_ARRAY hDD00_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY hDD00_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(HDD00GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY hDD01_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(HDD01GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY hDD02_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(HDD02GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY hDD11_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(HDD11GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY hDD12_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(HDD12GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY hDD22_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(HDD22GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY aDD00_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY aDD00_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY aDD00_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY aDD00_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY aDD00_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY aDD00_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY aDD00_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD00_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD00_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD00 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD00_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD00_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD00_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD00_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY aDD00_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY aDD00_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY aDD00_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY aDD00_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY aDD00_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(ADD00GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY aDD01_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY aDD01_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY aDD01_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY aDD01_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY aDD01_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY aDD01_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY aDD01_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD01_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD01_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD01 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD01_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD01_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD01_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD01_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY aDD01_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY aDD01_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY aDD01_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY aDD01_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY aDD01_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(ADD01GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY aDD02_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY aDD02_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY aDD02_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY aDD02_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY aDD02_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY aDD02_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY aDD02_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD02_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD02_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD02 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD02_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD02_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD02_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD02_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY aDD02_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY aDD02_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY aDD02_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY aDD02_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY aDD02_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(ADD02GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY aDD11_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY aDD11_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY aDD11_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY aDD11_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY aDD11_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY aDD11_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY aDD11_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD11_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD11_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD11 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD11_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD11_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD11_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD11_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY aDD11_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY aDD11_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY aDD11_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY aDD11_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY aDD11_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(ADD11GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY aDD12_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY aDD12_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY aDD12_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY aDD12_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY aDD12_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY aDD12_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY aDD12_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD12_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD12_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD12 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD12_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD12_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD12_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD12_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY aDD12_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY aDD12_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY aDD12_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY aDD12_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY aDD12_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(ADD12GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY aDD22_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY aDD22_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY aDD22_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY aDD22_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY aDD22_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY aDD22_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY aDD22_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD22_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD22_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD22 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD22_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD22_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD22_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY aDD22_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY aDD22_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY aDD22_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY aDD22_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY aDD22_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY aDD22_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(ADD22GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU0 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY lambdaU0_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU0GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU1 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY lambdaU1_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU1GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY lambdaU2_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(LAMBDAU2GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1m2_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1-2,i2-2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1m1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1-1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m2_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-2,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m1_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-1,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p1_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+1,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p2_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+2,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1p1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1+1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1p2_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1+2,i2-2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1m2_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1-2,i2-1)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1m1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1-1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU0_i0m2_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-2,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU0_i0m1_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-1,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU0_i0p1_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+1,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU0_i0p2_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+2,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1p1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1+1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1p2_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1+2,i2-1)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m2_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-2,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m1_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-1,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p1_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+1,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p2_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+2,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m2_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-2,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m1_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-1,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p1_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+1,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p2_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+2,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU0 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m2_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-2,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m1_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-1,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p1_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+1,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p2_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+2,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m2_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-2,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m1_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-1,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p1_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+1,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p2_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+2,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1m2_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1-2,i2+1)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1m1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1-1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU0_i0m2_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-2,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU0_i0m1_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-1,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU0_i0p1_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+1,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU0_i0p2_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+2,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1p1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1+1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1p2_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1+2,i2+1)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1m2_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1-2,i2+2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1m1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1-1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m2_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-2,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU0_i0m1_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0-1,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p1_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+1,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU0_i0p2_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0+2,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1p1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1+1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1p2_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1+2,i2+2)]);
                   const REAL_SIMD_ARRAY vetU0_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(VETU0GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1m2_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1-2,i2-2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1m1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1-1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m2_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-2,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m1_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-1,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p1_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+1,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p2_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+2,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1p1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1+1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1p2_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1+2,i2-2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1m2_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1-2,i2-1)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1m1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1-1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU1_i0m2_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-2,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU1_i0m1_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-1,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU1_i0p1_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+1,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU1_i0p2_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+2,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1p1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1+1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1p2_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1+2,i2-1)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m2_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-2,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m1_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-1,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p1_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+1,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p2_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+2,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m2_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-2,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m1_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-1,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p1_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+1,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p2_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+2,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m2_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-2,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m1_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-1,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p1_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+1,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p2_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+2,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m2_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-2,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m1_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-1,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p1_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+1,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p2_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+2,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1m2_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1-2,i2+1)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1m1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1-1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU1_i0m2_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-2,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU1_i0m1_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-1,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU1_i0p1_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+1,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU1_i0p2_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+2,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1p1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1+1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1p2_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1+2,i2+1)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1m2_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1-2,i2+2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1m1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1-1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m2_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-2,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU1_i0m1_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0-1,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p1_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+1,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU1_i0p2_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0+2,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1p1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1+1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1p2_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1+2,i2+2)]);
                   const REAL_SIMD_ARRAY vetU1_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(VETU1GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1m2_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1-2,i2-2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1m1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1-1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m2_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-2,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m1_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-1,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p1_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+1,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p2_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+2,i1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1p1_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1+1,i2-2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1p2_i2m2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1+2,i2-2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1m2_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1-2,i2-1)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1m1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1-1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU2_i0m2_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-2,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU2_i0m1_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-1,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU2_i0p1_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+1,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU2_i0p2_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+2,i1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1p1_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1+1,i2-1)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1p2_i2m1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1+2,i2-1)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m2_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-2,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m1_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-1,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p1_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+1,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p2_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+2,i1-2,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m2_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-2,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m1_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-1,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p1_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+1,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p2_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+2,i1-1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m2_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-2,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m1_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-1,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p1_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+1,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p2_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+2,i1+1,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m2_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-2,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m1_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-1,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p1_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+1,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p2_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+2,i1+2,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1m2_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1-2,i2+1)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1m1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1-1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU2_i0m2_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-2,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU2_i0m1_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-1,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU2_i0p1_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+1,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU2_i0p2_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+2,i1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1p1_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1+1,i2+1)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1p2_i2p1 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1+2,i2+1)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1m2_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1-2,i2+2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1m1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1-1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m2_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-2,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU2_i0m1_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0-1,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p1_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+1,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU2_i0p2_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0+2,i1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1p1_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1+1,i2+2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1p2_i2p2 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1+2,i2+2)]);
                   const REAL_SIMD_ARRAY vetU2_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(VETU2GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY betU0_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY betU0_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY betU0_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY betU0_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY betU0_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY betU0_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY betU0_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY betU0_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY betU0_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY betU0 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY betU0_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY betU0_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY betU0_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY betU0_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY betU0_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY betU0_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY betU0_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY betU0_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY betU0_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(BETU0GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY betU1_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY betU1_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY betU1_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY betU1_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY betU1_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY betU1_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY betU1_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY betU1_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY betU1_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY betU1 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY betU1_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY betU1_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY betU1_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY betU1_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY betU1_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY betU1_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY betU1_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY betU1_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY betU1_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(BETU1GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY betU2_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY betU2_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY betU2_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY betU2_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY betU2_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY betU2_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY betU2_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY betU2_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY betU2_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY betU2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY betU2_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY betU2_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY betU2_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY betU2_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY betU2_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY betU2_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY betU2_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY betU2_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY betU2_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(BETU2GF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY trK_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY trK_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY trK_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY trK_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY trK_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY trK_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY trK_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY trK_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY trK_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY trK = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY trK_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY trK_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY trK_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY trK_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY trK_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY trK_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY trK_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY trK_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY trK_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(TRKGF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY cf_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m2_i2m2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-2,i2-2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m1_i2m2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-1,i2-2)]);
                   const REAL_SIMD_ARRAY cf_i0m2_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-2,i1,i2-2)]);
                   const REAL_SIMD_ARRAY cf_i0m1_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-1,i1,i2-2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY cf_i0p1_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+1,i1,i2-2)]);
                   const REAL_SIMD_ARRAY cf_i0p2_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+2,i1,i2-2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p1_i2m2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+1,i2-2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p2_i2m2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+2,i2-2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m2_i2m1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-2,i2-1)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m1_i2m1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-1,i2-1)]);
                   const REAL_SIMD_ARRAY cf_i0m2_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-2,i1,i2-1)]);
                   const REAL_SIMD_ARRAY cf_i0m1_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-1,i1,i2-1)]);
                   const REAL_SIMD_ARRAY cf_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY cf_i0p1_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+1,i1,i2-1)]);
                   const REAL_SIMD_ARRAY cf_i0p2_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+2,i1,i2-1)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p1_i2m1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+1,i2-1)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p2_i2m1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+2,i2-1)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m2_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-2,i1-2,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m1_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-1,i1-2,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p1_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+1,i1-2,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p2_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+2,i1-2,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m2_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-2,i1-1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m1_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-1,i1-1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p1_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+1,i1-1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p2_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+2,i1-1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY cf = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m2_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-2,i1+1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m1_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-1,i1+1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p1_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+1,i1+1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p2_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+2,i1+1,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m2_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-2,i1+2,i2)]);
                   const REAL_SIMD_ARRAY cf_i0m1_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-1,i1+2,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p1_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+1,i1+2,i2)]);
                   const REAL_SIMD_ARRAY cf_i0p2_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+2,i1+2,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m2_i2p1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-2,i2+1)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m1_i2p1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-1,i2+1)]);
                   const REAL_SIMD_ARRAY cf_i0m2_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-2,i1,i2+1)]);
                   const REAL_SIMD_ARRAY cf_i0m1_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-1,i1,i2+1)]);
                   const REAL_SIMD_ARRAY cf_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY cf_i0p1_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+1,i1,i2+1)]);
                   const REAL_SIMD_ARRAY cf_i0p2_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+2,i1,i2+1)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p1_i2p1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+1,i2+1)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p2_i2p1 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+2,i2+1)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m2_i2p2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-2,i2+2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1m1_i2p2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1-1,i2+2)]);
                   const REAL_SIMD_ARRAY cf_i0m2_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-2,i1,i2+2)]);
                   const REAL_SIMD_ARRAY cf_i0m1_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0-1,i1,i2+2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY cf_i0p1_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+1,i1,i2+2)]);
                   const REAL_SIMD_ARRAY cf_i0p2_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0+2,i1,i2+2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p1_i2p2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+1,i2+2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1p2_i2p2 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1+2,i2+2)]);
                   const REAL_SIMD_ARRAY cf_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(CFGF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1_i2m3 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2-3)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m2_i2m2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-2,i2-2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m1_i2m2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-1,i2-2)]);
                   const REAL_SIMD_ARRAY alpha_i0m2_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-2,i1,i2-2)]);
                   const REAL_SIMD_ARRAY alpha_i0m1_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-1,i1,i2-2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2-2)]);
                   const REAL_SIMD_ARRAY alpha_i0p1_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+1,i1,i2-2)]);
                   const REAL_SIMD_ARRAY alpha_i0p2_i1_i2m2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+2,i1,i2-2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p1_i2m2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+1,i2-2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p2_i2m2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+2,i2-2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m2_i2m1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-2,i2-1)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m1_i2m1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-1,i2-1)]);
                   const REAL_SIMD_ARRAY alpha_i0m2_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-2,i1,i2-1)]);
                   const REAL_SIMD_ARRAY alpha_i0m1_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-1,i1,i2-1)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2-1)]);
                   const REAL_SIMD_ARRAY alpha_i0p1_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+1,i1,i2-1)]);
                   const REAL_SIMD_ARRAY alpha_i0p2_i1_i2m1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+2,i1,i2-1)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p1_i2m1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+1,i2-1)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p2_i2m1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+2,i2-1)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m3_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-3,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m2_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-2,i1-2,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m1_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-1,i1-2,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-2,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p1_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+1,i1-2,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p2_i1m2_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+2,i1-2,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m2_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-2,i1-1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m1_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-1,i1-1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p1_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+1,i1-1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p2_i1m1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+2,i1-1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-3,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-2,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-1,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p1_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+1,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p2_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+2,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p3_i1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+3,i1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m2_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-2,i1+1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m1_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-1,i1+1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p1_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+1,i1+1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p2_i1p1_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+2,i1+1,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m2_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-2,i1+2,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0m1_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-1,i1+2,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+2,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p1_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+1,i1+2,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0p2_i1p2_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+2,i1+2,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p3_i2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+3,i2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m2_i2p1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-2,i2+1)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m1_i2p1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-1,i2+1)]);
                   const REAL_SIMD_ARRAY alpha_i0m2_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-2,i1,i2+1)]);
                   const REAL_SIMD_ARRAY alpha_i0m1_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-1,i1,i2+1)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2+1)]);
                   const REAL_SIMD_ARRAY alpha_i0p1_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+1,i1,i2+1)]);
                   const REAL_SIMD_ARRAY alpha_i0p2_i1_i2p1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+2,i1,i2+1)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p1_i2p1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+1,i2+1)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p2_i2p1 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+2,i2+1)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m2_i2p2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-2,i2+2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1m1_i2p2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1-1,i2+2)]);
                   const REAL_SIMD_ARRAY alpha_i0m2_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-2,i1,i2+2)]);
                   const REAL_SIMD_ARRAY alpha_i0m1_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0-1,i1,i2+2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2+2)]);
                   const REAL_SIMD_ARRAY alpha_i0p1_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+1,i1,i2+2)]);
                   const REAL_SIMD_ARRAY alpha_i0p2_i1_i2p2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0+2,i1,i2+2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p1_i2p2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+1,i2+2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1p2_i2p2 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1+2,i2+2)]);
                   const REAL_SIMD_ARRAY alpha_i0_i1_i2p3 = ReadSIMD(&in_gfs[IDX4S(ALPHAGF, i0,i1,i2+3)]);
                   const REAL_SIMD_ARRAY RbarDD00 = ReadSIMD(&auxevol_gfs[IDX4S(RBARDD00GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY RbarDD01 = ReadSIMD(&auxevol_gfs[IDX4S(RBARDD01GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY RbarDD02 = ReadSIMD(&auxevol_gfs[IDX4S(RBARDD02GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY RbarDD11 = ReadSIMD(&auxevol_gfs[IDX4S(RBARDD11GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY RbarDD12 = ReadSIMD(&auxevol_gfs[IDX4S(RBARDD12GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY RbarDD22 = ReadSIMD(&auxevol_gfs[IDX4S(RBARDD22GF, i0,i1,i2)]);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD000 = SIMD_order_4_f_ddnD0(invdx0,aDD00_i0m3_i1_i2,aDD00_i0m2_i1_i2,aDD00_i0m1_i1_i2,aDD00,aDD00_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD010 = SIMD_order_4_f_ddnD0(invdx0,aDD01_i0m3_i1_i2,aDD01_i0m2_i1_i2,aDD01_i0m1_i1_i2,aDD01,aDD01_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD020 = SIMD_order_4_f_ddnD0(invdx0,aDD02_i0m3_i1_i2,aDD02_i0m2_i1_i2,aDD02_i0m1_i1_i2,aDD02,aDD02_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD110 = SIMD_order_4_f_ddnD0(invdx0,aDD11_i0m3_i1_i2,aDD11_i0m2_i1_i2,aDD11_i0m1_i1_i2,aDD11,aDD11_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD120 = SIMD_order_4_f_ddnD0(invdx0,aDD12_i0m3_i1_i2,aDD12_i0m2_i1_i2,aDD12_i0m1_i1_i2,aDD12,aDD12_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD220 = SIMD_order_4_f_ddnD0(invdx0,aDD22_i0m3_i1_i2,aDD22_i0m2_i1_i2,aDD22_i0m1_i1_i2,aDD22,aDD22_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputalpha_ddnD0 = SIMD_order_4_f_ddnD0(invdx0,alpha_i0m3_i1_i2,alpha_i0m2_i1_i2,alpha_i0m1_i1_i2,alpha,alpha_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_ddnD00 = SIMD_order_4_f_ddnD0(invdx0,betU0_i0m3_i1_i2,betU0_i0m2_i1_i2,betU0_i0m1_i1_i2,betU0,betU0_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_ddnD10 = SIMD_order_4_f_ddnD0(invdx0,betU1_i0m3_i1_i2,betU1_i0m2_i1_i2,betU1_i0m1_i1_i2,betU1,betU1_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_ddnD20 = SIMD_order_4_f_ddnD0(invdx0,betU2_i0m3_i1_i2,betU2_i0m2_i1_i2,betU2_i0m1_i1_i2,betU2,betU2_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputcf_ddnD0 = SIMD_order_4_f_ddnD0(invdx0,cf_i0m3_i1_i2,cf_i0m2_i1_i2,cf_i0m1_i1_i2,cf,cf_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD000 = SIMD_order_4_f_ddnD0(invdx0,hDD00_i0m3_i1_i2,hDD00_i0m2_i1_i2,hDD00_i0m1_i1_i2,hDD00,hDD00_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD010 = SIMD_order_4_f_ddnD0(invdx0,hDD01_i0m3_i1_i2,hDD01_i0m2_i1_i2,hDD01_i0m1_i1_i2,hDD01,hDD01_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD020 = SIMD_order_4_f_ddnD0(invdx0,hDD02_i0m3_i1_i2,hDD02_i0m2_i1_i2,hDD02_i0m1_i1_i2,hDD02,hDD02_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD110 = SIMD_order_4_f_ddnD0(invdx0,hDD11_i0m3_i1_i2,hDD11_i0m2_i1_i2,hDD11_i0m1_i1_i2,hDD11,hDD11_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD120 = SIMD_order_4_f_ddnD0(invdx0,hDD12_i0m3_i1_i2,hDD12_i0m2_i1_i2,hDD12_i0m1_i1_i2,hDD12,hDD12_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD220 = SIMD_order_4_f_ddnD0(invdx0,hDD22_i0m3_i1_i2,hDD22_i0m2_i1_i2,hDD22_i0m1_i1_i2,hDD22,hDD22_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_ddnD00 = SIMD_order_4_f_ddnD0(invdx0,lambdaU0_i0m3_i1_i2,lambdaU0_i0m2_i1_i2,lambdaU0_i0m1_i1_i2,lambdaU0,lambdaU0_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_ddnD10 = SIMD_order_4_f_ddnD0(invdx0,lambdaU1_i0m3_i1_i2,lambdaU1_i0m2_i1_i2,lambdaU1_i0m1_i1_i2,lambdaU1,lambdaU1_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_ddnD20 = SIMD_order_4_f_ddnD0(invdx0,lambdaU2_i0m3_i1_i2,lambdaU2_i0m2_i1_i2,lambdaU2_i0m1_i1_i2,lambdaU2,lambdaU2_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputtrK_ddnD0 = SIMD_order_4_f_ddnD0(invdx0,trK_i0m3_i1_i2,trK_i0m2_i1_i2,trK_i0m1_i1_i2,trK,trK_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_ddnD00 = SIMD_order_4_f_ddnD0(invdx0,vetU0_i0m3_i1_i2,vetU0_i0m2_i1_i2,vetU0_i0m1_i1_i2,vetU0,vetU0_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_ddnD10 = SIMD_order_4_f_ddnD0(invdx0,vetU1_i0m3_i1_i2,vetU1_i0m2_i1_i2,vetU1_i0m1_i1_i2,vetU1,vetU1_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_ddnD20 = SIMD_order_4_f_ddnD0(invdx0,vetU2_i0m3_i1_i2,vetU2_i0m2_i1_i2,vetU2_i0m1_i1_i2,vetU2,vetU2_i0p1_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD001 = SIMD_order_4_f_ddnD1(invdx1,aDD00_i0_i1m3_i2,aDD00_i0_i1m2_i2,aDD00_i0_i1m1_i2,aDD00,aDD00_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD011 = SIMD_order_4_f_ddnD1(invdx1,aDD01_i0_i1m3_i2,aDD01_i0_i1m2_i2,aDD01_i0_i1m1_i2,aDD01,aDD01_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD021 = SIMD_order_4_f_ddnD1(invdx1,aDD02_i0_i1m3_i2,aDD02_i0_i1m2_i2,aDD02_i0_i1m1_i2,aDD02,aDD02_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD111 = SIMD_order_4_f_ddnD1(invdx1,aDD11_i0_i1m3_i2,aDD11_i0_i1m2_i2,aDD11_i0_i1m1_i2,aDD11,aDD11_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD121 = SIMD_order_4_f_ddnD1(invdx1,aDD12_i0_i1m3_i2,aDD12_i0_i1m2_i2,aDD12_i0_i1m1_i2,aDD12,aDD12_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD221 = SIMD_order_4_f_ddnD1(invdx1,aDD22_i0_i1m3_i2,aDD22_i0_i1m2_i2,aDD22_i0_i1m1_i2,aDD22,aDD22_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputalpha_ddnD1 = SIMD_order_4_f_ddnD1(invdx1,alpha_i0_i1m3_i2,alpha_i0_i1m2_i2,alpha_i0_i1m1_i2,alpha,alpha_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_ddnD01 = SIMD_order_4_f_ddnD1(invdx1,betU0_i0_i1m3_i2,betU0_i0_i1m2_i2,betU0_i0_i1m1_i2,betU0,betU0_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_ddnD11 = SIMD_order_4_f_ddnD1(invdx1,betU1_i0_i1m3_i2,betU1_i0_i1m2_i2,betU1_i0_i1m1_i2,betU1,betU1_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_ddnD21 = SIMD_order_4_f_ddnD1(invdx1,betU2_i0_i1m3_i2,betU2_i0_i1m2_i2,betU2_i0_i1m1_i2,betU2,betU2_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputcf_ddnD1 = SIMD_order_4_f_ddnD1(invdx1,cf_i0_i1m3_i2,cf_i0_i1m2_i2,cf_i0_i1m1_i2,cf,cf_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD001 = SIMD_order_4_f_ddnD1(invdx1,hDD00_i0_i1m3_i2,hDD00_i0_i1m2_i2,hDD00_i0_i1m1_i2,hDD00,hDD00_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD011 = SIMD_order_4_f_ddnD1(invdx1,hDD01_i0_i1m3_i2,hDD01_i0_i1m2_i2,hDD01_i0_i1m1_i2,hDD01,hDD01_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD021 = SIMD_order_4_f_ddnD1(invdx1,hDD02_i0_i1m3_i2,hDD02_i0_i1m2_i2,hDD02_i0_i1m1_i2,hDD02,hDD02_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD111 = SIMD_order_4_f_ddnD1(invdx1,hDD11_i0_i1m3_i2,hDD11_i0_i1m2_i2,hDD11_i0_i1m1_i2,hDD11,hDD11_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD121 = SIMD_order_4_f_ddnD1(invdx1,hDD12_i0_i1m3_i2,hDD12_i0_i1m2_i2,hDD12_i0_i1m1_i2,hDD12,hDD12_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD221 = SIMD_order_4_f_ddnD1(invdx1,hDD22_i0_i1m3_i2,hDD22_i0_i1m2_i2,hDD22_i0_i1m1_i2,hDD22,hDD22_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_ddnD01 = SIMD_order_4_f_ddnD1(invdx1,lambdaU0_i0_i1m3_i2,lambdaU0_i0_i1m2_i2,lambdaU0_i0_i1m1_i2,lambdaU0,lambdaU0_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_ddnD11 = SIMD_order_4_f_ddnD1(invdx1,lambdaU1_i0_i1m3_i2,lambdaU1_i0_i1m2_i2,lambdaU1_i0_i1m1_i2,lambdaU1,lambdaU1_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_ddnD21 = SIMD_order_4_f_ddnD1(invdx1,lambdaU2_i0_i1m3_i2,lambdaU2_i0_i1m2_i2,lambdaU2_i0_i1m1_i2,lambdaU2,lambdaU2_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputtrK_ddnD1 = SIMD_order_4_f_ddnD1(invdx1,trK_i0_i1m3_i2,trK_i0_i1m2_i2,trK_i0_i1m1_i2,trK,trK_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_ddnD01 = SIMD_order_4_f_ddnD1(invdx1,vetU0_i0_i1m3_i2,vetU0_i0_i1m2_i2,vetU0_i0_i1m1_i2,vetU0,vetU0_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_ddnD11 = SIMD_order_4_f_ddnD1(invdx1,vetU1_i0_i1m3_i2,vetU1_i0_i1m2_i2,vetU1_i0_i1m1_i2,vetU1,vetU1_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_ddnD21 = SIMD_order_4_f_ddnD1(invdx1,vetU2_i0_i1m3_i2,vetU2_i0_i1m2_i2,vetU2_i0_i1m1_i2,vetU2,vetU2_i0_i1p1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD002 = SIMD_order_4_f_ddnD2(invdx2,aDD00_i0_i1_i2m3,aDD00_i0_i1_i2m2,aDD00_i0_i1_i2m1,aDD00,aDD00_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD012 = SIMD_order_4_f_ddnD2(invdx2,aDD01_i0_i1_i2m3,aDD01_i0_i1_i2m2,aDD01_i0_i1_i2m1,aDD01,aDD01_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD022 = SIMD_order_4_f_ddnD2(invdx2,aDD02_i0_i1_i2m3,aDD02_i0_i1_i2m2,aDD02_i0_i1_i2m1,aDD02,aDD02_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD112 = SIMD_order_4_f_ddnD2(invdx2,aDD11_i0_i1_i2m3,aDD11_i0_i1_i2m2,aDD11_i0_i1_i2m1,aDD11,aDD11_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD122 = SIMD_order_4_f_ddnD2(invdx2,aDD12_i0_i1_i2m3,aDD12_i0_i1_i2m2,aDD12_i0_i1_i2m1,aDD12,aDD12_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_ddnD222 = SIMD_order_4_f_ddnD2(invdx2,aDD22_i0_i1_i2m3,aDD22_i0_i1_i2m2,aDD22_i0_i1_i2m1,aDD22,aDD22_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputalpha_ddnD2 = SIMD_order_4_f_ddnD2(invdx2,alpha_i0_i1_i2m3,alpha_i0_i1_i2m2,alpha_i0_i1_i2m1,alpha,alpha_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_ddnD02 = SIMD_order_4_f_ddnD2(invdx2,betU0_i0_i1_i2m3,betU0_i0_i1_i2m2,betU0_i0_i1_i2m1,betU0,betU0_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_ddnD12 = SIMD_order_4_f_ddnD2(invdx2,betU1_i0_i1_i2m3,betU1_i0_i1_i2m2,betU1_i0_i1_i2m1,betU1,betU1_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_ddnD22 = SIMD_order_4_f_ddnD2(invdx2,betU2_i0_i1_i2m3,betU2_i0_i1_i2m2,betU2_i0_i1_i2m1,betU2,betU2_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputcf_ddnD2 = SIMD_order_4_f_ddnD2(invdx2,cf_i0_i1_i2m3,cf_i0_i1_i2m2,cf_i0_i1_i2m1,cf,cf_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD002 = SIMD_order_4_f_ddnD2(invdx2,hDD00_i0_i1_i2m3,hDD00_i0_i1_i2m2,hDD00_i0_i1_i2m1,hDD00,hDD00_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD012 = SIMD_order_4_f_ddnD2(invdx2,hDD01_i0_i1_i2m3,hDD01_i0_i1_i2m2,hDD01_i0_i1_i2m1,hDD01,hDD01_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD022 = SIMD_order_4_f_ddnD2(invdx2,hDD02_i0_i1_i2m3,hDD02_i0_i1_i2m2,hDD02_i0_i1_i2m1,hDD02,hDD02_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD112 = SIMD_order_4_f_ddnD2(invdx2,hDD11_i0_i1_i2m3,hDD11_i0_i1_i2m2,hDD11_i0_i1_i2m1,hDD11,hDD11_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD122 = SIMD_order_4_f_ddnD2(invdx2,hDD12_i0_i1_i2m3,hDD12_i0_i1_i2m2,hDD12_i0_i1_i2m1,hDD12,hDD12_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_ddnD222 = SIMD_order_4_f_ddnD2(invdx2,hDD22_i0_i1_i2m3,hDD22_i0_i1_i2m2,hDD22_i0_i1_i2m1,hDD22,hDD22_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_ddnD02 = SIMD_order_4_f_ddnD2(invdx2,lambdaU0_i0_i1_i2m3,lambdaU0_i0_i1_i2m2,lambdaU0_i0_i1_i2m1,lambdaU0,lambdaU0_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_ddnD12 = SIMD_order_4_f_ddnD2(invdx2,lambdaU1_i0_i1_i2m3,lambdaU1_i0_i1_i2m2,lambdaU1_i0_i1_i2m1,lambdaU1,lambdaU1_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_ddnD22 = SIMD_order_4_f_ddnD2(invdx2,lambdaU2_i0_i1_i2m3,lambdaU2_i0_i1_i2m2,lambdaU2_i0_i1_i2m1,lambdaU2,lambdaU2_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputtrK_ddnD2 = SIMD_order_4_f_ddnD2(invdx2,trK_i0_i1_i2m3,trK_i0_i1_i2m2,trK_i0_i1_i2m1,trK,trK_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_ddnD02 = SIMD_order_4_f_ddnD2(invdx2,vetU0_i0_i1_i2m3,vetU0_i0_i1_i2m2,vetU0_i0_i1_i2m1,vetU0,vetU0_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_ddnD12 = SIMD_order_4_f_ddnD2(invdx2,vetU1_i0_i1_i2m3,vetU1_i0_i1_i2m2,vetU1_i0_i1_i2m1,vetU1,vetU1_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_ddnD22 = SIMD_order_4_f_ddnD2(invdx2,vetU2_i0_i1_i2m3,vetU2_i0_i1_i2m2,vetU2_i0_i1_i2m1,vetU2,vetU2_i0_i1_i2p1);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD000 = SIMD_order_4_f_dupD0(invdx0,aDD00_i0m1_i1_i2,aDD00,aDD00_i0p1_i1_i2,aDD00_i0p2_i1_i2,aDD00_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD010 = SIMD_order_4_f_dupD0(invdx0,aDD01_i0m1_i1_i2,aDD01,aDD01_i0p1_i1_i2,aDD01_i0p2_i1_i2,aDD01_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD020 = SIMD_order_4_f_dupD0(invdx0,aDD02_i0m1_i1_i2,aDD02,aDD02_i0p1_i1_i2,aDD02_i0p2_i1_i2,aDD02_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD110 = SIMD_order_4_f_dupD0(invdx0,aDD11_i0m1_i1_i2,aDD11,aDD11_i0p1_i1_i2,aDD11_i0p2_i1_i2,aDD11_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD120 = SIMD_order_4_f_dupD0(invdx0,aDD12_i0m1_i1_i2,aDD12,aDD12_i0p1_i1_i2,aDD12_i0p2_i1_i2,aDD12_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD220 = SIMD_order_4_f_dupD0(invdx0,aDD22_i0m1_i1_i2,aDD22,aDD22_i0p1_i1_i2,aDD22_i0p2_i1_i2,aDD22_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputalpha_dupD0 = SIMD_order_4_f_dupD0(invdx0,alpha_i0m1_i1_i2,alpha,alpha_i0p1_i1_i2,alpha_i0p2_i1_i2,alpha_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_dupD00 = SIMD_order_4_f_dupD0(invdx0,betU0_i0m1_i1_i2,betU0,betU0_i0p1_i1_i2,betU0_i0p2_i1_i2,betU0_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_dupD10 = SIMD_order_4_f_dupD0(invdx0,betU1_i0m1_i1_i2,betU1,betU1_i0p1_i1_i2,betU1_i0p2_i1_i2,betU1_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_dupD20 = SIMD_order_4_f_dupD0(invdx0,betU2_i0m1_i1_i2,betU2,betU2_i0p1_i1_i2,betU2_i0p2_i1_i2,betU2_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputcf_dupD0 = SIMD_order_4_f_dupD0(invdx0,cf_i0m1_i1_i2,cf,cf_i0p1_i1_i2,cf_i0p2_i1_i2,cf_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD000 = SIMD_order_4_f_dupD0(invdx0,hDD00_i0m1_i1_i2,hDD00,hDD00_i0p1_i1_i2,hDD00_i0p2_i1_i2,hDD00_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD010 = SIMD_order_4_f_dupD0(invdx0,hDD01_i0m1_i1_i2,hDD01,hDD01_i0p1_i1_i2,hDD01_i0p2_i1_i2,hDD01_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD020 = SIMD_order_4_f_dupD0(invdx0,hDD02_i0m1_i1_i2,hDD02,hDD02_i0p1_i1_i2,hDD02_i0p2_i1_i2,hDD02_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD110 = SIMD_order_4_f_dupD0(invdx0,hDD11_i0m1_i1_i2,hDD11,hDD11_i0p1_i1_i2,hDD11_i0p2_i1_i2,hDD11_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD120 = SIMD_order_4_f_dupD0(invdx0,hDD12_i0m1_i1_i2,hDD12,hDD12_i0p1_i1_i2,hDD12_i0p2_i1_i2,hDD12_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD220 = SIMD_order_4_f_dupD0(invdx0,hDD22_i0m1_i1_i2,hDD22,hDD22_i0p1_i1_i2,hDD22_i0p2_i1_i2,hDD22_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_dupD00 = SIMD_order_4_f_dupD0(invdx0,lambdaU0_i0m1_i1_i2,lambdaU0,lambdaU0_i0p1_i1_i2,lambdaU0_i0p2_i1_i2,lambdaU0_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_dupD10 = SIMD_order_4_f_dupD0(invdx0,lambdaU1_i0m1_i1_i2,lambdaU1,lambdaU1_i0p1_i1_i2,lambdaU1_i0p2_i1_i2,lambdaU1_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_dupD20 = SIMD_order_4_f_dupD0(invdx0,lambdaU2_i0m1_i1_i2,lambdaU2,lambdaU2_i0p1_i1_i2,lambdaU2_i0p2_i1_i2,lambdaU2_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputtrK_dupD0 = SIMD_order_4_f_dupD0(invdx0,trK_i0m1_i1_i2,trK,trK_i0p1_i1_i2,trK_i0p2_i1_i2,trK_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_dupD00 = SIMD_order_4_f_dupD0(invdx0,vetU0_i0m1_i1_i2,vetU0,vetU0_i0p1_i1_i2,vetU0_i0p2_i1_i2,vetU0_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_dupD10 = SIMD_order_4_f_dupD0(invdx0,vetU1_i0m1_i1_i2,vetU1,vetU1_i0p1_i1_i2,vetU1_i0p2_i1_i2,vetU1_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_dupD20 = SIMD_order_4_f_dupD0(invdx0,vetU2_i0m1_i1_i2,vetU2,vetU2_i0p1_i1_i2,vetU2_i0p2_i1_i2,vetU2_i0p3_i1_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD001 = SIMD_order_4_f_dupD1(invdx1,aDD00_i0_i1m1_i2,aDD00,aDD00_i0_i1p1_i2,aDD00_i0_i1p2_i2,aDD00_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD011 = SIMD_order_4_f_dupD1(invdx1,aDD01_i0_i1m1_i2,aDD01,aDD01_i0_i1p1_i2,aDD01_i0_i1p2_i2,aDD01_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD021 = SIMD_order_4_f_dupD1(invdx1,aDD02_i0_i1m1_i2,aDD02,aDD02_i0_i1p1_i2,aDD02_i0_i1p2_i2,aDD02_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD111 = SIMD_order_4_f_dupD1(invdx1,aDD11_i0_i1m1_i2,aDD11,aDD11_i0_i1p1_i2,aDD11_i0_i1p2_i2,aDD11_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD121 = SIMD_order_4_f_dupD1(invdx1,aDD12_i0_i1m1_i2,aDD12,aDD12_i0_i1p1_i2,aDD12_i0_i1p2_i2,aDD12_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD221 = SIMD_order_4_f_dupD1(invdx1,aDD22_i0_i1m1_i2,aDD22,aDD22_i0_i1p1_i2,aDD22_i0_i1p2_i2,aDD22_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputalpha_dupD1 = SIMD_order_4_f_dupD1(invdx1,alpha_i0_i1m1_i2,alpha,alpha_i0_i1p1_i2,alpha_i0_i1p2_i2,alpha_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_dupD01 = SIMD_order_4_f_dupD1(invdx1,betU0_i0_i1m1_i2,betU0,betU0_i0_i1p1_i2,betU0_i0_i1p2_i2,betU0_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_dupD11 = SIMD_order_4_f_dupD1(invdx1,betU1_i0_i1m1_i2,betU1,betU1_i0_i1p1_i2,betU1_i0_i1p2_i2,betU1_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_dupD21 = SIMD_order_4_f_dupD1(invdx1,betU2_i0_i1m1_i2,betU2,betU2_i0_i1p1_i2,betU2_i0_i1p2_i2,betU2_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputcf_dupD1 = SIMD_order_4_f_dupD1(invdx1,cf_i0_i1m1_i2,cf,cf_i0_i1p1_i2,cf_i0_i1p2_i2,cf_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD001 = SIMD_order_4_f_dupD1(invdx1,hDD00_i0_i1m1_i2,hDD00,hDD00_i0_i1p1_i2,hDD00_i0_i1p2_i2,hDD00_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD011 = SIMD_order_4_f_dupD1(invdx1,hDD01_i0_i1m1_i2,hDD01,hDD01_i0_i1p1_i2,hDD01_i0_i1p2_i2,hDD01_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD021 = SIMD_order_4_f_dupD1(invdx1,hDD02_i0_i1m1_i2,hDD02,hDD02_i0_i1p1_i2,hDD02_i0_i1p2_i2,hDD02_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD111 = SIMD_order_4_f_dupD1(invdx1,hDD11_i0_i1m1_i2,hDD11,hDD11_i0_i1p1_i2,hDD11_i0_i1p2_i2,hDD11_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD121 = SIMD_order_4_f_dupD1(invdx1,hDD12_i0_i1m1_i2,hDD12,hDD12_i0_i1p1_i2,hDD12_i0_i1p2_i2,hDD12_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD221 = SIMD_order_4_f_dupD1(invdx1,hDD22_i0_i1m1_i2,hDD22,hDD22_i0_i1p1_i2,hDD22_i0_i1p2_i2,hDD22_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_dupD01 = SIMD_order_4_f_dupD1(invdx1,lambdaU0_i0_i1m1_i2,lambdaU0,lambdaU0_i0_i1p1_i2,lambdaU0_i0_i1p2_i2,lambdaU0_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_dupD11 = SIMD_order_4_f_dupD1(invdx1,lambdaU1_i0_i1m1_i2,lambdaU1,lambdaU1_i0_i1p1_i2,lambdaU1_i0_i1p2_i2,lambdaU1_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_dupD21 = SIMD_order_4_f_dupD1(invdx1,lambdaU2_i0_i1m1_i2,lambdaU2,lambdaU2_i0_i1p1_i2,lambdaU2_i0_i1p2_i2,lambdaU2_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputtrK_dupD1 = SIMD_order_4_f_dupD1(invdx1,trK_i0_i1m1_i2,trK,trK_i0_i1p1_i2,trK_i0_i1p2_i2,trK_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_dupD01 = SIMD_order_4_f_dupD1(invdx1,vetU0_i0_i1m1_i2,vetU0,vetU0_i0_i1p1_i2,vetU0_i0_i1p2_i2,vetU0_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_dupD11 = SIMD_order_4_f_dupD1(invdx1,vetU1_i0_i1m1_i2,vetU1,vetU1_i0_i1p1_i2,vetU1_i0_i1p2_i2,vetU1_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_dupD21 = SIMD_order_4_f_dupD1(invdx1,vetU2_i0_i1m1_i2,vetU2,vetU2_i0_i1p1_i2,vetU2_i0_i1p2_i2,vetU2_i0_i1p3_i2);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD002 = SIMD_order_4_f_dupD2(invdx2,aDD00_i0_i1_i2m1,aDD00,aDD00_i0_i1_i2p1,aDD00_i0_i1_i2p2,aDD00_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD012 = SIMD_order_4_f_dupD2(invdx2,aDD01_i0_i1_i2m1,aDD01,aDD01_i0_i1_i2p1,aDD01_i0_i1_i2p2,aDD01_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD022 = SIMD_order_4_f_dupD2(invdx2,aDD02_i0_i1_i2m1,aDD02,aDD02_i0_i1_i2p1,aDD02_i0_i1_i2p2,aDD02_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD112 = SIMD_order_4_f_dupD2(invdx2,aDD11_i0_i1_i2m1,aDD11,aDD11_i0_i1_i2p1,aDD11_i0_i1_i2p2,aDD11_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD122 = SIMD_order_4_f_dupD2(invdx2,aDD12_i0_i1_i2m1,aDD12,aDD12_i0_i1_i2p1,aDD12_i0_i1_i2p2,aDD12_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputaDD_dupD222 = SIMD_order_4_f_dupD2(invdx2,aDD22_i0_i1_i2m1,aDD22,aDD22_i0_i1_i2p1,aDD22_i0_i1_i2p2,aDD22_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputalpha_dupD2 = SIMD_order_4_f_dupD2(invdx2,alpha_i0_i1_i2m1,alpha,alpha_i0_i1_i2p1,alpha_i0_i1_i2p2,alpha_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_dupD02 = SIMD_order_4_f_dupD2(invdx2,betU0_i0_i1_i2m1,betU0,betU0_i0_i1_i2p1,betU0_i0_i1_i2p2,betU0_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_dupD12 = SIMD_order_4_f_dupD2(invdx2,betU1_i0_i1_i2m1,betU1,betU1_i0_i1_i2p1,betU1_i0_i1_i2p2,betU1_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputbetU_dupD22 = SIMD_order_4_f_dupD2(invdx2,betU2_i0_i1_i2m1,betU2,betU2_i0_i1_i2p1,betU2_i0_i1_i2p2,betU2_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputcf_dupD2 = SIMD_order_4_f_dupD2(invdx2,cf_i0_i1_i2m1,cf,cf_i0_i1_i2p1,cf_i0_i1_i2p2,cf_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD002 = SIMD_order_4_f_dupD2(invdx2,hDD00_i0_i1_i2m1,hDD00,hDD00_i0_i1_i2p1,hDD00_i0_i1_i2p2,hDD00_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD012 = SIMD_order_4_f_dupD2(invdx2,hDD01_i0_i1_i2m1,hDD01,hDD01_i0_i1_i2p1,hDD01_i0_i1_i2p2,hDD01_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD022 = SIMD_order_4_f_dupD2(invdx2,hDD02_i0_i1_i2m1,hDD02,hDD02_i0_i1_i2p1,hDD02_i0_i1_i2p2,hDD02_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD112 = SIMD_order_4_f_dupD2(invdx2,hDD11_i0_i1_i2m1,hDD11,hDD11_i0_i1_i2p1,hDD11_i0_i1_i2p2,hDD11_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD122 = SIMD_order_4_f_dupD2(invdx2,hDD12_i0_i1_i2m1,hDD12,hDD12_i0_i1_i2p1,hDD12_i0_i1_i2p2,hDD12_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputhDD_dupD222 = SIMD_order_4_f_dupD2(invdx2,hDD22_i0_i1_i2m1,hDD22,hDD22_i0_i1_i2p1,hDD22_i0_i1_i2p2,hDD22_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_dupD02 = SIMD_order_4_f_dupD2(invdx2,lambdaU0_i0_i1_i2m1,lambdaU0,lambdaU0_i0_i1_i2p1,lambdaU0_i0_i1_i2p2,lambdaU0_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_dupD12 = SIMD_order_4_f_dupD2(invdx2,lambdaU1_i0_i1_i2m1,lambdaU1,lambdaU1_i0_i1_i2p1,lambdaU1_i0_i1_i2p2,lambdaU1_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputlambdaU_dupD22 = SIMD_order_4_f_dupD2(invdx2,lambdaU2_i0_i1_i2m1,lambdaU2,lambdaU2_i0_i1_i2p1,lambdaU2_i0_i1_i2p2,lambdaU2_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputtrK_dupD2 = SIMD_order_4_f_dupD2(invdx2,trK_i0_i1_i2m1,trK,trK_i0_i1_i2p1,trK_i0_i1_i2p2,trK_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_dupD02 = SIMD_order_4_f_dupD2(invdx2,vetU0_i0_i1_i2m1,vetU0,vetU0_i0_i1_i2p1,vetU0_i0_i1_i2p2,vetU0_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_dupD12 = SIMD_order_4_f_dupD2(invdx2,vetU1_i0_i1_i2m1,vetU1,vetU1_i0_i1_i2p1,vetU1_i0_i1_i2p2,vetU1_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY UpwindAlgInputvetU_dupD22 = SIMD_order_4_f_dupD2(invdx2,vetU2_i0_i1_i2m1,vetU2,vetU2_i0_i1_i2p1,vetU2_i0_i1_i2p2,vetU2_i0_i1_i2p3);
                   const REAL_SIMD_ARRAY alpha_dD0 = SIMD_order_4_f_dD0(invdx0,alpha_i0m2_i1_i2,alpha_i0m1_i1_i2,alpha_i0p1_i1_i2,alpha_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY cf_dD0 = SIMD_order_4_f_dD0(invdx0,cf_i0m2_i1_i2,cf_i0m1_i1_i2,cf_i0p1_i1_i2,cf_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY hDD_dD000 = SIMD_order_4_f_dD0(invdx0,hDD00_i0m2_i1_i2,hDD00_i0m1_i1_i2,hDD00_i0p1_i1_i2,hDD00_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY hDD_dD010 = SIMD_order_4_f_dD0(invdx0,hDD01_i0m2_i1_i2,hDD01_i0m1_i1_i2,hDD01_i0p1_i1_i2,hDD01_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY hDD_dD020 = SIMD_order_4_f_dD0(invdx0,hDD02_i0m2_i1_i2,hDD02_i0m1_i1_i2,hDD02_i0p1_i1_i2,hDD02_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY hDD_dD110 = SIMD_order_4_f_dD0(invdx0,hDD11_i0m2_i1_i2,hDD11_i0m1_i1_i2,hDD11_i0p1_i1_i2,hDD11_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY hDD_dD120 = SIMD_order_4_f_dD0(invdx0,hDD12_i0m2_i1_i2,hDD12_i0m1_i1_i2,hDD12_i0p1_i1_i2,hDD12_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY hDD_dD220 = SIMD_order_4_f_dD0(invdx0,hDD22_i0m2_i1_i2,hDD22_i0m1_i1_i2,hDD22_i0p1_i1_i2,hDD22_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY trK_dD0 = SIMD_order_4_f_dD0(invdx0,trK_i0m2_i1_i2,trK_i0m1_i1_i2,trK_i0p1_i1_i2,trK_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY vetU_dD00 = SIMD_order_4_f_dD0(invdx0,vetU0_i0m2_i1_i2,vetU0_i0m1_i1_i2,vetU0_i0p1_i1_i2,vetU0_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY vetU_dD10 = SIMD_order_4_f_dD0(invdx0,vetU1_i0m2_i1_i2,vetU1_i0m1_i1_i2,vetU1_i0p1_i1_i2,vetU1_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY vetU_dD20 = SIMD_order_4_f_dD0(invdx0,vetU2_i0m2_i1_i2,vetU2_i0m1_i1_i2,vetU2_i0p1_i1_i2,vetU2_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY alpha_dD1 = SIMD_order_4_f_dD1(invdx1,alpha_i0_i1m2_i2,alpha_i0_i1m1_i2,alpha_i0_i1p1_i2,alpha_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY cf_dD1 = SIMD_order_4_f_dD1(invdx1,cf_i0_i1m2_i2,cf_i0_i1m1_i2,cf_i0_i1p1_i2,cf_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY hDD_dD001 = SIMD_order_4_f_dD1(invdx1,hDD00_i0_i1m2_i2,hDD00_i0_i1m1_i2,hDD00_i0_i1p1_i2,hDD00_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY hDD_dD011 = SIMD_order_4_f_dD1(invdx1,hDD01_i0_i1m2_i2,hDD01_i0_i1m1_i2,hDD01_i0_i1p1_i2,hDD01_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY hDD_dD021 = SIMD_order_4_f_dD1(invdx1,hDD02_i0_i1m2_i2,hDD02_i0_i1m1_i2,hDD02_i0_i1p1_i2,hDD02_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY hDD_dD111 = SIMD_order_4_f_dD1(invdx1,hDD11_i0_i1m2_i2,hDD11_i0_i1m1_i2,hDD11_i0_i1p1_i2,hDD11_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY hDD_dD121 = SIMD_order_4_f_dD1(invdx1,hDD12_i0_i1m2_i2,hDD12_i0_i1m1_i2,hDD12_i0_i1p1_i2,hDD12_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY hDD_dD221 = SIMD_order_4_f_dD1(invdx1,hDD22_i0_i1m2_i2,hDD22_i0_i1m1_i2,hDD22_i0_i1p1_i2,hDD22_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY trK_dD1 = SIMD_order_4_f_dD1(invdx1,trK_i0_i1m2_i2,trK_i0_i1m1_i2,trK_i0_i1p1_i2,trK_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY vetU_dD01 = SIMD_order_4_f_dD1(invdx1,vetU0_i0_i1m2_i2,vetU0_i0_i1m1_i2,vetU0_i0_i1p1_i2,vetU0_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY vetU_dD11 = SIMD_order_4_f_dD1(invdx1,vetU1_i0_i1m2_i2,vetU1_i0_i1m1_i2,vetU1_i0_i1p1_i2,vetU1_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY vetU_dD21 = SIMD_order_4_f_dD1(invdx1,vetU2_i0_i1m2_i2,vetU2_i0_i1m1_i2,vetU2_i0_i1p1_i2,vetU2_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY alpha_dD2 = SIMD_order_4_f_dD2(invdx2,alpha_i0_i1_i2m2,alpha_i0_i1_i2m1,alpha_i0_i1_i2p1,alpha_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY cf_dD2 = SIMD_order_4_f_dD2(invdx2,cf_i0_i1_i2m2,cf_i0_i1_i2m1,cf_i0_i1_i2p1,cf_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY hDD_dD002 = SIMD_order_4_f_dD2(invdx2,hDD00_i0_i1_i2m2,hDD00_i0_i1_i2m1,hDD00_i0_i1_i2p1,hDD00_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY hDD_dD012 = SIMD_order_4_f_dD2(invdx2,hDD01_i0_i1_i2m2,hDD01_i0_i1_i2m1,hDD01_i0_i1_i2p1,hDD01_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY hDD_dD022 = SIMD_order_4_f_dD2(invdx2,hDD02_i0_i1_i2m2,hDD02_i0_i1_i2m1,hDD02_i0_i1_i2p1,hDD02_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY hDD_dD112 = SIMD_order_4_f_dD2(invdx2,hDD11_i0_i1_i2m2,hDD11_i0_i1_i2m1,hDD11_i0_i1_i2p1,hDD11_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY hDD_dD122 = SIMD_order_4_f_dD2(invdx2,hDD12_i0_i1_i2m2,hDD12_i0_i1_i2m1,hDD12_i0_i1_i2p1,hDD12_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY hDD_dD222 = SIMD_order_4_f_dD2(invdx2,hDD22_i0_i1_i2m2,hDD22_i0_i1_i2m1,hDD22_i0_i1_i2p1,hDD22_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY trK_dD2 = SIMD_order_4_f_dD2(invdx2,trK_i0_i1_i2m2,trK_i0_i1_i2m1,trK_i0_i1_i2p1,trK_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY vetU_dD02 = SIMD_order_4_f_dD2(invdx2,vetU0_i0_i1_i2m2,vetU0_i0_i1_i2m1,vetU0_i0_i1_i2p1,vetU0_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY vetU_dD12 = SIMD_order_4_f_dD2(invdx2,vetU1_i0_i1_i2m2,vetU1_i0_i1_i2m1,vetU1_i0_i1_i2p1,vetU1_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY vetU_dD22 = SIMD_order_4_f_dD2(invdx2,vetU2_i0_i1_i2m2,vetU2_i0_i1_i2m1,vetU2_i0_i1_i2p1,vetU2_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY alpha_dDD00 = SIMD_order_4_f_dDD00(invdx0,alpha_i0m2_i1_i2,alpha_i0m1_i1_i2,alpha,alpha_i0p1_i1_i2,alpha_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY cf_dDD00 = SIMD_order_4_f_dDD00(invdx0,cf_i0m2_i1_i2,cf_i0m1_i1_i2,cf,cf_i0p1_i1_i2,cf_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY vetU_dDD000 = SIMD_order_4_f_dDD00(invdx0,vetU0_i0m2_i1_i2,vetU0_i0m1_i1_i2,vetU0,vetU0_i0p1_i1_i2,vetU0_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY vetU_dDD100 = SIMD_order_4_f_dDD00(invdx0,vetU1_i0m2_i1_i2,vetU1_i0m1_i1_i2,vetU1,vetU1_i0p1_i1_i2,vetU1_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY vetU_dDD200 = SIMD_order_4_f_dDD00(invdx0,vetU2_i0m2_i1_i2,vetU2_i0m1_i1_i2,vetU2,vetU2_i0p1_i1_i2,vetU2_i0p2_i1_i2);
                   const REAL_SIMD_ARRAY alpha_dDD01 = SIMD_order_4_f_dDD01(invdx0,invdx1,alpha_i0m2_i1m2_i2,alpha_i0m1_i1m2_i2,alpha_i0p1_i1m2_i2,alpha_i0p2_i1m2_i2,alpha_i0m2_i1m1_i2,alpha_i0m1_i1m1_i2,alpha_i0p1_i1m1_i2,alpha_i0p2_i1m1_i2,alpha_i0m2_i1p1_i2,alpha_i0m1_i1p1_i2,alpha_i0p1_i1p1_i2,alpha_i0p2_i1p1_i2,alpha_i0m2_i1p2_i2,alpha_i0m1_i1p2_i2,alpha_i0p1_i1p2_i2,alpha_i0p2_i1p2_i2);
                   const REAL_SIMD_ARRAY cf_dDD01 = SIMD_order_4_f_dDD01(invdx0,invdx1,cf_i0m2_i1m2_i2,cf_i0m1_i1m2_i2,cf_i0p1_i1m2_i2,cf_i0p2_i1m2_i2,cf_i0m2_i1m1_i2,cf_i0m1_i1m1_i2,cf_i0p1_i1m1_i2,cf_i0p2_i1m1_i2,cf_i0m2_i1p1_i2,cf_i0m1_i1p1_i2,cf_i0p1_i1p1_i2,cf_i0p2_i1p1_i2,cf_i0m2_i1p2_i2,cf_i0m1_i1p2_i2,cf_i0p1_i1p2_i2,cf_i0p2_i1p2_i2);
                   const REAL_SIMD_ARRAY vetU_dDD001 = SIMD_order_4_f_dDD01(invdx0,invdx1,vetU0_i0m2_i1m2_i2,vetU0_i0m1_i1m2_i2,vetU0_i0p1_i1m2_i2,vetU0_i0p2_i1m2_i2,vetU0_i0m2_i1m1_i2,vetU0_i0m1_i1m1_i2,vetU0_i0p1_i1m1_i2,vetU0_i0p2_i1m1_i2,vetU0_i0m2_i1p1_i2,vetU0_i0m1_i1p1_i2,vetU0_i0p1_i1p1_i2,vetU0_i0p2_i1p1_i2,vetU0_i0m2_i1p2_i2,vetU0_i0m1_i1p2_i2,vetU0_i0p1_i1p2_i2,vetU0_i0p2_i1p2_i2);
                   const REAL_SIMD_ARRAY vetU_dDD101 = SIMD_order_4_f_dDD01(invdx0,invdx1,vetU1_i0m2_i1m2_i2,vetU1_i0m1_i1m2_i2,vetU1_i0p1_i1m2_i2,vetU1_i0p2_i1m2_i2,vetU1_i0m2_i1m1_i2,vetU1_i0m1_i1m1_i2,vetU1_i0p1_i1m1_i2,vetU1_i0p2_i1m1_i2,vetU1_i0m2_i1p1_i2,vetU1_i0m1_i1p1_i2,vetU1_i0p1_i1p1_i2,vetU1_i0p2_i1p1_i2,vetU1_i0m2_i1p2_i2,vetU1_i0m1_i1p2_i2,vetU1_i0p1_i1p2_i2,vetU1_i0p2_i1p2_i2);
                   const REAL_SIMD_ARRAY vetU_dDD201 = SIMD_order_4_f_dDD01(invdx0,invdx1,vetU2_i0m2_i1m2_i2,vetU2_i0m1_i1m2_i2,vetU2_i0p1_i1m2_i2,vetU2_i0p2_i1m2_i2,vetU2_i0m2_i1m1_i2,vetU2_i0m1_i1m1_i2,vetU2_i0p1_i1m1_i2,vetU2_i0p2_i1m1_i2,vetU2_i0m2_i1p1_i2,vetU2_i0m1_i1p1_i2,vetU2_i0p1_i1p1_i2,vetU2_i0p2_i1p1_i2,vetU2_i0m2_i1p2_i2,vetU2_i0m1_i1p2_i2,vetU2_i0p1_i1p2_i2,vetU2_i0p2_i1p2_i2);
                   const REAL_SIMD_ARRAY alpha_dDD02 = SIMD_order_4_f_dDD02(invdx0,invdx2,alpha_i0m2_i1_i2m2,alpha_i0m1_i1_i2m2,alpha_i0p1_i1_i2m2,alpha_i0p2_i1_i2m2,alpha_i0m2_i1_i2m1,alpha_i0m1_i1_i2m1,alpha_i0p1_i1_i2m1,alpha_i0p2_i1_i2m1,alpha_i0m2_i1_i2p1,alpha_i0m1_i1_i2p1,alpha_i0p1_i1_i2p1,alpha_i0p2_i1_i2p1,alpha_i0m2_i1_i2p2,alpha_i0m1_i1_i2p2,alpha_i0p1_i1_i2p2,alpha_i0p2_i1_i2p2);
                   const REAL_SIMD_ARRAY cf_dDD02 = SIMD_order_4_f_dDD02(invdx0,invdx2,cf_i0m2_i1_i2m2,cf_i0m1_i1_i2m2,cf_i0p1_i1_i2m2,cf_i0p2_i1_i2m2,cf_i0m2_i1_i2m1,cf_i0m1_i1_i2m1,cf_i0p1_i1_i2m1,cf_i0p2_i1_i2m1,cf_i0m2_i1_i2p1,cf_i0m1_i1_i2p1,cf_i0p1_i1_i2p1,cf_i0p2_i1_i2p1,cf_i0m2_i1_i2p2,cf_i0m1_i1_i2p2,cf_i0p1_i1_i2p2,cf_i0p2_i1_i2p2);
                   const REAL_SIMD_ARRAY vetU_dDD002 = SIMD_order_4_f_dDD02(invdx0,invdx2,vetU0_i0m2_i1_i2m2,vetU0_i0m1_i1_i2m2,vetU0_i0p1_i1_i2m2,vetU0_i0p2_i1_i2m2,vetU0_i0m2_i1_i2m1,vetU0_i0m1_i1_i2m1,vetU0_i0p1_i1_i2m1,vetU0_i0p2_i1_i2m1,vetU0_i0m2_i1_i2p1,vetU0_i0m1_i1_i2p1,vetU0_i0p1_i1_i2p1,vetU0_i0p2_i1_i2p1,vetU0_i0m2_i1_i2p2,vetU0_i0m1_i1_i2p2,vetU0_i0p1_i1_i2p2,vetU0_i0p2_i1_i2p2);
                   const REAL_SIMD_ARRAY vetU_dDD102 = SIMD_order_4_f_dDD02(invdx0,invdx2,vetU1_i0m2_i1_i2m2,vetU1_i0m1_i1_i2m2,vetU1_i0p1_i1_i2m2,vetU1_i0p2_i1_i2m2,vetU1_i0m2_i1_i2m1,vetU1_i0m1_i1_i2m1,vetU1_i0p1_i1_i2m1,vetU1_i0p2_i1_i2m1,vetU1_i0m2_i1_i2p1,vetU1_i0m1_i1_i2p1,vetU1_i0p1_i1_i2p1,vetU1_i0p2_i1_i2p1,vetU1_i0m2_i1_i2p2,vetU1_i0m1_i1_i2p2,vetU1_i0p1_i1_i2p2,vetU1_i0p2_i1_i2p2);
                   const REAL_SIMD_ARRAY vetU_dDD202 = SIMD_order_4_f_dDD02(invdx0,invdx2,vetU2_i0m2_i1_i2m2,vetU2_i0m1_i1_i2m2,vetU2_i0p1_i1_i2m2,vetU2_i0p2_i1_i2m2,vetU2_i0m2_i1_i2m1,vetU2_i0m1_i1_i2m1,vetU2_i0p1_i1_i2m1,vetU2_i0p2_i1_i2m1,vetU2_i0m2_i1_i2p1,vetU2_i0m1_i1_i2p1,vetU2_i0p1_i1_i2p1,vetU2_i0p2_i1_i2p1,vetU2_i0m2_i1_i2p2,vetU2_i0m1_i1_i2p2,vetU2_i0p1_i1_i2p2,vetU2_i0p2_i1_i2p2);
                   const REAL_SIMD_ARRAY alpha_dDD11 = SIMD_order_4_f_dDD11(invdx1,alpha_i0_i1m2_i2,alpha_i0_i1m1_i2,alpha,alpha_i0_i1p1_i2,alpha_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY cf_dDD11 = SIMD_order_4_f_dDD11(invdx1,cf_i0_i1m2_i2,cf_i0_i1m1_i2,cf,cf_i0_i1p1_i2,cf_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY vetU_dDD011 = SIMD_order_4_f_dDD11(invdx1,vetU0_i0_i1m2_i2,vetU0_i0_i1m1_i2,vetU0,vetU0_i0_i1p1_i2,vetU0_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY vetU_dDD111 = SIMD_order_4_f_dDD11(invdx1,vetU1_i0_i1m2_i2,vetU1_i0_i1m1_i2,vetU1,vetU1_i0_i1p1_i2,vetU1_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY vetU_dDD211 = SIMD_order_4_f_dDD11(invdx1,vetU2_i0_i1m2_i2,vetU2_i0_i1m1_i2,vetU2,vetU2_i0_i1p1_i2,vetU2_i0_i1p2_i2);
                   const REAL_SIMD_ARRAY alpha_dDD12 = SIMD_order_4_f_dDD12(invdx1,invdx2,alpha_i0_i1m2_i2m2,alpha_i0_i1m1_i2m2,alpha_i0_i1p1_i2m2,alpha_i0_i1p2_i2m2,alpha_i0_i1m2_i2m1,alpha_i0_i1m1_i2m1,alpha_i0_i1p1_i2m1,alpha_i0_i1p2_i2m1,alpha_i0_i1m2_i2p1,alpha_i0_i1m1_i2p1,alpha_i0_i1p1_i2p1,alpha_i0_i1p2_i2p1,alpha_i0_i1m2_i2p2,alpha_i0_i1m1_i2p2,alpha_i0_i1p1_i2p2,alpha_i0_i1p2_i2p2);
                   const REAL_SIMD_ARRAY cf_dDD12 = SIMD_order_4_f_dDD12(invdx1,invdx2,cf_i0_i1m2_i2m2,cf_i0_i1m1_i2m2,cf_i0_i1p1_i2m2,cf_i0_i1p2_i2m2,cf_i0_i1m2_i2m1,cf_i0_i1m1_i2m1,cf_i0_i1p1_i2m1,cf_i0_i1p2_i2m1,cf_i0_i1m2_i2p1,cf_i0_i1m1_i2p1,cf_i0_i1p1_i2p1,cf_i0_i1p2_i2p1,cf_i0_i1m2_i2p2,cf_i0_i1m1_i2p2,cf_i0_i1p1_i2p2,cf_i0_i1p2_i2p2);
                   const REAL_SIMD_ARRAY vetU_dDD012 = SIMD_order_4_f_dDD12(invdx1,invdx2,vetU0_i0_i1m2_i2m2,vetU0_i0_i1m1_i2m2,vetU0_i0_i1p1_i2m2,vetU0_i0_i1p2_i2m2,vetU0_i0_i1m2_i2m1,vetU0_i0_i1m1_i2m1,vetU0_i0_i1p1_i2m1,vetU0_i0_i1p2_i2m1,vetU0_i0_i1m2_i2p1,vetU0_i0_i1m1_i2p1,vetU0_i0_i1p1_i2p1,vetU0_i0_i1p2_i2p1,vetU0_i0_i1m2_i2p2,vetU0_i0_i1m1_i2p2,vetU0_i0_i1p1_i2p2,vetU0_i0_i1p2_i2p2);
                   const REAL_SIMD_ARRAY vetU_dDD112 = SIMD_order_4_f_dDD12(invdx1,invdx2,vetU1_i0_i1m2_i2m2,vetU1_i0_i1m1_i2m2,vetU1_i0_i1p1_i2m2,vetU1_i0_i1p2_i2m2,vetU1_i0_i1m2_i2m1,vetU1_i0_i1m1_i2m1,vetU1_i0_i1p1_i2m1,vetU1_i0_i1p2_i2m1,vetU1_i0_i1m2_i2p1,vetU1_i0_i1m1_i2p1,vetU1_i0_i1p1_i2p1,vetU1_i0_i1p2_i2p1,vetU1_i0_i1m2_i2p2,vetU1_i0_i1m1_i2p2,vetU1_i0_i1p1_i2p2,vetU1_i0_i1p2_i2p2);
                   const REAL_SIMD_ARRAY vetU_dDD212 = SIMD_order_4_f_dDD12(invdx1,invdx2,vetU2_i0_i1m2_i2m2,vetU2_i0_i1m1_i2m2,vetU2_i0_i1p1_i2m2,vetU2_i0_i1p2_i2m2,vetU2_i0_i1m2_i2m1,vetU2_i0_i1m1_i2m1,vetU2_i0_i1p1_i2m1,vetU2_i0_i1p2_i2m1,vetU2_i0_i1m2_i2p1,vetU2_i0_i1m1_i2p1,vetU2_i0_i1p1_i2p1,vetU2_i0_i1p2_i2p1,vetU2_i0_i1m2_i2p2,vetU2_i0_i1m1_i2p2,vetU2_i0_i1p1_i2p2,vetU2_i0_i1p2_i2p2);
                   const REAL_SIMD_ARRAY alpha_dDD22 = SIMD_order_4_f_dDD22(invdx2,alpha_i0_i1_i2m2,alpha_i0_i1_i2m1,alpha,alpha_i0_i1_i2p1,alpha_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY cf_dDD22 = SIMD_order_4_f_dDD22(invdx2,cf_i0_i1_i2m2,cf_i0_i1_i2m1,cf,cf_i0_i1_i2p1,cf_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY vetU_dDD022 = SIMD_order_4_f_dDD22(invdx2,vetU0_i0_i1_i2m2,vetU0_i0_i1_i2m1,vetU0,vetU0_i0_i1_i2p1,vetU0_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY vetU_dDD122 = SIMD_order_4_f_dDD22(invdx2,vetU1_i0_i1_i2m2,vetU1_i0_i1_i2m1,vetU1,vetU1_i0_i1_i2p1,vetU1_i0_i1_i2p2);
                   const REAL_SIMD_ARRAY vetU_dDD222 = SIMD_order_4_f_dDD22(invdx2,vetU2_i0_i1_i2m2,vetU2_i0_i1_i2m1,vetU2,vetU2_i0_i1_i2p1,vetU2_i0_i1_i2p2);
                   const double tmpFDPart1_Integer_1 = 1.0;
                   const REAL_SIMD_ARRAY FDPart1_Integer_1 = ConstSIMD(tmpFDPart1_Integer_1);
                   
                   const double tmpFDPart1_NegativeOne_ = -1.0;
                   const REAL_SIMD_ARRAY FDPart1_NegativeOne_ = ConstSIMD(tmpFDPart1_NegativeOne_);
                   
                   const REAL_SIMD_ARRAY FDPart1_0 = DivSIMD(FDPart1_Integer_1, f0_of_xx0);
                   const REAL_SIMD_ARRAY UpwindControlVectorU0 = vetU0;
                   const REAL_SIMD_ARRAY UpwindControlVectorU1 = MulSIMD(FDPart1_0, vetU1);
                   const REAL_SIMD_ARRAY UpwindControlVectorU2 = MulSIMD(FDPart1_0, DivSIMD(vetU2, f1_of_xx1));
                   /*
                    * NRPy+ Finite Difference Code Generation, Step 2 of 3: Implement upwinding algorithm:
                    */
                   const double tmp_upwind_Integer_0 = 0.000000000000000000000000000000000;
                   const REAL_SIMD_ARRAY upwind_Integer_0 = ConstSIMD(tmp_upwind_Integer_0);
                   const double tmp_upwind_Integer_1 = 1.000000000000000000000000000000000;
                   const REAL_SIMD_ARRAY upwind_Integer_1 = ConstSIMD(tmp_upwind_Integer_1);
                   const REAL_SIMD_ARRAY UpWind0 = UPWIND_ALG(UpwindControlVectorU0);
                   const REAL_SIMD_ARRAY UpWind1 = UPWIND_ALG(UpwindControlVectorU1);
                   const REAL_SIMD_ARRAY UpWind2 = UPWIND_ALG(UpwindControlVectorU2);
                   const double tmpFDPart2_NegativeOne_ = -1.0;
                   const REAL_SIMD_ARRAY FDPart2_NegativeOne_ = ConstSIMD(tmpFDPart2_NegativeOne_);
                   
                   const REAL_SIMD_ARRAY aDD_dupD000 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputaDD_dupD000, UpwindAlgInputaDD_ddnD000), UpwindAlgInputaDD_ddnD000);
                   const REAL_SIMD_ARRAY aDD_dupD001 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputaDD_dupD001, UpwindAlgInputaDD_ddnD001), UpwindAlgInputaDD_ddnD001);
                   const REAL_SIMD_ARRAY aDD_dupD002 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputaDD_dupD002, UpwindAlgInputaDD_ddnD002), UpwindAlgInputaDD_ddnD002);
                   const REAL_SIMD_ARRAY aDD_dupD010 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputaDD_dupD010, UpwindAlgInputaDD_ddnD010), UpwindAlgInputaDD_ddnD010);
                   const REAL_SIMD_ARRAY aDD_dupD011 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputaDD_dupD011, UpwindAlgInputaDD_ddnD011), UpwindAlgInputaDD_ddnD011);
                   const REAL_SIMD_ARRAY aDD_dupD012 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputaDD_dupD012, UpwindAlgInputaDD_ddnD012), UpwindAlgInputaDD_ddnD012);
                   const REAL_SIMD_ARRAY aDD_dupD020 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputaDD_dupD020, UpwindAlgInputaDD_ddnD020), UpwindAlgInputaDD_ddnD020);
                   const REAL_SIMD_ARRAY aDD_dupD021 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputaDD_dupD021, UpwindAlgInputaDD_ddnD021), UpwindAlgInputaDD_ddnD021);
                   const REAL_SIMD_ARRAY aDD_dupD022 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputaDD_dupD022, UpwindAlgInputaDD_ddnD022), UpwindAlgInputaDD_ddnD022);
                   const REAL_SIMD_ARRAY aDD_dupD110 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputaDD_dupD110, UpwindAlgInputaDD_ddnD110), UpwindAlgInputaDD_ddnD110);
                   const REAL_SIMD_ARRAY aDD_dupD111 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputaDD_dupD111, UpwindAlgInputaDD_ddnD111), UpwindAlgInputaDD_ddnD111);
                   const REAL_SIMD_ARRAY aDD_dupD112 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputaDD_dupD112, UpwindAlgInputaDD_ddnD112), UpwindAlgInputaDD_ddnD112);
                   const REAL_SIMD_ARRAY aDD_dupD120 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputaDD_dupD120, UpwindAlgInputaDD_ddnD120), UpwindAlgInputaDD_ddnD120);
                   const REAL_SIMD_ARRAY aDD_dupD121 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputaDD_dupD121, UpwindAlgInputaDD_ddnD121), UpwindAlgInputaDD_ddnD121);
                   const REAL_SIMD_ARRAY aDD_dupD122 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputaDD_dupD122, UpwindAlgInputaDD_ddnD122), UpwindAlgInputaDD_ddnD122);
                   const REAL_SIMD_ARRAY aDD_dupD220 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputaDD_dupD220, UpwindAlgInputaDD_ddnD220), UpwindAlgInputaDD_ddnD220);
                   const REAL_SIMD_ARRAY aDD_dupD221 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputaDD_dupD221, UpwindAlgInputaDD_ddnD221), UpwindAlgInputaDD_ddnD221);
                   const REAL_SIMD_ARRAY aDD_dupD222 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputaDD_dupD222, UpwindAlgInputaDD_ddnD222), UpwindAlgInputaDD_ddnD222);
                   const REAL_SIMD_ARRAY alpha_dupD0 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputalpha_dupD0, UpwindAlgInputalpha_ddnD0), UpwindAlgInputalpha_ddnD0);
                   const REAL_SIMD_ARRAY alpha_dupD1 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputalpha_dupD1, UpwindAlgInputalpha_ddnD1), UpwindAlgInputalpha_ddnD1);
                   const REAL_SIMD_ARRAY alpha_dupD2 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputalpha_dupD2, UpwindAlgInputalpha_ddnD2), UpwindAlgInputalpha_ddnD2);
                   const REAL_SIMD_ARRAY betU_dupD00 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputbetU_dupD00, UpwindAlgInputbetU_ddnD00), UpwindAlgInputbetU_ddnD00);
                   const REAL_SIMD_ARRAY betU_dupD01 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputbetU_dupD01, UpwindAlgInputbetU_ddnD01), UpwindAlgInputbetU_ddnD01);
                   const REAL_SIMD_ARRAY betU_dupD02 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputbetU_dupD02, UpwindAlgInputbetU_ddnD02), UpwindAlgInputbetU_ddnD02);
                   const REAL_SIMD_ARRAY betU_dupD10 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputbetU_dupD10, UpwindAlgInputbetU_ddnD10), UpwindAlgInputbetU_ddnD10);
                   const REAL_SIMD_ARRAY betU_dupD11 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputbetU_dupD11, UpwindAlgInputbetU_ddnD11), UpwindAlgInputbetU_ddnD11);
                   const REAL_SIMD_ARRAY betU_dupD12 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputbetU_dupD12, UpwindAlgInputbetU_ddnD12), UpwindAlgInputbetU_ddnD12);
                   const REAL_SIMD_ARRAY betU_dupD20 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputbetU_dupD20, UpwindAlgInputbetU_ddnD20), UpwindAlgInputbetU_ddnD20);
                   const REAL_SIMD_ARRAY betU_dupD21 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputbetU_dupD21, UpwindAlgInputbetU_ddnD21), UpwindAlgInputbetU_ddnD21);
                   const REAL_SIMD_ARRAY betU_dupD22 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputbetU_dupD22, UpwindAlgInputbetU_ddnD22), UpwindAlgInputbetU_ddnD22);
                   const REAL_SIMD_ARRAY cf_dupD0 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputcf_dupD0, UpwindAlgInputcf_ddnD0), UpwindAlgInputcf_ddnD0);
                   const REAL_SIMD_ARRAY cf_dupD1 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputcf_dupD1, UpwindAlgInputcf_ddnD1), UpwindAlgInputcf_ddnD1);
                   const REAL_SIMD_ARRAY cf_dupD2 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputcf_dupD2, UpwindAlgInputcf_ddnD2), UpwindAlgInputcf_ddnD2);
                   const REAL_SIMD_ARRAY hDD_dupD000 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputhDD_dupD000, UpwindAlgInputhDD_ddnD000), UpwindAlgInputhDD_ddnD000);
                   const REAL_SIMD_ARRAY hDD_dupD001 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputhDD_dupD001, UpwindAlgInputhDD_ddnD001), UpwindAlgInputhDD_ddnD001);
                   const REAL_SIMD_ARRAY hDD_dupD002 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputhDD_dupD002, UpwindAlgInputhDD_ddnD002), UpwindAlgInputhDD_ddnD002);
                   const REAL_SIMD_ARRAY hDD_dupD010 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputhDD_dupD010, UpwindAlgInputhDD_ddnD010), UpwindAlgInputhDD_ddnD010);
                   const REAL_SIMD_ARRAY hDD_dupD011 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputhDD_dupD011, UpwindAlgInputhDD_ddnD011), UpwindAlgInputhDD_ddnD011);
                   const REAL_SIMD_ARRAY hDD_dupD012 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputhDD_dupD012, UpwindAlgInputhDD_ddnD012), UpwindAlgInputhDD_ddnD012);
                   const REAL_SIMD_ARRAY hDD_dupD020 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputhDD_dupD020, UpwindAlgInputhDD_ddnD020), UpwindAlgInputhDD_ddnD020);
                   const REAL_SIMD_ARRAY hDD_dupD021 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputhDD_dupD021, UpwindAlgInputhDD_ddnD021), UpwindAlgInputhDD_ddnD021);
                   const REAL_SIMD_ARRAY hDD_dupD022 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputhDD_dupD022, UpwindAlgInputhDD_ddnD022), UpwindAlgInputhDD_ddnD022);
                   const REAL_SIMD_ARRAY hDD_dupD110 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputhDD_dupD110, UpwindAlgInputhDD_ddnD110), UpwindAlgInputhDD_ddnD110);
                   const REAL_SIMD_ARRAY hDD_dupD111 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputhDD_dupD111, UpwindAlgInputhDD_ddnD111), UpwindAlgInputhDD_ddnD111);
                   const REAL_SIMD_ARRAY hDD_dupD112 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputhDD_dupD112, UpwindAlgInputhDD_ddnD112), UpwindAlgInputhDD_ddnD112);
                   const REAL_SIMD_ARRAY hDD_dupD120 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputhDD_dupD120, UpwindAlgInputhDD_ddnD120), UpwindAlgInputhDD_ddnD120);
                   const REAL_SIMD_ARRAY hDD_dupD121 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputhDD_dupD121, UpwindAlgInputhDD_ddnD121), UpwindAlgInputhDD_ddnD121);
                   const REAL_SIMD_ARRAY hDD_dupD122 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputhDD_dupD122, UpwindAlgInputhDD_ddnD122), UpwindAlgInputhDD_ddnD122);
                   const REAL_SIMD_ARRAY hDD_dupD220 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputhDD_dupD220, UpwindAlgInputhDD_ddnD220), UpwindAlgInputhDD_ddnD220);
                   const REAL_SIMD_ARRAY hDD_dupD221 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputhDD_dupD221, UpwindAlgInputhDD_ddnD221), UpwindAlgInputhDD_ddnD221);
                   const REAL_SIMD_ARRAY hDD_dupD222 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputhDD_dupD222, UpwindAlgInputhDD_ddnD222), UpwindAlgInputhDD_ddnD222);
                   const REAL_SIMD_ARRAY lambdaU_dupD00 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputlambdaU_dupD00, UpwindAlgInputlambdaU_ddnD00), UpwindAlgInputlambdaU_ddnD00);
                   const REAL_SIMD_ARRAY lambdaU_dupD01 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputlambdaU_dupD01, UpwindAlgInputlambdaU_ddnD01), UpwindAlgInputlambdaU_ddnD01);
                   const REAL_SIMD_ARRAY lambdaU_dupD02 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputlambdaU_dupD02, UpwindAlgInputlambdaU_ddnD02), UpwindAlgInputlambdaU_ddnD02);
                   const REAL_SIMD_ARRAY lambdaU_dupD10 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputlambdaU_dupD10, UpwindAlgInputlambdaU_ddnD10), UpwindAlgInputlambdaU_ddnD10);
                   const REAL_SIMD_ARRAY lambdaU_dupD11 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputlambdaU_dupD11, UpwindAlgInputlambdaU_ddnD11), UpwindAlgInputlambdaU_ddnD11);
                   const REAL_SIMD_ARRAY lambdaU_dupD12 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputlambdaU_dupD12, UpwindAlgInputlambdaU_ddnD12), UpwindAlgInputlambdaU_ddnD12);
                   const REAL_SIMD_ARRAY lambdaU_dupD20 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputlambdaU_dupD20, UpwindAlgInputlambdaU_ddnD20), UpwindAlgInputlambdaU_ddnD20);
                   const REAL_SIMD_ARRAY lambdaU_dupD21 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputlambdaU_dupD21, UpwindAlgInputlambdaU_ddnD21), UpwindAlgInputlambdaU_ddnD21);
                   const REAL_SIMD_ARRAY lambdaU_dupD22 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputlambdaU_dupD22, UpwindAlgInputlambdaU_ddnD22), UpwindAlgInputlambdaU_ddnD22);
                   const REAL_SIMD_ARRAY trK_dupD0 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputtrK_dupD0, UpwindAlgInputtrK_ddnD0), UpwindAlgInputtrK_ddnD0);
                   const REAL_SIMD_ARRAY trK_dupD1 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputtrK_dupD1, UpwindAlgInputtrK_ddnD1), UpwindAlgInputtrK_ddnD1);
                   const REAL_SIMD_ARRAY trK_dupD2 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputtrK_dupD2, UpwindAlgInputtrK_ddnD2), UpwindAlgInputtrK_ddnD2);
                   const REAL_SIMD_ARRAY vetU_dupD00 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputvetU_dupD00, UpwindAlgInputvetU_ddnD00), UpwindAlgInputvetU_ddnD00);
                   const REAL_SIMD_ARRAY vetU_dupD01 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputvetU_dupD01, UpwindAlgInputvetU_ddnD01), UpwindAlgInputvetU_ddnD01);
                   const REAL_SIMD_ARRAY vetU_dupD02 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputvetU_dupD02, UpwindAlgInputvetU_ddnD02), UpwindAlgInputvetU_ddnD02);
                   const REAL_SIMD_ARRAY vetU_dupD10 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputvetU_dupD10, UpwindAlgInputvetU_ddnD10), UpwindAlgInputvetU_ddnD10);
                   const REAL_SIMD_ARRAY vetU_dupD11 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputvetU_dupD11, UpwindAlgInputvetU_ddnD11), UpwindAlgInputvetU_ddnD11);
                   const REAL_SIMD_ARRAY vetU_dupD12 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputvetU_dupD12, UpwindAlgInputvetU_ddnD12), UpwindAlgInputvetU_ddnD12);
                   const REAL_SIMD_ARRAY vetU_dupD20 = FusedMulAddSIMD(UpWind0, SubSIMD(UpwindAlgInputvetU_dupD20, UpwindAlgInputvetU_ddnD20), UpwindAlgInputvetU_ddnD20);
                   const REAL_SIMD_ARRAY vetU_dupD21 = FusedMulAddSIMD(UpWind1, SubSIMD(UpwindAlgInputvetU_dupD21, UpwindAlgInputvetU_ddnD21), UpwindAlgInputvetU_ddnD21);
                   const REAL_SIMD_ARRAY vetU_dupD22 = FusedMulAddSIMD(UpWind2, SubSIMD(UpwindAlgInputvetU_dupD22, UpwindAlgInputvetU_ddnD22), UpwindAlgInputvetU_ddnD22);
                   /*
                    * NRPy+ Finite Difference Code Generation, Step 3 of 3: Evaluate SymPy expressions and write to main memory:
                    */
                   const double tmpFDPart3_Integer_1 = 1.0;
                   const REAL_SIMD_ARRAY FDPart3_Integer_1 = ConstSIMD(tmpFDPart3_Integer_1);
                   
                   const double tmpFDPart3_Integer_12 = 12.0;
                   const REAL_SIMD_ARRAY FDPart3_Integer_12 = ConstSIMD(tmpFDPart3_Integer_12);
                   
                   const double tmpFDPart3_Integer_2 = 2.0;
                   const REAL_SIMD_ARRAY FDPart3_Integer_2 = ConstSIMD(tmpFDPart3_Integer_2);
                   
                   const double tmpFDPart3_Integer_3 = 3.0;
                   const REAL_SIMD_ARRAY FDPart3_Integer_3 = ConstSIMD(tmpFDPart3_Integer_3);
                   
                   const double tmpFDPart3_Integer_4 = 4.0;
                   const REAL_SIMD_ARRAY FDPart3_Integer_4 = ConstSIMD(tmpFDPart3_Integer_4);
                   
                   const double tmpFDPart3_Integer_8 = 8.0;
                   const REAL_SIMD_ARRAY FDPart3_Integer_8 = ConstSIMD(tmpFDPart3_Integer_8);
                   
                   const double tmpFDPart3_NegativeOne_ = -1.0;
                   const REAL_SIMD_ARRAY FDPart3_NegativeOne_ = ConstSIMD(tmpFDPart3_NegativeOne_);
                   
                   const double tmpFDPart3_Rational_1_2 = 1.0/2.0;
                   const REAL_SIMD_ARRAY FDPart3_Rational_1_2 = ConstSIMD(tmpFDPart3_Rational_1_2);
                   
                   const double tmpFDPart3_Rational_1_3 = 1.0/3.0;
                   const REAL_SIMD_ARRAY FDPart3_Rational_1_3 = ConstSIMD(tmpFDPart3_Rational_1_3);
                   
                   const double tmpFDPart3_Rational_1_4 = 1.0/4.0;
                   const REAL_SIMD_ARRAY FDPart3_Rational_1_4 = ConstSIMD(tmpFDPart3_Rational_1_4);
                   
                   const double tmpFDPart3_Rational_1_6 = 1.0/6.0;
                   const REAL_SIMD_ARRAY FDPart3_Rational_1_6 = ConstSIMD(tmpFDPart3_Rational_1_6);
                   
                   const double tmpFDPart3_Rational_2_3 = 2.0/3.0;
                   const REAL_SIMD_ARRAY FDPart3_Rational_2_3 = ConstSIMD(tmpFDPart3_Rational_2_3);
                   
                   const double tmpFDPart3_Rational_3_2 = 3.0/2.0;
                   const REAL_SIMD_ARRAY FDPart3_Rational_3_2 = ConstSIMD(tmpFDPart3_Rational_3_2);
                   
                   const double tmpFDPart3_Rational_3_4 = 3.0/4.0;
                   const REAL_SIMD_ARRAY FDPart3_Rational_3_4 = ConstSIMD(tmpFDPart3_Rational_3_4);
                   
                   const double tmpFDPart3_Rational_4_3 = 4.0/3.0;
                   const REAL_SIMD_ARRAY FDPart3_Rational_4_3 = ConstSIMD(tmpFDPart3_Rational_4_3);
                   
                   const REAL_SIMD_ARRAY FDPart3_2 = DivSIMD(FDPart3_Integer_1, f0_of_xx0);
                   const REAL_SIMD_ARRAY FDPart3_3 = MulSIMD(FDPart3_2, vetU1);
                   const REAL_SIMD_ARRAY FDPart3_4 = DivSIMD(FDPart3_Integer_1, f1_of_xx1);
                   const REAL_SIMD_ARRAY FDPart3_5 = MulSIMD(FDPart3_2, FDPart3_4);
                   const REAL_SIMD_ARRAY FDPart3_6 = MulSIMD(FDPart3_5, vetU2);
                   const REAL_SIMD_ARRAY FDPart3_7 = MulSIMD(f0_of_xx0, f0_of_xx0);
                   const REAL_SIMD_ARRAY FDPart3_8 = DivSIMD(FDPart3_Integer_1, FDPart3_7);
                   const REAL_SIMD_ARRAY FDPart3_10 = MulSIMD(FDPart3_8, MulSIMD(FDPart3_NegativeOne_, vetU1));
                   const REAL_SIMD_ARRAY FDPart3_11 = FusedMulAddSIMD(FDPart3_2, vetU_dD10, FDPart3_10);
                   const REAL_SIMD_ARRAY FDPart3_12 = MulSIMD(FDPart3_Integer_2, f0_of_xx0);
                   const REAL_SIMD_ARRAY FDPart3_13 = MulSIMD(FDPart3_12, aDD01);
                   const REAL_SIMD_ARRAY FDPart3_14 = MulSIMD(FDPart3_4, vetU2);
                   const REAL_SIMD_ARRAY FDPart3_15 = MulSIMD(FDPart3_14, MulSIMD(FDPart3_8, FDPart3_NegativeOne_));
                   const REAL_SIMD_ARRAY FDPart3_16 = FusedMulAddSIMD(FDPart3_5, vetU_dD20, FDPart3_15);
                   const REAL_SIMD_ARRAY FDPart3_17 = MulSIMD(aDD02, f1_of_xx1);
                   const REAL_SIMD_ARRAY FDPart3_18 = MulSIMD(FDPart3_12, FDPart3_17);
                   const REAL_SIMD_ARRAY FDPart3_20 = MulSIMD(FDPart3_2, vetU_dD11);
                   const REAL_SIMD_ARRAY FDPart3_21 = MulSIMD(FDPart3_2, FDPart3_Integer_2);
                   const REAL_SIMD_ARRAY FDPart3_22 = MulSIMD(FDPart3_21, vetU0);
                   const REAL_SIMD_ARRAY FDPart3_24 = MulSIMD(FDPart3_5, f1_of_xx1__D1);
                   const REAL_SIMD_ARRAY FDPart3_26 = AddSIMD(vetU_dD00, FusedMulAddSIMD(FDPart3_24, vetU1, FusedMulAddSIMD(FDPart3_5, vetU_dD22, AddSIMD(FDPart3_20, FDPart3_22))));
                   const REAL_SIMD_ARRAY FDPart3_28 = MulSIMD(FDPart3_Integer_2, hDD01);
                   const REAL_SIMD_ARRAY FDPart3_29 = MulSIMD(f1_of_xx1, f1_of_xx1);
                   const REAL_SIMD_ARRAY FDPart3_30 = MulSIMD(MulSIMD(MulSIMD(f0_of_xx0, f0_of_xx0), f0_of_xx0), f0_of_xx0);
                   const REAL_SIMD_ARRAY FDPart3_32 = AddSIMD(FDPart3_Integer_1, hDD00);
                   const REAL_SIMD_ARRAY FDPart3_33 = MulSIMD(MulSIMD(FDPart3_29, FDPart3_30), MulSIMD(FDPart3_NegativeOne_, MulSIMD(hDD12, hDD12)));
                   const REAL_SIMD_ARRAY FDPart3_34 = MulSIMD(FDPart3_7, hDD11);
                   const REAL_SIMD_ARRAY FDPart3_35 = AddSIMD(FDPart3_34, FDPart3_7);
                   const REAL_SIMD_ARRAY FDPart3_36 = MulSIMD(FDPart3_29, FDPart3_7);
                   const REAL_SIMD_ARRAY FDPart3_37 = MulSIMD(FDPart3_36, MulSIMD(FDPart3_NegativeOne_, MulSIMD(hDD02, hDD02)));
                   const REAL_SIMD_ARRAY FDPart3_38 = MulSIMD(FDPart3_36, hDD22);
                   const REAL_SIMD_ARRAY FDPart3_39 = AddSIMD(FDPart3_36, FDPart3_38);
                   const REAL_SIMD_ARRAY FDPart3_41 = MulSIMD(FDPart3_7, MulSIMD(FDPart3_NegativeOne_, MulSIMD(hDD01, hDD01)));
                   const REAL_SIMD_ARRAY FDPart3_43 = FusedMulAddSIMD(FDPart3_39, FDPart3_41, FusedMulAddSIMD(FDPart3_32, MulSIMD(FDPart3_35, FDPart3_39), FusedMulAddSIMD(FDPart3_30, MulSIMD(MulSIMD(FDPart3_28, FDPart3_29), MulSIMD(hDD02, hDD12)), FusedMulAddSIMD(FDPart3_32, FDPart3_33, MulSIMD(FDPart3_35, FDPart3_37)))));
                   const REAL_SIMD_ARRAY FDPart3_44 = DivSIMD(FDPart3_Integer_1, FDPart3_43);
                   const REAL_SIMD_ARRAY FDPart3_45 = MulSIMD(f1_of_xx1, hDD02);
                   const REAL_SIMD_ARRAY FDPart3_46 = MulSIMD(FDPart3_7, MulSIMD(FDPart3_NegativeOne_, f1_of_xx1));
                   const REAL_SIMD_ARRAY FDPart3_47 = FusedMulAddSIMD(FDPart3_32, MulSIMD(FDPart3_46, hDD12), MulSIMD(FDPart3_45, MulSIMD(FDPart3_7, hDD01)));
                   const REAL_SIMD_ARRAY FDPart3_48 = MulSIMD(FDPart3_44, FDPart3_47);
                   const REAL_SIMD_ARRAY FDPart3_49 = MulSIMD(aDD01, f0_of_xx0);
                   const REAL_SIMD_ARRAY FDPart3_50 = MulSIMD(MulSIMD(f0_of_xx0, f0_of_xx0), f0_of_xx0);
                   const REAL_SIMD_ARRAY FDPart3_52 = MulSIMD(FDPart3_45, f0_of_xx0);
                   const REAL_SIMD_ARRAY FDPart3_53 = FusedMulSubSIMD(MulSIMD(FDPart3_50, f1_of_xx1), MulSIMD(hDD01, hDD12), MulSIMD(FDPart3_35, FDPart3_52));
                   const REAL_SIMD_ARRAY FDPart3_55 = FusedMulAddSIMD(FDPart3_32, FDPart3_35, FDPart3_41);
                   const REAL_SIMD_ARRAY FDPart3_56 = MulSIMD(FDPart3_44, FDPart3_55);
                   const REAL_SIMD_ARRAY FDPart3_57 = MulSIMD(FDPart3_17, f0_of_xx0);
                   const REAL_SIMD_ARRAY FDPart3_59 = FusedMulSubSIMD(MulSIMD(FDPart3_29, FDPart3_50), MulSIMD(hDD02, hDD12), MulSIMD(FDPart3_39, MulSIMD(f0_of_xx0, hDD01)));
                   const REAL_SIMD_ARRAY FDPart3_60 = FusedMulAddSIMD(FDPart3_32, FDPart3_39, FDPart3_37);
                   const REAL_SIMD_ARRAY FDPart3_61 = MulSIMD(FDPart3_44, FDPart3_60);
                   const REAL_SIMD_ARRAY FDPart3_62 = MulSIMD(FDPart3_44, FDPart3_53);
                   const REAL_SIMD_ARRAY FDPart3_64 = MulSIMD(FDPart3_44, FDPart3_59);
                   const REAL_SIMD_ARRAY FDPart3_66 = FusedMulAddSIMD(FDPart3_35, FDPart3_39, FDPart3_33);
                   const REAL_SIMD_ARRAY FDPart3_67 = MulSIMD(FDPart3_44, FDPart3_66);
                   const REAL_SIMD_ARRAY FDPart3_69 = MulSIMD(cf, cf);
                   const REAL_SIMD_ARRAY FDPart3_71 = DivSIMD(alpha, FDPart3_69);
                   const REAL_SIMD_ARRAY FDPart3_72 = DivSIMD(FDPart3_Integer_1, cf);
                   const REAL_SIMD_ARRAY FDPart3_74 = FusedMulAddSIMD(FDPart3_12, hDD_dD010, SubSIMD(FDPart3_28, hDD_dD001));
                   const REAL_SIMD_ARRAY FDPart3_75 = MulSIMD(FDPart3_12, f1_of_xx1);
                   const REAL_SIMD_ARRAY FDPart3_76 = FusedMulAddSIMD(FDPart3_75, hDD_dD020, FusedMulSubSIMD(FDPart3_45, FDPart3_Integer_2, hDD_dD002));
                   const REAL_SIMD_ARRAY FDPart3_77 = FusedMulAddSIMD(FDPart3_76, MulSIMD(MulSIMD(FDPart3_44, FDPart3_55), MulSIMD(FDPart3_NegativeOne_, FDPart3_Rational_1_2)), NegFusedMulSubSIMD(MulSIMD(FDPart3_44, FDPart3_53), MulSIMD(FDPart3_Rational_1_2, hDD_dD000), MulSIMD(MulSIMD(FDPart3_44, FDPart3_47), MulSIMD(FDPart3_74, FDPart3_Rational_1_2))));
                   const REAL_SIMD_ARRAY FDPart3_79 = FusedMulAddSIMD(FDPart3_74, MulSIMD(MulSIMD(FDPart3_44, FDPart3_60), MulSIMD(FDPart3_NegativeOne_, FDPart3_Rational_1_2)), NegFusedMulSubSIMD(MulSIMD(FDPart3_44, FDPart3_59), MulSIMD(FDPart3_Rational_1_2, hDD_dD000), MulSIMD(MulSIMD(FDPart3_44, FDPart3_47), MulSIMD(FDPart3_76, FDPart3_Rational_1_2))));
                   const REAL_SIMD_ARRAY FDPart3_81 = SubSIMD(NegFusedMulSubSIMD(FDPart3_74, MulSIMD(MulSIMD(FDPart3_44, FDPart3_59), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_44, FDPart3_53), MulSIMD(FDPart3_76, FDPart3_Rational_1_2))), MulSIMD(MulSIMD(FDPart3_44, FDPart3_66), MulSIMD(FDPart3_Rational_1_2, hDD_dD000)));
                   const REAL_SIMD_ARRAY FDPart3_83 = MulSIMD(FDPart3_72, FDPart3_Rational_1_2);
                   const REAL_SIMD_ARRAY FDPart3_84 = NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(alpha, SubSIMD(SubSIMD(FusedMulSubSIMD(FDPart3_83, FusedMulSubSIMD(FDPart3_72, MulSIMD(cf_dD0, cf_dD0), cf_dDD00), MulSIMD(MulSIMD(FDPart3_72, FDPart3_77), MulSIMD(FDPart3_Rational_1_2, cf_dD2))), MulSIMD(MulSIMD(FDPart3_72, FDPart3_81), MulSIMD(FDPart3_Rational_1_2, cf_dD0))), MulSIMD(MulSIMD(FDPart3_72, FDPart3_79), MulSIMD(FDPart3_Rational_1_2, cf_dD1)))), NegFusedMulAddSIMD(FDPart3_79, alpha_dD1, NegFusedMulAddSIMD(FDPart3_81, alpha_dD0, FusedMulAddSIMD(RbarDD00, alpha, NegFusedMulAddSIMD(FDPart3_77, alpha_dD2, SubSIMD(FusedMulSubSIMD(FDPart3_71, MulSIMD(cf_dD0, cf_dD0), alpha_dDD00), MulSIMD(MulSIMD(FDPart3_72, FDPart3_Integer_2), MulSIMD(alpha_dD0, cf_dD0))))))));
                   const REAL_SIMD_ARRAY FDPart3_85 = MulSIMD(FDPart3_72, cf_dD1);
                   const REAL_SIMD_ARRAY FDPart3_87 = MulSIMD(FDPart3_85, MulSIMD(FDPart3_NegativeOne_, alpha_dD0));
                   const REAL_SIMD_ARRAY FDPart3_88 = MulSIMD(FDPart3_72, cf_dD0);
                   const REAL_SIMD_ARRAY FDPart3_90 = MulSIMD(FDPart3_88, MulSIMD(FDPart3_NegativeOne_, alpha_dD1));
                   const REAL_SIMD_ARRAY FDPart3_93 = FusedMulAddSIMD(FDPart3_12, hDD11, FDPart3_12);
                   const REAL_SIMD_ARRAY FDPart3_94 = FusedMulAddSIMD(FDPart3_7, hDD_dD110, FDPart3_93);
                   const REAL_SIMD_ARRAY FDPart3_95 = MulSIMD(f0_of_xx0, hDD_dD012);
                   const REAL_SIMD_ARRAY FDPart3_97 = MulSIMD(f0_of_xx0, MulSIMD(f1_of_xx1__D1, hDD02));
                   const REAL_SIMD_ARRAY FDPart3_98 = MulSIMD(f0_of_xx0, f1_of_xx1);
                   const REAL_SIMD_ARRAY FDPart3_100 = FusedMulAddSIMD(FDPart3_98, hDD_dD021, FDPart3_97);
                   const REAL_SIMD_ARRAY FDPart3_101 = MulSIMD(FDPart3_75, hDD12);
                   const REAL_SIMD_ARRAY FDPart3_102 = MulSIMD(FDPart3_7, f1_of_xx1);
                   const REAL_SIMD_ARRAY FDPart3_103 = FusedMulAddSIMD(FDPart3_102, hDD_dD120, FDPart3_101);
                   const REAL_SIMD_ARRAY FDPart3_104 = AddSIMD(FDPart3_103, SubSIMD(FDPart3_100, FDPart3_95));
                   const REAL_SIMD_ARRAY FDPart3_105 = SubSIMD(NegFusedMulSubSIMD(FDPart3_94, MulSIMD(MulSIMD(FDPart3_44, FDPart3_47), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_104, FDPart3_44), MulSIMD(FDPart3_55, FDPart3_Rational_1_2))), MulSIMD(MulSIMD(FDPart3_44, FDPart3_53), MulSIMD(FDPart3_Rational_1_2, hDD_dD001)));
                   const REAL_SIMD_ARRAY FDPart3_107 = FusedMulAddSIMD(FDPart3_94, MulSIMD(MulSIMD(FDPart3_44, FDPart3_60), MulSIMD(FDPart3_NegativeOne_, FDPart3_Rational_1_2)), NegFusedMulSubSIMD(MulSIMD(FDPart3_44, FDPart3_59), MulSIMD(FDPart3_Rational_1_2, hDD_dD001), MulSIMD(MulSIMD(FDPart3_104, FDPart3_44), MulSIMD(FDPart3_47, FDPart3_Rational_1_2))));
                   const REAL_SIMD_ARRAY FDPart3_109 = SubSIMD(NegFusedMulSubSIMD(FDPart3_94, MulSIMD(MulSIMD(FDPart3_44, FDPart3_59), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_104, FDPart3_44), MulSIMD(FDPart3_53, FDPart3_Rational_1_2))), MulSIMD(MulSIMD(FDPart3_44, FDPart3_66), MulSIMD(FDPart3_Rational_1_2, hDD_dD001)));
                   const REAL_SIMD_ARRAY FDPart3_111 = NegFusedMulAddSIMD(FDPart3_109, alpha_dD0, FusedMulAddSIMD(FDPart3_71, MulSIMD(cf_dD0, cf_dD1), NegFusedMulAddSIMD(FDPart3_105, alpha_dD2, NegFusedMulAddSIMD(FDPart3_107, alpha_dD1, AddSIMD(FusedMulAddSIMD(RbarDD01, alpha, FDPart3_90), NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(alpha, SubSIMD(SubSIMD(FusedMulSubSIMD(FDPart3_83, FusedMulSubSIMD(FDPart3_85, cf_dD0, cf_dDD01), MulSIMD(MulSIMD(FDPart3_105, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD2))), MulSIMD(MulSIMD(FDPart3_109, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD0))), MulSIMD(MulSIMD(FDPart3_107, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD1)))), SubSIMD(FDPart3_87, alpha_dDD01)))))));
                   const REAL_SIMD_ARRAY FDPart3_113 = MulSIMD(FDPart3_44, MulSIMD(FDPart3_59, FDPart3_Integer_2));
                   const REAL_SIMD_ARRAY FDPart3_115 = MulSIMD(FDPart3_102, FDPart3_Integer_2);
                   const REAL_SIMD_ARRAY FDPart3_117 = MulSIMD(FDPart3_7, MulSIMD(f1_of_xx1__D1, hDD12));
                   const REAL_SIMD_ARRAY FDPart3_118 = FusedMulAddSIMD(FDPart3_117, FDPart3_Integer_2, FusedMulSubSIMD(FDPart3_115, hDD_dD121, MulSIMD(FDPart3_7, hDD_dD112)));
                   const REAL_SIMD_ARRAY FDPart3_119 = NegFusedMulAddSIMD(FDPart3_Integer_2, f0_of_xx0, NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(f0_of_xx0, hDD11), FusedMulSubSIMD(FDPart3_12, hDD_dD011, MulSIMD(FDPart3_7, hDD_dD110))));
                   const REAL_SIMD_ARRAY FDPart3_120 = NegFusedMulAddSIMD(FDPart3_7, MulSIMD(MulSIMD(FDPart3_44, FDPart3_47), MulSIMD(FDPart3_Rational_1_2, hDD_dD111)), NegFusedMulSubSIMD(FDPart3_53, MulSIMD(MulSIMD(FDPart3_119, FDPart3_44), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_118, FDPart3_44), MulSIMD(FDPart3_55, FDPart3_Rational_1_2))));
                   const REAL_SIMD_ARRAY FDPart3_122 = NegFusedMulAddSIMD(FDPart3_7, MulSIMD(MulSIMD(FDPart3_44, FDPart3_60), MulSIMD(FDPart3_Rational_1_2, hDD_dD111)), NegFusedMulSubSIMD(FDPart3_59, MulSIMD(MulSIMD(FDPart3_119, FDPart3_44), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_118, FDPart3_44), MulSIMD(FDPart3_47, FDPart3_Rational_1_2))));
                   const REAL_SIMD_ARRAY FDPart3_124 = NegFusedMulAddSIMD(FDPart3_7, MulSIMD(MulSIMD(FDPart3_44, FDPart3_59), MulSIMD(FDPart3_Rational_1_2, hDD_dD111)), NegFusedMulSubSIMD(FDPart3_66, MulSIMD(MulSIMD(FDPart3_119, FDPart3_44), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_118, FDPart3_44), MulSIMD(FDPart3_53, FDPart3_Rational_1_2))));
                   const REAL_SIMD_ARRAY FDPart3_126 = NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(alpha, SubSIMD(SubSIMD(FusedMulSubSIMD(FDPart3_83, FusedMulSubSIMD(FDPart3_72, MulSIMD(cf_dD1, cf_dD1), cf_dDD11), MulSIMD(MulSIMD(FDPart3_120, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD2))), MulSIMD(MulSIMD(FDPart3_124, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD0))), MulSIMD(MulSIMD(FDPart3_122, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD1)))), NegFusedMulAddSIMD(FDPart3_122, alpha_dD1, NegFusedMulAddSIMD(FDPart3_124, alpha_dD0, FusedMulAddSIMD(RbarDD11, alpha, NegFusedMulAddSIMD(FDPart3_120, alpha_dD2, SubSIMD(FusedMulSubSIMD(FDPart3_71, MulSIMD(cf_dD1, cf_dD1), alpha_dDD11), MulSIMD(MulSIMD(FDPart3_72, FDPart3_Integer_2), MulSIMD(alpha_dD1, cf_dD1))))))));
                   const REAL_SIMD_ARRAY FDPart3_127 = MulSIMD(FDPart3_72, cf_dD2);
                   const REAL_SIMD_ARRAY FDPart3_129 = MulSIMD(FDPart3_127, MulSIMD(FDPart3_NegativeOne_, alpha_dD0));
                   const REAL_SIMD_ARRAY FDPart3_131 = MulSIMD(FDPart3_88, MulSIMD(FDPart3_NegativeOne_, alpha_dD2));
                   const REAL_SIMD_ARRAY FDPart3_132 = AddSIMD(FDPart3_95, NegFusedMulAddSIMD(FDPart3_98, hDD_dD021, SubSIMD(FDPart3_103, FDPart3_97)));
                   const REAL_SIMD_ARRAY FDPart3_134 = MulSIMD(FDPart3_12, FDPart3_29);
                   const REAL_SIMD_ARRAY FDPart3_135 = FusedMulAddSIMD(FDPart3_134, hDD22, FDPart3_134);
                   const REAL_SIMD_ARRAY FDPart3_136 = FusedMulAddSIMD(FDPart3_36, hDD_dD220, FDPart3_135);
                   const REAL_SIMD_ARRAY FDPart3_137 = SubSIMD(NegFusedMulSubSIMD(FDPart3_55, MulSIMD(MulSIMD(FDPart3_136, FDPart3_44), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_132, FDPart3_44), MulSIMD(FDPart3_47, FDPart3_Rational_1_2))), MulSIMD(MulSIMD(FDPart3_44, FDPart3_53), MulSIMD(FDPart3_Rational_1_2, hDD_dD002)));
                   const REAL_SIMD_ARRAY FDPart3_139 = SubSIMD(NegFusedMulSubSIMD(FDPart3_47, MulSIMD(MulSIMD(FDPart3_136, FDPart3_44), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_132, FDPart3_44), MulSIMD(FDPart3_60, FDPart3_Rational_1_2))), MulSIMD(MulSIMD(FDPart3_44, FDPart3_59), MulSIMD(FDPart3_Rational_1_2, hDD_dD002)));
                   const REAL_SIMD_ARRAY FDPart3_141 = SubSIMD(NegFusedMulSubSIMD(FDPart3_53, MulSIMD(MulSIMD(FDPart3_136, FDPart3_44), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_132, FDPart3_44), MulSIMD(FDPart3_59, FDPart3_Rational_1_2))), MulSIMD(MulSIMD(FDPart3_44, FDPart3_66), MulSIMD(FDPart3_Rational_1_2, hDD_dD002)));
                   const REAL_SIMD_ARRAY FDPart3_143 = NegFusedMulAddSIMD(FDPart3_141, alpha_dD0, FusedMulAddSIMD(FDPart3_71, MulSIMD(cf_dD0, cf_dD2), NegFusedMulAddSIMD(FDPart3_137, alpha_dD2, NegFusedMulAddSIMD(FDPart3_139, alpha_dD1, AddSIMD(FusedMulAddSIMD(RbarDD02, alpha, FDPart3_131), NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(alpha, SubSIMD(SubSIMD(FusedMulSubSIMD(FDPart3_83, FusedMulSubSIMD(FDPart3_88, cf_dD2, cf_dDD02), MulSIMD(MulSIMD(FDPart3_137, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD2))), MulSIMD(MulSIMD(FDPart3_141, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD0))), MulSIMD(MulSIMD(FDPart3_139, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD1)))), SubSIMD(FDPart3_129, alpha_dDD02)))))));
                   const REAL_SIMD_ARRAY FDPart3_144 = MulSIMD(FDPart3_44, MulSIMD(FDPart3_53, FDPart3_Integer_2));
                   const REAL_SIMD_ARRAY FDPart3_145 = MulSIMD(FDPart3_127, MulSIMD(FDPart3_NegativeOne_, alpha_dD1));
                   const REAL_SIMD_ARRAY FDPart3_146 = MulSIMD(FDPart3_85, MulSIMD(FDPart3_NegativeOne_, alpha_dD2));
                   const REAL_SIMD_ARRAY FDPart3_148 = MulSIMD(f1_of_xx1, f1_of_xx1__D1);
                   const REAL_SIMD_ARRAY FDPart3_150 = MulSIMD(FDPart3_148, MulSIMD(FDPart3_7, FDPart3_Integer_2));
                   const REAL_SIMD_ARRAY FDPart3_151 = FusedMulAddSIMD(FDPart3_150, hDD22, FDPart3_150);
                   const REAL_SIMD_ARRAY FDPart3_152 = FusedMulAddSIMD(FDPart3_36, hDD_dD221, FDPart3_151);
                   const REAL_SIMD_ARRAY FDPart3_153 = AddSIMD(FDPart3_95, FusedMulAddSIMD(FDPart3_46, hDD_dD120, NegFusedMulAddSIMD(MulSIMD(FDPart3_Integer_2, f0_of_xx0), MulSIMD(f1_of_xx1, hDD12), FDPart3_100)));
                   const REAL_SIMD_ARRAY FDPart3_154 = NegFusedMulAddSIMD(FDPart3_7, MulSIMD(MulSIMD(FDPart3_44, FDPart3_47), MulSIMD(FDPart3_Rational_1_2, hDD_dD112)), NegFusedMulSubSIMD(FDPart3_53, MulSIMD(MulSIMD(FDPart3_153, FDPart3_44), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_152, FDPart3_44), MulSIMD(FDPart3_55, FDPart3_Rational_1_2))));
                   const REAL_SIMD_ARRAY FDPart3_156 = NegFusedMulAddSIMD(FDPart3_7, MulSIMD(MulSIMD(FDPart3_44, FDPart3_60), MulSIMD(FDPart3_Rational_1_2, hDD_dD112)), NegFusedMulSubSIMD(FDPart3_59, MulSIMD(MulSIMD(FDPart3_153, FDPart3_44), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_152, FDPart3_44), MulSIMD(FDPart3_47, FDPart3_Rational_1_2))));
                   const REAL_SIMD_ARRAY FDPart3_158 = NegFusedMulAddSIMD(FDPart3_7, MulSIMD(MulSIMD(FDPart3_44, FDPart3_59), MulSIMD(FDPart3_Rational_1_2, hDD_dD112)), NegFusedMulSubSIMD(FDPart3_66, MulSIMD(MulSIMD(FDPart3_153, FDPart3_44), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_152, FDPart3_44), MulSIMD(FDPart3_53, FDPart3_Rational_1_2))));
                   const REAL_SIMD_ARRAY FDPart3_160 = NegFusedMulAddSIMD(FDPart3_158, alpha_dD0, FusedMulAddSIMD(FDPart3_71, MulSIMD(cf_dD1, cf_dD2), NegFusedMulAddSIMD(FDPart3_154, alpha_dD2, NegFusedMulAddSIMD(FDPart3_156, alpha_dD1, AddSIMD(FusedMulAddSIMD(RbarDD12, alpha, FDPart3_146), NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(alpha, SubSIMD(SubSIMD(FusedMulSubSIMD(FDPart3_83, FusedMulSubSIMD(FDPart3_85, cf_dD2, cf_dDD12), MulSIMD(MulSIMD(FDPart3_154, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD2))), MulSIMD(MulSIMD(FDPart3_158, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD0))), MulSIMD(MulSIMD(FDPart3_156, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD1)))), SubSIMD(FDPart3_145, alpha_dDD12)))))));
                   const REAL_SIMD_ARRAY FDPart3_163 = NegFusedMulAddSIMD(MulSIMD(FDPart3_29, FDPart3_Integer_2), f0_of_xx0, SubSIMD(FusedMulSubSIMD(FDPart3_75, hDD_dD022, MulSIMD(FDPart3_36, hDD_dD220)), MulSIMD(MulSIMD(FDPart3_29, FDPart3_Integer_2), MulSIMD(f0_of_xx0, hDD22))));
                   const REAL_SIMD_ARRAY FDPart3_164 = SubSIMD(NegFusedMulAddSIMD(f1_of_xx1, MulSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(f1_of_xx1__D1, hDD22)), FusedMulSubSIMD(FDPart3_115, hDD_dD122, MulSIMD(FDPart3_36, hDD_dD221))), MulSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(f1_of_xx1, f1_of_xx1__D1)));
                   const REAL_SIMD_ARRAY FDPart3_165 = SubSIMD(NegFusedMulSubSIMD(FDPart3_47, MulSIMD(MulSIMD(FDPart3_164, FDPart3_44), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_163, FDPart3_44), MulSIMD(FDPart3_53, FDPart3_Rational_1_2))), MulSIMD(MulSIMD(FDPart3_55, FDPart3_7), MulSIMD(MulSIMD(FDPart3_29, FDPart3_44), MulSIMD(FDPart3_Rational_1_2, hDD_dD222))));
                   const REAL_SIMD_ARRAY FDPart3_167 = SubSIMD(NegFusedMulSubSIMD(FDPart3_60, MulSIMD(MulSIMD(FDPart3_164, FDPart3_44), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_163, FDPart3_44), MulSIMD(FDPart3_59, FDPart3_Rational_1_2))), MulSIMD(MulSIMD(FDPart3_47, FDPart3_7), MulSIMD(MulSIMD(FDPart3_29, FDPart3_44), MulSIMD(FDPart3_Rational_1_2, hDD_dD222))));
                   const REAL_SIMD_ARRAY FDPart3_169 = SubSIMD(NegFusedMulSubSIMD(FDPart3_59, MulSIMD(MulSIMD(FDPart3_164, FDPart3_44), FDPart3_Rational_1_2), MulSIMD(MulSIMD(FDPart3_163, FDPart3_44), MulSIMD(FDPart3_66, FDPart3_Rational_1_2))), MulSIMD(MulSIMD(FDPart3_53, FDPart3_7), MulSIMD(MulSIMD(FDPart3_29, FDPart3_44), MulSIMD(FDPart3_Rational_1_2, hDD_dD222))));
                   const REAL_SIMD_ARRAY FDPart3_171 = NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(alpha, SubSIMD(SubSIMD(FusedMulSubSIMD(FDPart3_83, FusedMulSubSIMD(FDPart3_72, MulSIMD(cf_dD2, cf_dD2), cf_dDD22), MulSIMD(MulSIMD(FDPart3_165, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD2))), MulSIMD(MulSIMD(FDPart3_169, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD0))), MulSIMD(MulSIMD(FDPart3_167, FDPart3_72), MulSIMD(FDPart3_Rational_1_2, cf_dD1)))), NegFusedMulAddSIMD(FDPart3_167, alpha_dD1, NegFusedMulAddSIMD(FDPart3_169, alpha_dD0, FusedMulAddSIMD(RbarDD22, alpha, NegFusedMulAddSIMD(FDPart3_165, alpha_dD2, SubSIMD(FusedMulSubSIMD(FDPart3_71, MulSIMD(cf_dD2, cf_dD2), alpha_dDD22), MulSIMD(MulSIMD(FDPart3_72, FDPart3_Integer_2), MulSIMD(alpha_dD2, cf_dD2))))))));
                   const REAL_SIMD_ARRAY FDPart3_172 = FusedMulAddSIMD(FDPart3_143, FDPart3_144, FusedMulAddSIMD(FDPart3_171, FDPart3_56, FusedMulAddSIMD(FDPart3_67, FDPart3_84, FusedMulAddSIMD(FDPart3_160, MulSIMD(FDPart3_48, FDPart3_Integer_2), FusedMulAddSIMD(FDPart3_111, FDPart3_113, MulSIMD(FDPart3_126, FDPart3_61))))));
                   const REAL_SIMD_ARRAY FDPart3_174 = MulSIMD(f0_of_xx0, vetU_dD00);
                   const REAL_SIMD_ARRAY FDPart3_175 = MulSIMD(alpha, trK);
                   const REAL_SIMD_ARRAY FDPart3_176 = MulSIMD(FDPart3_7, aDD11);
                   const REAL_SIMD_ARRAY FDPart3_178 = MulSIMD(FDPart3_2, MulSIMD(FDPart3_NegativeOne_, vetU2));
                   const REAL_SIMD_ARRAY FDPart3_179 = DivSIMD(FDPart3_Integer_1, FDPart3_29);
                   const REAL_SIMD_ARRAY FDPart3_180 = MulSIMD(FDPart3_178, MulSIMD(FDPart3_179, f1_of_xx1__D1));
                   const REAL_SIMD_ARRAY FDPart3_181 = FusedMulAddSIMD(FDPart3_5, vetU_dD21, FDPart3_180);
                   const REAL_SIMD_ARRAY FDPart3_182 = MulSIMD(FDPart3_102, aDD12);
                   const REAL_SIMD_ARRAY FDPart3_183 = FusedMulAddSIMD(FDPart3_182, FDPart3_56, FusedMulAddSIMD(FDPart3_49, FDPart3_62, MulSIMD(FDPart3_176, FDPart3_48)));
                   const REAL_SIMD_ARRAY FDPart3_186 = FusedMulAddSIMD(FDPart3_182, FDPart3_48, FusedMulAddSIMD(FDPart3_49, FDPart3_64, MulSIMD(FDPart3_176, FDPart3_61)));
                   const REAL_SIMD_ARRAY FDPart3_187 = FusedMulAddSIMD(FDPart3_182, FDPart3_62, FusedMulAddSIMD(FDPart3_49, FDPart3_67, MulSIMD(FDPart3_176, FDPart3_64)));
                   const REAL_SIMD_ARRAY FDPart3_189 = MulSIMD(FDPart3_36, aDD22);
                   const REAL_SIMD_ARRAY FDPart3_191 = FusedMulAddSIMD(FDPart3_189, FDPart3_56, FusedMulAddSIMD(FDPart3_57, FDPart3_62, MulSIMD(FDPart3_182, FDPart3_48)));
                   const REAL_SIMD_ARRAY FDPart3_192 = FusedMulAddSIMD(FDPart3_189, FDPart3_48, FusedMulAddSIMD(FDPart3_57, FDPart3_64, MulSIMD(FDPart3_182, FDPart3_61)));
                   const REAL_SIMD_ARRAY FDPart3_193 = FusedMulAddSIMD(FDPart3_189, FDPart3_62, FusedMulAddSIMD(FDPart3_57, FDPart3_67, MulSIMD(FDPart3_182, FDPart3_64)));
                   const REAL_SIMD_ARRAY FDPart3_203 = MulSIMD(FDPart3_4, FDPart3_8);
                   const REAL_SIMD_ARRAY FDPart3_205 = MulSIMD(FDPart3_179, FDPart3_8);
                   const REAL_SIMD_ARRAY FDPart3_208 = MulSIMD(FDPart3_NegativeOne_, MulSIMD(trK_dD2, alpha));
                   const REAL_SIMD_ARRAY FDPart3_209 = MulSIMD(FDPart3_NegativeOne_, MulSIMD(trK_dD1, alpha));
                   const REAL_SIMD_ARRAY FDPart3_211 = MulSIMD(FDPart3_NegativeOne_, MulSIMD(trK_dD0, alpha));
                   const REAL_SIMD_ARRAY FDPart3_216 = FusedMulAddSIMD(FDPart3_5, vetU_dDD222, MulSIMD(FDPart3_2, MulSIMD(FDPart3_Integer_2, vetU_dD02)));
                   const REAL_SIMD_ARRAY FDPart3_217 = FusedMulAddSIMD(FDPart3_2, vetU_dDD112, FusedMulAddSIMD(FDPart3_24, vetU_dD12, AddSIMD(FDPart3_216, vetU_dDD002)));
                   const REAL_SIMD_ARRAY FDPart3_218 = MulSIMD(FDPart3_217, FDPart3_Rational_1_4);
                   const REAL_SIMD_ARRAY FDPart3_219 = MulSIMD(FDPart3_2, MulSIMD(FDPart3_NegativeOne_, vetU_dD01));
                   const REAL_SIMD_ARRAY FDPart3_220 = MulSIMD(FDPart3_11, f0_of_xx0);
                   const REAL_SIMD_ARRAY FDPart3_221 = AddSIMD(vetU_dDD001, SubSIMD(FDPart3_219, FDPart3_220));
                   const REAL_SIMD_ARRAY FDPart3_222 = MulSIMD(FDPart3_64, FDPart3_Rational_3_2);
                   const REAL_SIMD_ARRAY FDPart3_223 = MulSIMD(FDPart3_29, f0_of_xx0);
                   const REAL_SIMD_ARRAY FDPart3_225 = MulSIMD(FDPart3_2, MulSIMD(FDPart3_NegativeOne_, vetU_dD02));
                   const REAL_SIMD_ARRAY FDPart3_227 = AddSIMD(vetU_dDD002, NegFusedMulAddSIMD(FDPart3_16, FDPart3_223, FDPart3_225));
                   const REAL_SIMD_ARRAY FDPart3_228 = MulSIMD(FDPart3_62, FDPart3_Rational_3_2);
                   const REAL_SIMD_ARRAY FDPart3_230 = MulSIMD(FDPart3_4, f1_of_xx1__D1);
                   const REAL_SIMD_ARRAY FDPart3_232 = NegFusedMulAddSIMD(FDPart3_181, FDPart3_223, NegFusedMulAddSIMD(FDPart3_230, vetU_dD02, SubSIMD(vetU_dDD012, vetU_dD12)));
                   const REAL_SIMD_ARRAY FDPart3_235 = MulSIMD(FDPart3_30, FDPart3_Integer_2);
                   const REAL_SIMD_ARRAY FDPart3_237 = MulSIMD(f1_of_xx1__D1, f1_of_xx1__D1);
                   const REAL_SIMD_ARRAY FDPart3_238 = MulSIMD(FDPart3_179, DivSIMD(FDPart3_Rational_1_2, FDPart3_30));
                   const REAL_SIMD_ARRAY FDPart3_239 = MulSIMD(FDPart3_29, MulSIMD(FDPart3_50, FDPart3_Integer_4));
                   const REAL_SIMD_ARRAY FDPart3_241 = MulSIMD(FDPart3_179, MulSIMD(FDPart3_2, FDPart3_NegativeOne_));
                   const REAL_SIMD_ARRAY FDPart3_242 = MulSIMD(FDPart3_241, f1_of_xx1__D1);
                   const REAL_SIMD_ARRAY FDPart3_243 = FusedMulAddSIMD(FDPart3_242, vetU_dD22, MulSIMD(FDPart3_5, vetU_dDD212));
                   const REAL_SIMD_ARRAY FDPart3_244 = FusedMulAddSIMD(FDPart3_238, FusedMulAddSIMD(FDPart3_239, vetU_dD01, MulSIMD(MulSIMD(FDPart3_148, FDPart3_50), MulSIMD(FDPart3_Integer_8, vetU0))), FusedMulAddSIMD(FDPart3_238, FusedMulAddSIMD(FDPart3_3, FusedMulAddSIMD(FDPart3_235, FDPart3_237, MulSIMD(FDPart3_235, MulSIMD(f1_of_xx1, f1_of_xx1__DD11))), MulSIMD(MulSIMD(FDPart3_148, FDPart3_50), MulSIMD(FDPart3_Integer_2, vetU_dD11))), AddSIMD(FusedMulAddSIMD(FDPart3_2, vetU_dDD111, vetU_dDD001), NegFusedMulAddSIMD(FDPart3_Integer_4, MulSIMD(MulSIMD(FDPart3_2, FDPart3_4), MulSIMD(f1_of_xx1__D1, vetU0)), NegFusedMulAddSIMD(FDPart3_237, MulSIMD(MulSIMD(FDPart3_179, FDPart3_2), MulSIMD(FDPart3_Integer_2, vetU1)), FDPart3_243)))));
                   const REAL_SIMD_ARRAY FDPart3_245 = MulSIMD(FDPart3_244, FDPart3_Rational_1_4);
                   const REAL_SIMD_ARRAY FDPart3_246 = MulSIMD(FDPart3_8, MulSIMD(FDPart3_NegativeOne_, vetU_dD11));
                   const REAL_SIMD_ARRAY FDPart3_247 = FusedMulAddSIMD(FDPart3_2, vetU_dDD101, FDPart3_246);
                   const REAL_SIMD_ARRAY FDPart3_248 = MulSIMD(FDPart3_4, MulSIMD(FDPart3_8, FDPart3_NegativeOne_));
                   const REAL_SIMD_ARRAY FDPart3_249 = FusedMulAddSIMD(FDPart3_248, vetU_dD22, MulSIMD(FDPart3_5, vetU_dDD202));
                   const REAL_SIMD_ARRAY FDPart3_250 = FusedMulAddSIMD(FDPart3_238, FusedMulAddSIMD(FDPart3_239, vetU_dD00, MulSIMD(FDPart3_36, MulSIMD(FDPart3_Integer_12, vetU0))), FusedMulAddSIMD(FDPart3_238, FusedMulAddSIMD(FDPart3_11, MulSIMD(FDPart3_148, FDPart3_235), MulSIMD(MulSIMD(FDPart3_148, FDPart3_7), MulSIMD(FDPart3_Integer_8, vetU1))), AddSIMD(AddSIMD(FDPart3_249, vetU_dDD000), NegFusedMulAddSIMD(FDPart3_Integer_4, MulSIMD(MulSIMD(FDPart3_4, FDPart3_8), MulSIMD(f1_of_xx1__D1, vetU1)), NegFusedMulAddSIMD(FDPart3_8, MulSIMD(FDPart3_Integer_8, vetU0), FDPart3_247)))));
                   const REAL_SIMD_ARRAY FDPart3_251 = MulSIMD(FDPart3_250, FDPart3_Rational_1_4);
                   const REAL_SIMD_ARRAY FDPart3_252 = MulSIMD(FDPart3_62, FDPart3_Rational_1_2);
                   const REAL_SIMD_ARRAY FDPart3_253 = MulSIMD(FDPart3_67, FDPart3_Rational_1_2);
                   const REAL_SIMD_ARRAY FDPart3_254 = MulSIMD(FDPart3_64, FDPart3_Rational_1_2);
                   const REAL_SIMD_ARRAY FDPart3_255 = FusedMulAddSIMD(FDPart3_253, hDD_dD000, FusedMulAddSIMD(FDPart3_254, FDPart3_74, MulSIMD(FDPart3_252, FDPart3_76)));
                   const REAL_SIMD_ARRAY FDPart3_256 = MulSIMD(betU0, vetU0);
                   const REAL_SIMD_ARRAY FDPart3_257 = FusedMulAddSIMD(FDPart3_253, hDD_dD001, FusedMulAddSIMD(FDPart3_254, FDPart3_94, MulSIMD(FDPart3_104, FDPart3_252)));
                   const REAL_SIMD_ARRAY FDPart3_258 = MulSIMD(FDPart3_3, betU0);
                   const REAL_SIMD_ARRAY FDPart3_260 = MulSIMD(FDPart3_2, MulSIMD(betU1, vetU0));
                   const REAL_SIMD_ARRAY FDPart3_262 = FusedMulAddSIMD(FDPart3_119, FDPart3_253, FusedMulAddSIMD(FDPart3_254, MulSIMD(FDPart3_7, hDD_dD111), MulSIMD(FDPart3_118, FDPart3_252)));
                   const REAL_SIMD_ARRAY FDPart3_263 = MulSIMD(FDPart3_8, vetU1);
                   const REAL_SIMD_ARRAY FDPart3_264 = MulSIMD(FDPart3_263, betU1);
                   const REAL_SIMD_ARRAY FDPart3_265 = FusedMulAddSIMD(FDPart3_136, FDPart3_252, FusedMulAddSIMD(FDPart3_253, hDD_dD002, MulSIMD(FDPart3_132, FDPart3_254)));
                   const REAL_SIMD_ARRAY FDPart3_266 = MulSIMD(FDPart3_6, betU0);
                   const REAL_SIMD_ARRAY FDPart3_268 = MulSIMD(FDPart3_5, MulSIMD(betU2, vetU0));
                   const REAL_SIMD_ARRAY FDPart3_269 = FusedMulAddSIMD(FDPart3_153, FDPart3_253, FusedMulAddSIMD(FDPart3_254, MulSIMD(FDPart3_7, hDD_dD112), MulSIMD(FDPart3_152, FDPart3_252)));
                   const REAL_SIMD_ARRAY FDPart3_270 = MulSIMD(FDPart3_14, FDPart3_8);
                   const REAL_SIMD_ARRAY FDPart3_271 = MulSIMD(FDPart3_270, betU1);
                   const REAL_SIMD_ARRAY FDPart3_272 = MulSIMD(FDPart3_203, MulSIMD(betU2, vetU1));
                   const REAL_SIMD_ARRAY FDPart3_273 = MulSIMD(FDPart3_36, hDD_dD222);
                   const REAL_SIMD_ARRAY FDPart3_274 = FusedMulAddSIMD(FDPart3_164, FDPart3_254, FusedMulAddSIMD(FDPart3_252, FDPart3_273, MulSIMD(FDPart3_163, FDPart3_253)));
                   const REAL_SIMD_ARRAY FDPart3_275 = MulSIMD(FDPart3_205, vetU2);
                   const REAL_SIMD_ARRAY FDPart3_276 = MulSIMD(FDPart3_275, betU2);
                   const REAL_SIMD_ARRAY FDPart3_277 = MulSIMD(FDPart3_Integer_3, alpha);
                   const REAL_SIMD_ARRAY FDPart3_278 = FusedMulAddSIMD(FDPart3_277, FDPart3_88, alpha_dD0);
                   const REAL_SIMD_ARRAY FDPart3_279 = MulSIMD(FDPart3_53, FDPart3_53);
                   const REAL_SIMD_ARRAY FDPart3_280 = DivSIMD(FDPart3_Integer_1, MulSIMD(FDPart3_43, FDPart3_43));
                   const REAL_SIMD_ARRAY FDPart3_281 = MulSIMD(FDPart3_59, FDPart3_59);
                   const REAL_SIMD_ARRAY FDPart3_284 = AddSIMD(FDPart3_223, FDPart3_274);
                   const REAL_SIMD_ARRAY FDPart3_285 = MulSIMD(FDPart3_47, FDPart3_47);
                   const REAL_SIMD_ARRAY FDPart3_286 = MulSIMD(FDPart3_176, FDPart3_280);
                   const REAL_SIMD_ARRAY FDPart3_287 = MulSIMD(FDPart3_280, aDD00);
                   const REAL_SIMD_ARRAY FDPart3_289 = MulSIMD(FDPart3_189, FDPart3_280);
                   const REAL_SIMD_ARRAY FDPart3_290 = MulSIMD(FDPart3_47, FDPart3_53);
                   const REAL_SIMD_ARRAY FDPart3_292 = MulSIMD(FDPart3_115, aDD12);
                   const REAL_SIMD_ARRAY FDPart3_293 = MulSIMD(FDPart3_280, FDPart3_292);
                   const REAL_SIMD_ARRAY FDPart3_295 = MulSIMD(FDPart3_18, MulSIMD(FDPart3_280, FDPart3_53));
                   const REAL_SIMD_ARRAY FDPart3_296 = FusedMulAddSIMD(FDPart3_289, MulSIMD(FDPart3_55, FDPart3_55), FusedMulAddSIMD(FDPart3_295, FDPart3_55, FusedMulAddSIMD(FDPart3_13, MulSIMD(FDPart3_280, FDPart3_290), FusedMulAddSIMD(FDPart3_293, MulSIMD(FDPart3_47, FDPart3_55), FusedMulAddSIMD(FDPart3_279, FDPart3_287, MulSIMD(FDPart3_285, FDPart3_286))))));
                   const REAL_SIMD_ARRAY FDPart3_297 = MulSIMD(FDPart3_Rational_3_2, alpha);
                   const REAL_SIMD_ARRAY FDPart3_298 = MulSIMD(FDPart3_296, FDPart3_297);
                   const REAL_SIMD_ARRAY FDPart3_299 = AddSIMD(FDPart3_262, f0_of_xx0);
                   const REAL_SIMD_ARRAY FDPart3_302 = MulSIMD(FDPart3_47, FDPart3_59);
                   const REAL_SIMD_ARRAY FDPart3_304 = MulSIMD(FDPart3_13, MulSIMD(FDPart3_280, FDPart3_59));
                   const REAL_SIMD_ARRAY FDPart3_305 = FusedMulAddSIMD(FDPart3_304, FDPart3_60, FusedMulAddSIMD(FDPart3_18, MulSIMD(FDPart3_280, FDPart3_302), FusedMulAddSIMD(FDPart3_189, MulSIMD(FDPart3_280, FDPart3_285), FusedMulAddSIMD(FDPart3_293, MulSIMD(FDPart3_47, FDPart3_60), FusedMulAddSIMD(FDPart3_281, FDPart3_287, MulSIMD(FDPart3_286, MulSIMD(FDPart3_60, FDPart3_60)))))));
                   const REAL_SIMD_ARRAY FDPart3_306 = MulSIMD(FDPart3_297, FDPart3_305);
                   const REAL_SIMD_ARRAY FDPart3_309 = MulSIMD(FDPart3_53, FDPart3_59);
                   const REAL_SIMD_ARRAY FDPart3_310 = FusedMulAddSIMD(FDPart3_295, FDPart3_66, FusedMulAddSIMD(FDPart3_304, FDPart3_66, FusedMulAddSIMD(FDPart3_176, MulSIMD(FDPart3_280, FDPart3_281), FusedMulAddSIMD(FDPart3_189, MulSIMD(FDPart3_279, FDPart3_280), FusedMulAddSIMD(FDPart3_287, MulSIMD(FDPart3_66, FDPart3_66), MulSIMD(FDPart3_293, FDPart3_309))))));
                   const REAL_SIMD_ARRAY FDPart3_311 = MulSIMD(FDPart3_297, FDPart3_310);
                   const REAL_SIMD_ARRAY FDPart3_312 = FusedMulAddSIMD(FDPart3_127, FDPart3_277, alpha_dD2);
                   const REAL_SIMD_ARRAY FDPart3_313 = NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_53, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(aDD12, f1_of_xx1))), NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_59, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_55), MulSIMD(aDD12, f1_of_xx1))), SubSIMD(FusedMulAddSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_53, FDPart3_55), MulSIMD(MulSIMD(FDPart3_280, FDPart3_29), MulSIMD(FDPart3_NegativeOne_, aDD22))), FusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_59, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(FDPart3_NegativeOne_, aDD11))), SubSIMD(NegFusedMulAddSIMD(aDD02, MulSIMD(MulSIMD(FDPart3_66, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_55), MulSIMD(f0_of_xx0, f1_of_xx1))), FusedMulSubSIMD(aDD02, MulSIMD(MulSIMD(FDPart3_Integer_2, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_279, FDPart3_280), MulSIMD(f0_of_xx0, f1_of_xx1))), MulSIMD(FDPart3_66, MulSIMD(MulSIMD(FDPart3_280, FDPart3_53), MulSIMD(FDPart3_Integer_2, aDD00))))), MulSIMD(MulSIMD(FDPart3_66, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(aDD01, f0_of_xx0)))))), MulSIMD(MulSIMD(FDPart3_59, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_53), MulSIMD(aDD01, f0_of_xx0))))));
                   const REAL_SIMD_ARRAY FDPart3_315 = FusedMulAddSIMD(FDPart3_277, FDPart3_85, alpha_dD1);
                   const REAL_SIMD_ARRAY FDPart3_316 = NegFusedMulAddSIMD(aDD02, MulSIMD(MulSIMD(FDPart3_66, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(f0_of_xx0, f1_of_xx1))), NegFusedMulAddSIMD(aDD02, MulSIMD(MulSIMD(FDPart3_59, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_53), MulSIMD(f0_of_xx0, f1_of_xx1))), FusedMulAddSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_47, FDPart3_53), MulSIMD(MulSIMD(FDPart3_280, FDPart3_29), MulSIMD(FDPart3_NegativeOne_, aDD22))), NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_59, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(aDD12, f1_of_xx1))), FusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_60, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_59), MulSIMD(FDPart3_NegativeOne_, aDD11))), SubSIMD(NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_60, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_53), MulSIMD(aDD12, f1_of_xx1))), NegFusedMulSubSIMD(MulSIMD(FDPart3_66, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_59), aDD00), MulSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_280, FDPart3_281), MulSIMD(aDD01, f0_of_xx0))))), MulSIMD(MulSIMD(FDPart3_66, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_60), MulSIMD(aDD01, f0_of_xx0)))))))));
                   const REAL_SIMD_ARRAY FDPart3_318 = MulSIMD(FDPart3_280, FDPart3_57);
                   const REAL_SIMD_ARRAY FDPart3_320 = MulSIMD(FDPart3_280, FDPart3_49);
                   const REAL_SIMD_ARRAY FDPart3_323 = MulSIMD(FDPart3_182, FDPart3_280);
                   const REAL_SIMD_ARRAY FDPart3_324 = FusedMulAddSIMD(FDPart3_318, MulSIMD(FDPart3_55, FDPart3_59), FusedMulAddSIMD(FDPart3_286, MulSIMD(FDPart3_47, FDPart3_60), FusedMulAddSIMD(FDPart3_289, MulSIMD(FDPart3_47, FDPart3_55), FusedMulAddSIMD(FDPart3_302, FDPart3_320, FusedMulAddSIMD(FDPart3_182, MulSIMD(FDPart3_280, FDPart3_285), FusedMulAddSIMD(FDPart3_320, MulSIMD(FDPart3_53, FDPart3_60), FusedMulAddSIMD(FDPart3_323, MulSIMD(FDPart3_55, FDPart3_60), FusedMulAddSIMD(FDPart3_287, FDPart3_309, MulSIMD(FDPart3_290, FDPart3_318)))))))));
                   const REAL_SIMD_ARRAY FDPart3_325 = MulSIMD(FDPart3_277, FDPart3_324);
                   const REAL_SIMD_ARRAY FDPart3_330 = FusedMulAddSIMD(FDPart3_318, MulSIMD(FDPart3_55, FDPart3_66), FusedMulAddSIMD(FDPart3_287, MulSIMD(FDPart3_53, FDPart3_66), FusedMulAddSIMD(FDPart3_289, MulSIMD(FDPart3_53, FDPart3_55), FusedMulAddSIMD(FDPart3_279, MulSIMD(FDPart3_280, FDPart3_57), FusedMulAddSIMD(FDPart3_286, MulSIMD(FDPart3_47, FDPart3_59), FusedMulAddSIMD(FDPart3_320, MulSIMD(FDPart3_47, FDPart3_66), FusedMulAddSIMD(FDPart3_323, MulSIMD(FDPart3_55, FDPart3_59), FusedMulAddSIMD(FDPart3_290, FDPart3_323, MulSIMD(FDPart3_309, FDPart3_320)))))))));
                   const REAL_SIMD_ARRAY FDPart3_331 = MulSIMD(FDPart3_277, FDPart3_330);
                   const REAL_SIMD_ARRAY FDPart3_332 = FusedMulAddSIMD(FDPart3_318, MulSIMD(FDPart3_47, FDPart3_66), FusedMulAddSIMD(FDPart3_286, MulSIMD(FDPart3_59, FDPart3_60), FusedMulAddSIMD(FDPart3_287, MulSIMD(FDPart3_59, FDPart3_66), FusedMulAddSIMD(FDPart3_309, FDPart3_318, FusedMulAddSIMD(FDPart3_280, MulSIMD(FDPart3_281, FDPart3_49), FusedMulAddSIMD(FDPart3_320, MulSIMD(FDPart3_60, FDPart3_66), FusedMulAddSIMD(FDPart3_323, MulSIMD(FDPart3_53, FDPart3_60), FusedMulAddSIMD(FDPart3_289, FDPart3_290, MulSIMD(FDPart3_302, FDPart3_323)))))))));
                   const REAL_SIMD_ARRAY FDPart3_333 = MulSIMD(FDPart3_277, FDPart3_332);
                   const REAL_SIMD_ARRAY FDPart3_334 = MulSIMD(FDPart3_67, FDPart3_Rational_2_3);
                   const REAL_SIMD_ARRAY FDPart3_335 = MulSIMD(FDPart3_64, FDPart3_Rational_4_3);
                   const REAL_SIMD_ARRAY FDPart3_336 = MulSIMD(FDPart3_62, FDPart3_Rational_4_3);
                   const REAL_SIMD_ARRAY FDPart3_337 = MulSIMD(FDPart3_48, FDPart3_Rational_4_3);
                   const REAL_SIMD_ARRAY FDPart3_338 = MulSIMD(FDPart3_61, FDPart3_Rational_2_3);
                   const REAL_SIMD_ARRAY FDPart3_339 = MulSIMD(FDPart3_56, FDPart3_Rational_2_3);
                   const REAL_SIMD_ARRAY FDPart3_340 = MulSIMD(FDPart3_26, FusedMulAddSIMD(FDPart3_265, FDPart3_336, FusedMulAddSIMD(FDPart3_269, FDPart3_337, FusedMulAddSIMD(FDPart3_284, FDPart3_339, FusedMulAddSIMD(FDPart3_299, FDPart3_338, FusedMulAddSIMD(FDPart3_255, FDPart3_334, MulSIMD(FDPart3_257, FDPart3_335)))))));
                   const REAL_SIMD_ARRAY FDPart3_341 = MulSIMD(FDPart3_2, MulSIMD(FDPart3_NegativeOne_, eta));
                   const REAL_SIMD_ARRAY FDPart3_342 = FusedMulSubSIMD(FDPart3_2, vetU_dD00, MulSIMD(FDPart3_8, vetU0));
                   const REAL_SIMD_ARRAY FDPart3_344 = NegFusedMulAddSIMD(FDPart3_8, vetU_dD12, FusedMulSubSIMD(FDPart3_2, vetU_dDD102, MulSIMD(FDPart3_148, FDPart3_16)));
                   const REAL_SIMD_ARRAY FDPart3_346 = MulSIMD(FDPart3_61, FusedMulAddSIMD(FDPart3_2, vetU_dDD111, FusedMulAddSIMD(FDPart3_2, MulSIMD(FDPart3_Integer_2, vetU_dD01), FDPart3_220)));
                   const REAL_SIMD_ARRAY FDPart3_348 = FusedMulAddSIMD(FDPart3_2, vetU_dDD112, NegFusedMulAddSIMD(FDPart3_24, vetU_dD12, FusedMulSubSIMD(FDPart3_2, vetU_dD02, MulSIMD(FDPart3_148, FDPart3_181))));
                   const REAL_SIMD_ARRAY FDPart3_350 = DivSIMD(FDPart3_Integer_2, FDPart3_50);
                   const REAL_SIMD_ARRAY FDPart3_352 = MulSIMD(FDPart3_2, MulSIMD(FDPart3_NegativeOne_, vetU1));
                   const REAL_SIMD_ARRAY FDPart3_357 = MulSIMD(FDPart3_48, FDPart3_Rational_1_2);
                   const REAL_SIMD_ARRAY FDPart3_358 = MulSIMD(FDPart3_61, FDPart3_Rational_1_2);
                   const REAL_SIMD_ARRAY FDPart3_359 = FusedMulAddSIMD(FDPart3_357, FDPart3_76, FusedMulAddSIMD(FDPart3_358, FDPart3_74, MulSIMD(FDPart3_254, hDD_dD000)));
                   const REAL_SIMD_ARRAY FDPart3_360 = FusedMulAddSIMD(FDPart3_254, hDD_dD001, FusedMulAddSIMD(FDPart3_358, FDPart3_94, MulSIMD(FDPart3_104, FDPart3_357)));
                   const REAL_SIMD_ARRAY FDPart3_362 = FusedMulAddSIMD(FDPart3_119, FDPart3_254, FusedMulAddSIMD(FDPart3_358, MulSIMD(FDPart3_7, hDD_dD111), MulSIMD(FDPart3_118, FDPart3_357)));
                   const REAL_SIMD_ARRAY FDPart3_363 = FusedMulAddSIMD(FDPart3_136, FDPart3_357, FusedMulAddSIMD(FDPart3_254, hDD_dD002, MulSIMD(FDPart3_132, FDPart3_358)));
                   const REAL_SIMD_ARRAY FDPart3_364 = FusedMulAddSIMD(FDPart3_153, FDPart3_254, FusedMulAddSIMD(FDPart3_358, MulSIMD(FDPart3_7, hDD_dD112), MulSIMD(FDPart3_152, FDPart3_357)));
                   const REAL_SIMD_ARRAY FDPart3_365 = FusedMulAddSIMD(FDPart3_164, FDPart3_358, FusedMulAddSIMD(FDPart3_273, FDPart3_357, MulSIMD(FDPart3_163, FDPart3_254)));
                   const REAL_SIMD_ARRAY FDPart3_367 = AddSIMD(FDPart3_148, FDPart3_365);
                   const REAL_SIMD_ARRAY FDPart3_368 = NegFusedMulAddSIMD(aDD02, MulSIMD(MulSIMD(FDPart3_53, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(f0_of_xx0, f1_of_xx1))), NegFusedMulAddSIMD(aDD02, MulSIMD(MulSIMD(FDPart3_59, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_55), MulSIMD(f0_of_xx0, f1_of_xx1))), SubSIMD(FusedMulAddSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_47, FDPart3_55), MulSIMD(MulSIMD(FDPart3_280, FDPart3_29), MulSIMD(FDPart3_NegativeOne_, aDD22))), SubSIMD(FusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_60, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(FDPart3_NegativeOne_, aDD11))), NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_60, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_55), MulSIMD(aDD12, f1_of_xx1))), NegFusedMulSubSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_285), MulSIMD(aDD12, f1_of_xx1)), MulSIMD(FDPart3_59, MulSIMD(MulSIMD(FDPart3_280, FDPart3_53), MulSIMD(FDPart3_Integer_2, aDD00)))))), MulSIMD(MulSIMD(FDPart3_59, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(aDD01, f0_of_xx0))))), MulSIMD(MulSIMD(FDPart3_60, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_53), MulSIMD(aDD01, f0_of_xx0))))));
                   const REAL_SIMD_ARRAY FDPart3_371 = SubSIMD(FDPart3_360, FDPart3_2);
                   const REAL_SIMD_ARRAY FDPart3_372 = MulSIMD(FDPart3_26, FusedMulAddSIMD(FDPart3_336, FDPart3_363, FusedMulAddSIMD(FDPart3_337, FDPart3_364, FusedMulAddSIMD(FDPart3_338, FDPart3_362, FusedMulAddSIMD(FDPart3_339, FDPart3_367, FusedMulAddSIMD(FDPart3_334, FDPart3_359, MulSIMD(FDPart3_335, FDPart3_371)))))));
                   const REAL_SIMD_ARRAY FDPart3_373 = AddSIMD(FDPart3_249, FusedMulAddSIMD(FDPart3_11, FDPart3_230, FDPart3_342));
                   const REAL_SIMD_ARRAY FDPart3_374 = FusedMulAddSIMD(FDPart3_2, vetU_dD01, FusedMulAddSIMD(FDPart3_20, FDPart3_230, FDPart3_243));
                   const REAL_SIMD_ARRAY FDPart3_375 = MulSIMD(FDPart3_48, AddSIMD(FDPart3_352, FusedMulAddSIMD(FDPart3_179, MulSIMD(FDPart3_237, FDPart3_352), FDPart3_374)));
                   const REAL_SIMD_ARRAY FDPart3_376 = FusedMulSubSIMD(FDPart3_4, f1_of_xx1__DD11, MulSIMD(FDPart3_179, FDPart3_237));
                   const REAL_SIMD_ARRAY FDPart3_377 = MulSIMD(FDPart3_48, FusedMulAddSIMD(FDPart3_3, FDPart3_376, FDPart3_374));
                   const REAL_SIMD_ARRAY FDPart3_378 = FusedMulAddSIMD(FDPart3_248, vetU_dD21, FusedMulAddSIMD(FDPart3_275, f1_of_xx1__D1, FusedMulAddSIMD(FDPart3_5, vetU_dDD201, FusedMulAddSIMD(FDPart3_16, FDPart3_230, MulSIMD(FDPart3_242, vetU_dD20)))));
                   const REAL_SIMD_ARRAY FDPart3_380 = MulSIMD(FDPart3_56, FusedMulAddSIMD(FDPart3_16, FDPart3_223, FusedMulAddSIMD(FDPart3_21, MulSIMD(FDPart3_230, vetU_dD12), FusedMulAddSIMD(FDPart3_148, FDPart3_181, FDPart3_216))));
                   const REAL_SIMD_ARRAY FDPart3_381 = DivSIMD(FDPart3_237, MulSIMD(MulSIMD(f1_of_xx1, f1_of_xx1), f1_of_xx1));
                   const REAL_SIMD_ARRAY FDPart3_383 = MulSIMD(FDPart3_56, FDPart3_Rational_1_2);
                   const REAL_SIMD_ARRAY FDPart3_384 = FusedMulAddSIMD(FDPart3_357, FDPart3_74, FusedMulAddSIMD(FDPart3_383, FDPart3_76, MulSIMD(FDPart3_252, hDD_dD000)));
                   const REAL_SIMD_ARRAY FDPart3_385 = FusedMulAddSIMD(FDPart3_252, hDD_dD001, FusedMulAddSIMD(FDPart3_357, FDPart3_94, MulSIMD(FDPart3_104, FDPart3_383)));
                   const REAL_SIMD_ARRAY FDPart3_387 = FusedMulAddSIMD(FDPart3_119, FDPart3_252, FusedMulAddSIMD(FDPart3_357, MulSIMD(FDPart3_7, hDD_dD111), MulSIMD(FDPart3_118, FDPart3_383)));
                   const REAL_SIMD_ARRAY FDPart3_388 = FusedMulAddSIMD(FDPart3_136, FDPart3_383, FusedMulAddSIMD(FDPart3_252, hDD_dD002, MulSIMD(FDPart3_132, FDPart3_357)));
                   const REAL_SIMD_ARRAY FDPart3_389 = FusedMulAddSIMD(FDPart3_153, FDPart3_252, FusedMulAddSIMD(FDPart3_357, MulSIMD(FDPart3_7, hDD_dD112), MulSIMD(FDPart3_152, FDPart3_383)));
                   const REAL_SIMD_ARRAY FDPart3_390 = FusedMulAddSIMD(FDPart3_164, FDPart3_357, FusedMulAddSIMD(FDPart3_273, FDPart3_383, MulSIMD(FDPart3_163, FDPart3_252)));
                   const REAL_SIMD_ARRAY FDPart3_394 = SubSIMD(FDPart3_389, FDPart3_230);
                   const REAL_SIMD_ARRAY FDPart3_395 = SubSIMD(FDPart3_388, FDPart3_2);
                   const REAL_SIMD_ARRAY FDPart3_396 = MulSIMD(FDPart3_26, FusedMulAddSIMD(FDPart3_336, FDPart3_395, FusedMulAddSIMD(FDPart3_337, FDPart3_394, FusedMulAddSIMD(FDPart3_338, FDPart3_387, FusedMulAddSIMD(FDPart3_339, FDPart3_390, FusedMulAddSIMD(FDPart3_334, FDPart3_384, MulSIMD(FDPart3_335, FDPart3_385)))))));
                   const REAL_SIMD_ARRAY FDPart3_400 = NegFusedMulAddSIMD(MulSIMD(FDPart3_2, FDPart3_4), vetU_dD22, SubSIMD(FusedMulAddSIMD(alpha, FusedMulAddSIMD(FDPart3_18, FDPart3_62, FusedMulAddSIMD(FDPart3_189, FDPart3_56, FusedMulAddSIMD(FDPart3_292, FDPart3_48, FusedMulAddSIMD(FDPart3_67, aDD00, FusedMulAddSIMD(FDPart3_13, FDPart3_64, MulSIMD(FDPart3_176, FDPart3_61)))))), NegFusedMulAddSIMD(MulSIMD(FDPart3_2, FDPart3_Integer_2), vetU0, FusedMulSubSIMD(FDPart3_230, FDPart3_352, FDPart3_20))), vetU_dD00));
                   const REAL_SIMD_ARRAY FDPart3_405 = MulSIMD(FDPart3_217, FDPart3_Rational_1_3);
                   const REAL_SIMD_ARRAY FDPart3_406 = MulSIMD(FDPart3_244, FDPart3_Rational_1_3);
                   const REAL_SIMD_ARRAY FDPart3_407 = MulSIMD(FDPart3_250, FDPart3_Rational_1_3);
                   const REAL_SIMD_ARRAY FDPart3_408 = MulSIMD(FDPart3_Integer_2, alpha);
                   const REAL_SIMD_ARRAY FDPart3_409 = MulSIMD(FDPart3_296, FDPart3_408);
                   const REAL_SIMD_ARRAY FDPart3_410 = MulSIMD(FDPart3_305, FDPart3_408);
                   const REAL_SIMD_ARRAY FDPart3_411 = MulSIMD(FDPart3_310, FDPart3_408);
                   const REAL_SIMD_ARRAY FDPart3_412 = MulSIMD(FDPart3_Integer_4, alpha);
                   const REAL_SIMD_ARRAY FDPart3_413 = MulSIMD(FDPart3_324, FDPart3_412);
                   const REAL_SIMD_ARRAY FDPart3_414 = MulSIMD(FDPart3_330, FDPart3_412);
                   const REAL_SIMD_ARRAY FDPart3_415 = MulSIMD(FDPart3_332, FDPart3_412);
                   const REAL_SIMD_ARRAY FDPart3_418 = FusedMulAddSIMD(FDPart3_107, alpha_dD1, FusedMulAddSIMD(FDPart3_109, alpha_dD0, FusedMulAddSIMD(FDPart3_105, alpha_dD2, alpha_dDD01)));
                   const REAL_SIMD_ARRAY FDPart3_419 = MulSIMD(FDPart3_64, MulSIMD(FDPart3_69, FDPart3_NegativeOne_));
                   const REAL_SIMD_ARRAY FDPart3_420 = FusedMulAddSIMD(FDPart3_139, alpha_dD1, FusedMulAddSIMD(FDPart3_141, alpha_dD0, FusedMulAddSIMD(FDPart3_137, alpha_dD2, alpha_dDD02)));
                   const REAL_SIMD_ARRAY FDPart3_421 = MulSIMD(FDPart3_62, MulSIMD(FDPart3_69, FDPart3_NegativeOne_));
                   const REAL_SIMD_ARRAY FDPart3_422 = FusedMulAddSIMD(FDPart3_156, alpha_dD1, FusedMulAddSIMD(FDPart3_158, alpha_dD0, FusedMulAddSIMD(FDPart3_154, alpha_dD2, alpha_dDD12)));
                   const REAL_SIMD_ARRAY FDPart3_423 = MulSIMD(FDPart3_48, MulSIMD(FDPart3_69, FDPart3_NegativeOne_));
                   const REAL_SIMD_ARRAY FDPart3_424 = MulSIMD(vetU0, vetU0);
                   const REAL_SIMD_ARRAY FDPart3_425 = MulSIMD(FDPart3_22, vetU1);
                   const REAL_SIMD_ARRAY FDPart3_426 = MulSIMD(FDPart3_8, MulSIMD(vetU1, vetU1));
                   const REAL_SIMD_ARRAY FDPart3_427 = MulSIMD(FDPart3_14, FDPart3_22);
                   const REAL_SIMD_ARRAY FDPart3_428 = MulSIMD(FDPart3_14, MulSIMD(FDPart3_263, FDPart3_Integer_2));
                   const REAL_SIMD_ARRAY FDPart3_429 = MulSIMD(FDPart3_205, MulSIMD(vetU2, vetU2));
                   const REAL_SIMD_ARRAY __RHS_exp_0 = FusedMulAddSIMD(MulSIMD(aDD01, f0_of_xx0), MulSIMD(MulSIMD(FDPart3_Integer_2, FDPart3_NegativeOne_), MulSIMD(alpha, FusedMulAddSIMD(FDPart3_49, FDPart3_61, FusedMulAddSIMD(FDPart3_44, MulSIMD(FDPart3_59, aDD00), MulSIMD(FDPart3_48, FDPart3_57))))), FusedMulAddSIMD(aDD00, MulSIMD(alpha, trK), FusedMulAddSIMD(aDD00, MulSIMD(MulSIMD(FDPart3_Integer_2, FDPart3_NegativeOne_), MulSIMD(alpha, FusedMulAddSIMD(FDPart3_57, FDPart3_62, FusedMulAddSIMD(FDPart3_67, aDD00, MulSIMD(FDPart3_49, FDPart3_64))))), FusedMulAddSIMD(aDD_dupD000, vetU0, FusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(aDD00, vetU_dD00), FusedMulAddSIMD(FDPart3_6, aDD_dupD002, FusedMulAddSIMD(FDPart3_69, NegFusedMulAddSIMD(FDPart3_172, FusedMulAddSIMD(FDPart3_Rational_1_3, hDD00, FDPart3_Rational_1_3), FDPart3_84), FusedMulAddSIMD(FDPart3_16, FDPart3_18, FusedMulAddSIMD(FDPart3_3, aDD_dupD001, FusedMulAddSIMD(f1_of_xx1, MulSIMD(MulSIMD(aDD02, f0_of_xx0), MulSIMD(MulSIMD(FDPart3_Integer_2, FDPart3_NegativeOne_), MulSIMD(alpha, FusedMulAddSIMD(FDPart3_56, FDPart3_57, FusedMulAddSIMD(FDPart3_44, MulSIMD(FDPart3_53, aDD00), MulSIMD(FDPart3_48, FDPart3_49)))))), FusedMulSubSIMD(FDPart3_11, FDPart3_13, MulSIMD(FDPart3_26, MulSIMD(FDPart3_Rational_2_3, aDD00)))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_1 = MulSIMD(FDPart3_2, FusedMulAddSIMD(FDPart3_Rational_2_3, MulSIMD(MulSIMD(FDPart3_26, FDPart3_NegativeOne_), MulSIMD(aDD01, f0_of_xx0)), NegFusedMulAddSIMD(aDD01, MulSIMD(MulSIMD(FDPart3_186, FDPart3_Integer_2), MulSIMD(f0_of_xx0, alpha)), FusedMulAddSIMD(aDD_dupD011, vetU1, FusedMulAddSIMD(vetU0, FusedMulAddSIMD(aDD_dupD010, f0_of_xx0, aDD01), FusedMulAddSIMD(aDD00, vetU_dD01, FusedMulAddSIMD(aDD01, vetU_dD11, FusedMulAddSIMD(FDPart3_181, FDPart3_57, FusedMulAddSIMD(FDPart3_69, NegFusedMulAddSIMD(MulSIMD(FDPart3_172, FDPart3_Rational_1_3), MulSIMD(f0_of_xx0, hDD01), FDPart3_111), FusedMulAddSIMD(FDPart3_174, aDD01, FusedMulAddSIMD(FDPart3_175, FDPart3_49, FusedMulAddSIMD(FDPart3_14, aDD_dupD012, FusedMulAddSIMD(FDPart3_16, FDPart3_182, FusedMulAddSIMD(f0_of_xx0, MulSIMD(MulSIMD(FDPart3_NegativeOne_, aDD02), MulSIMD(MulSIMD(FDPart3_183, FDPart3_Integer_2), MulSIMD(f1_of_xx1, alpha))), FusedMulSubSIMD(FDPart3_11, FDPart3_176, MulSIMD(MulSIMD(FDPart3_187, FDPart3_Integer_2), MulSIMD(aDD00, alpha)))))))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_2 = MulSIMD(FDPart3_5, NegFusedMulAddSIMD(aDD01, MulSIMD(MulSIMD(FDPart3_192, FDPart3_Integer_2), MulSIMD(f0_of_xx0, alpha)), FusedMulAddSIMD(MulSIMD(FDPart3_Rational_2_3, aDD02), MulSIMD(MulSIMD(FDPart3_26, FDPart3_NegativeOne_), MulSIMD(f0_of_xx0, f1_of_xx1)), FusedMulAddSIMD(aDD_dupD022, vetU2, FusedMulAddSIMD(vetU0, FusedMulAddSIMD(FDPart3_98, aDD_dupD020, FDPart3_17), FusedMulAddSIMD(aDD01, vetU_dD12, FusedMulAddSIMD(aDD02, vetU_dD22, FusedMulAddSIMD(FDPart3_69, NegFusedMulAddSIMD(f0_of_xx0, MulSIMD(MulSIMD(FDPart3_172, FDPart3_Rational_1_3), MulSIMD(f1_of_xx1, hDD02)), FDPart3_143), FusedMulAddSIMD(aDD00, vetU_dD02, FusedMulAddSIMD(FDPart3_175, FDPart3_57, FusedMulAddSIMD(FDPart3_3, FusedMulAddSIMD(FDPart3_98, aDD_dupD021, MulSIMD(aDD02, MulSIMD(f0_of_xx0, f1_of_xx1__D1))), FusedMulAddSIMD(FDPart3_16, FDPart3_189, FusedMulAddSIMD(FDPart3_17, FDPart3_174, FusedMulAddSIMD(f0_of_xx0, MulSIMD(MulSIMD(FDPart3_NegativeOne_, aDD02), MulSIMD(MulSIMD(FDPart3_191, FDPart3_Integer_2), MulSIMD(f1_of_xx1, alpha))), FusedMulSubSIMD(FDPart3_11, FDPart3_182, MulSIMD(MulSIMD(FDPart3_193, FDPart3_Integer_2), MulSIMD(aDD00, alpha)))))))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_3 = MulSIMD(FDPart3_8, NegFusedMulAddSIMD(aDD01, MulSIMD(MulSIMD(FDPart3_187, FDPart3_Integer_2), MulSIMD(f0_of_xx0, alpha)), FusedMulAddSIMD(aDD_dupD111, MulSIMD(f0_of_xx0, vetU1), NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_186, FDPart3_7), MulSIMD(aDD11, alpha)), FusedMulAddSIMD(FDPart3_12, MulSIMD(aDD11, vetU_dD11), FusedMulAddSIMD(FDPart3_14, MulSIMD(aDD_dupD112, f0_of_xx0), FusedMulAddSIMD(vetU0, FusedMulAddSIMD(FDPart3_12, aDD11, MulSIMD(FDPart3_7, aDD_dupD110)), FusedMulAddSIMD(FDPart3_115, MulSIMD(FDPart3_181, aDD12), FusedMulAddSIMD(FDPart3_175, FDPart3_176, FusedMulAddSIMD(FDPart3_69, NegFusedMulAddSIMD(FDPart3_172, FusedMulAddSIMD(FDPart3_34, FDPart3_Rational_1_3, MulSIMD(FDPart3_7, FDPart3_Rational_1_3)), FDPart3_126), FusedMulAddSIMD(aDD12, MulSIMD(MulSIMD(FDPart3_Integer_2, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_183, FDPart3_7), MulSIMD(f1_of_xx1, alpha))), FusedMulSubSIMD(FDPart3_13, vetU_dD01, MulSIMD(MulSIMD(FDPart3_26, FDPart3_7), MulSIMD(FDPart3_Rational_2_3, aDD11))))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_4 = MulSIMD(FDPart3_203, NegFusedMulAddSIMD(aDD01, MulSIMD(MulSIMD(FDPart3_193, FDPart3_Integer_2), MulSIMD(f0_of_xx0, alpha)), NegFusedMulAddSIMD(FDPart3_Rational_2_3, MulSIMD(MulSIMD(FDPart3_26, FDPart3_7), MulSIMD(aDD12, f1_of_xx1)), FusedMulAddSIMD(aDD12, MulSIMD(f0_of_xx0, vetU_dD22), FusedMulAddSIMD(aDD_dupD122, MulSIMD(f0_of_xx0, vetU2), FusedMulAddSIMD(aDD01, MulSIMD(f0_of_xx0, vetU_dD02), FusedMulAddSIMD(aDD11, MulSIMD(f0_of_xx0, vetU_dD12), FusedMulAddSIMD(vetU0, FusedMulAddSIMD(FDPart3_102, aDD_dupD120, MulSIMD(FDPart3_75, aDD12)), FusedMulAddSIMD(FDPart3_98, MulSIMD(aDD12, vetU_dD11), FusedMulAddSIMD(FDPart3_57, vetU_dD01, FusedMulAddSIMD(FDPart3_69, NegFusedMulAddSIMD(FDPart3_Rational_1_3, MulSIMD(MulSIMD(FDPart3_172, FDPart3_7), MulSIMD(f1_of_xx1, hDD12)), FDPart3_160), FusedMulAddSIMD(FDPart3_181, FDPart3_189, FusedMulAddSIMD(FDPart3_3, FusedMulAddSIMD(FDPart3_102, aDD_dupD121, MulSIMD(FDPart3_7, MulSIMD(aDD12, f1_of_xx1__D1))), FusedMulAddSIMD(aDD12, MulSIMD(MulSIMD(FDPart3_Integer_2, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_191, FDPart3_7), MulSIMD(f1_of_xx1, alpha))), FusedMulSubSIMD(FDPart3_175, FDPart3_182, MulSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_192, FDPart3_7), MulSIMD(aDD11, alpha))))))))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_5 = MulSIMD(FDPart3_205, FusedMulAddSIMD(aDD12, MulSIMD(MulSIMD(FDPart3_Integer_2, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_192, FDPart3_7), MulSIMD(f1_of_xx1, alpha))), FusedMulAddSIMD(FDPart3_98, MulSIMD(aDD_dupD222, vetU2), SubSIMD(FusedMulAddSIMD(FDPart3_75, MulSIMD(aDD12, vetU_dD12), FusedMulAddSIMD(FDPart3_75, MulSIMD(aDD22, vetU_dD22), FusedMulAddSIMD(FDPart3_69, NegFusedMulAddSIMD(FDPart3_172, FusedMulAddSIMD(FDPart3_36, FDPart3_Rational_1_3, MulSIMD(FDPart3_38, FDPart3_Rational_1_3)), FDPart3_171), FusedMulAddSIMD(vetU0, FusedMulAddSIMD(FDPart3_134, aDD22, MulSIMD(FDPart3_36, aDD_dupD220)), FusedMulAddSIMD(FDPart3_18, vetU_dD02, FusedMulAddSIMD(FDPart3_3, FusedMulAddSIMD(FDPart3_150, aDD22, MulSIMD(FDPart3_36, aDD_dupD221)), FusedMulAddSIMD(f0_of_xx0, MulSIMD(MulSIMD(FDPart3_NegativeOne_, aDD02), MulSIMD(MulSIMD(FDPart3_193, FDPart3_Integer_2), MulSIMD(f1_of_xx1, alpha))), FusedMulSubSIMD(FDPart3_175, FDPart3_189, MulSIMD(FDPart3_7, MulSIMD(MulSIMD(FDPart3_26, FDPart3_29), MulSIMD(FDPart3_Rational_2_3, aDD22))))))))))), MulSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_191, FDPart3_29), MulSIMD(aDD22, alpha)))))));
                   const REAL_SIMD_ARRAY __RHS_exp_6 = FusedMulAddSIMD(FDPart3_6, alpha_dupD2, FusedMulAddSIMD(alpha_dupD0, vetU0, FusedMulSubSIMD(FDPart3_3, alpha_dupD1, MulSIMD(FDPart3_Integer_2, MulSIMD(alpha, trK)))));
                   const REAL_SIMD_ARRAY __RHS_exp_7 = FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_4, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_2, FDPart3_265), MulSIMD(lambdaU2, vetU0))), FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_8, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_269, FDPart3_4), MulSIMD(lambdaU1, vetU2))), FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_8, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_179, FDPart3_274), MulSIMD(lambdaU2, vetU2))), FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_4, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_2, FDPart3_265), MulSIMD(lambdaU0, vetU2))), NegFusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_2, FDPart3_4), MulSIMD(lambdaU2, vetU_dD02)), NegFusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_262, FDPart3_8), MulSIMD(lambdaU1, vetU1)), NegFusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_2, FDPart3_257), MulSIMD(lambdaU0, vetU1)), NegFusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_2, FDPart3_257), MulSIMD(lambdaU1, vetU0)), FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_2, FDPart3_NegativeOne_), MulSIMD(lambdaU1, vetU_dD01)), FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_255, FDPart3_NegativeOne_), MulSIMD(lambdaU0, vetU0)), FusedMulAddSIMD(FDPart3_67, MulSIMD(FDPart3_Rational_3_4, vetU_dDD000), NegFusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(lambdaU0, vetU_dD00), FusedMulAddSIMD(FDPart3_56, MulSIMD(FDPart3_Rational_3_4, NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(f1_of_xx1, vetU_dD22), FusedMulAddSIMD(FDPart3_148, vetU_dD01, FusedMulAddSIMD(FDPart3_223, vetU_dD00, FusedMulAddSIMD(f1_of_xx1, MulSIMD(MulSIMD(FDPart3_Integer_2, FDPart3_NegativeOne_), MulSIMD(f1_of_xx1__D1, vetU1)), NegFusedMulAddSIMD(FDPart3_29, vetU0, vetU_dDD022)))))), FusedMulAddSIMD(FDPart3_61, MulSIMD(FDPart3_Rational_3_4, AddSIMD(vetU_dDD011, NegFusedMulAddSIMD(FDPart3_Integer_2, vetU_dD11, SubSIMD(FDPart3_174, vetU0)))), FusedMulAddSIMD(FDPart3_312, MulSIMD(FDPart3_313, FDPart3_Rational_3_4), FusedMulAddSIMD(FDPart3_315, MulSIMD(FDPart3_316, FDPart3_Rational_3_4), FusedMulAddSIMD(FDPart3_232, MulSIMD(FDPart3_48, FDPart3_Rational_3_2), FusedMulAddSIMD(FDPart3_278, MulSIMD(FDPart3_Rational_3_4, NegFusedMulAddSIMD(FDPart3_Integer_4, MulSIMD(MulSIMD(FDPart3_59, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_53), MulSIMD(aDD12, f1_of_xx1))), FusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_29, FDPart3_7), MulSIMD(MulSIMD(FDPart3_279, FDPart3_280), MulSIMD(FDPart3_NegativeOne_, aDD22))), SubSIMD(NegFusedMulAddSIMD(aDD02, MulSIMD(MulSIMD(FDPart3_66, FDPart3_Integer_4), MulSIMD(MulSIMD(FDPart3_280, FDPart3_53), MulSIMD(f0_of_xx0, f1_of_xx1))), NegFusedMulSubSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_281), aDD11), MulSIMD(MulSIMD(FDPart3_280, FDPart3_Integer_2), MulSIMD(aDD00, MulSIMD(FDPart3_66, FDPart3_66))))), MulSIMD(MulSIMD(FDPart3_66, FDPart3_Integer_4), MulSIMD(MulSIMD(FDPart3_280, FDPart3_59), MulSIMD(aDD01, f0_of_xx0))))))), FusedMulAddSIMD(FDPart3_6, betU_dupD02, FusedMulAddSIMD(betU_dupD00, vetU0, FusedMulAddSIMD(FDPart3_3, betU_dupD01, FusedMulAddSIMD(FDPart3_340, FDPart3_Rational_3_4, FusedMulAddSIMD(FDPart3_284, FDPart3_298, FusedMulAddSIMD(FDPart3_299, FDPart3_306, FusedMulAddSIMD(FDPart3_269, FDPart3_325, FusedMulAddSIMD(FDPart3_274, FDPart3_276, FusedMulAddSIMD(FDPart3_269, FDPart3_271, FusedMulAddSIMD(FDPart3_269, FDPart3_272, FusedMulAddSIMD(FDPart3_265, FDPart3_268, FusedMulAddSIMD(FDPart3_265, FDPart3_331, FusedMulAddSIMD(FDPart3_262, FDPart3_264, FusedMulAddSIMD(FDPart3_265, FDPart3_266, FusedMulAddSIMD(FDPart3_257, FDPart3_260, FusedMulAddSIMD(FDPart3_257, FDPart3_333, FusedMulAddSIMD(FDPart3_255, FDPart3_311, FusedMulAddSIMD(FDPart3_257, FDPart3_258, FusedMulAddSIMD(FDPart3_251, FDPart3_67, FusedMulAddSIMD(FDPart3_255, FDPart3_256, FusedMulAddSIMD(FDPart3_227, FDPart3_228, FusedMulAddSIMD(FDPart3_245, FDPart3_64, FusedMulAddSIMD(FDPart3_218, FDPart3_62, FusedMulAddSIMD(FDPart3_221, FDPart3_222, FusedMulAddSIMD(FDPart3_209, FDPart3_64, FusedMulAddSIMD(FDPart3_211, FDPart3_67, FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_8, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_269, FDPart3_4), MulSIMD(lambdaU2, vetU1))), FusedMulSubSIMD(FDPart3_208, FDPart3_62, MulSIMD(betU0, eta)))))))))))))))))))))))))))))))))))))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_8 = MulSIMD(f0_of_xx0, FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_8, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_364, FDPart3_4), MulSIMD(lambdaU1, vetU2))), FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_4, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_2, FDPart3_363), MulSIMD(lambdaU0, vetU2))), FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_4, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_2, FDPart3_363), MulSIMD(lambdaU2, vetU0))), NegFusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_4, FDPart3_8), MulSIMD(lambdaU2, vetU_dD12)), FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_8, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_179, FDPart3_365), MulSIMD(lambdaU2, vetU2))), NegFusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_2, FDPart3_360), MulSIMD(lambdaU1, vetU0)), NegFusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_362, FDPart3_8), MulSIMD(lambdaU1, vetU1)), FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_8, FDPart3_NegativeOne_), MulSIMD(lambdaU1, vetU_dD11)), NegFusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_2, FDPart3_360), MulSIMD(lambdaU0, vetU1)), FusedMulAddSIMD(FDPart3_67, MulSIMD(FDPart3_Rational_3_4, FusedMulAddSIMD(FDPart3_2, vetU_dDD100, FusedMulAddSIMD(FDPart3_350, vetU1, FusedMulSubSIMD(FDPart3_11, FDPart3_21, MulSIMD(FDPart3_8, MulSIMD(FDPart3_Integer_2, vetU_dD10)))))), FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_359, FDPart3_NegativeOne_), MulSIMD(lambdaU0, vetU0)), FusedMulAddSIMD(FDPart3_48, MulSIMD(FDPart3_Rational_3_4, FusedMulAddSIMD(FDPart3_237, FDPart3_6, FusedMulAddSIMD(FDPart3_6, NegFusedMulSubSIMD(f1_of_xx1, f1_of_xx1__DD11, FDPart3_237), FusedMulAddSIMD(FDPart3_178, f1_of_xx1, FDPart3_348)))), FusedMulAddSIMD(FDPart3_56, MulSIMD(FDPart3_Rational_3_4, FusedMulAddSIMD(FDPart3_237, FDPart3_352, FusedMulAddSIMD(FDPart3_148, FDPart3_20, FusedMulAddSIMD(FDPart3_2, vetU_dDD122, FusedMulAddSIMD(FDPart3_29, FDPart3_3, FusedMulSubSIMD(FDPart3_11, FDPart3_223, MulSIMD(MulSIMD(FDPart3_2, FDPart3_Integer_2), MulSIMD(f1_of_xx1__D1, vetU_dD22)))))))), FusedMulAddSIMD(FDPart3_315, MulSIMD(FDPart3_Rational_3_4, NegFusedMulAddSIMD(aDD02, MulSIMD(MulSIMD(FDPart3_59, FDPart3_Integer_4), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(f0_of_xx0, f1_of_xx1))), FusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_29, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_285), MulSIMD(FDPart3_NegativeOne_, aDD22))), SubSIMD(NegFusedMulAddSIMD(FDPart3_Integer_4, MulSIMD(MulSIMD(FDPart3_60, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(aDD12, f1_of_xx1))), FusedMulSubSIMD(MulSIMD(FDPart3_Integer_2, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_280, FDPart3_7), MulSIMD(aDD11, MulSIMD(FDPart3_60, FDPart3_60))), MulSIMD(MulSIMD(FDPart3_280, FDPart3_281), MulSIMD(FDPart3_Integer_2, aDD00)))), MulSIMD(MulSIMD(FDPart3_60, FDPart3_Integer_4), MulSIMD(MulSIMD(FDPart3_280, FDPart3_59), MulSIMD(aDD01, f0_of_xx0))))))), FusedMulAddSIMD(FDPart3_348, MulSIMD(FDPart3_48, FDPart3_Rational_3_4), FusedMulAddSIMD(FDPart3_278, MulSIMD(FDPart3_316, FDPart3_Rational_3_4), FusedMulAddSIMD(FDPart3_312, MulSIMD(FDPart3_368, FDPart3_Rational_3_4), FusedMulAddSIMD(FDPart3_372, FDPart3_Rational_3_4, FusedMulAddSIMD(vetU0, FusedMulSubSIMD(FDPart3_2, betU_dupD10, MulSIMD(FDPart3_8, betU1)), FusedMulAddSIMD(FDPart3_341, betU1, FusedMulAddSIMD(FDPart3_346, FDPart3_Rational_3_4, FusedMulAddSIMD(FDPart3_331, FDPart3_363, FusedMulAddSIMD(FDPart3_333, FDPart3_371, FusedMulAddSIMD(FDPart3_311, FDPart3_359, FusedMulAddSIMD(FDPart3_325, FDPart3_364, FusedMulAddSIMD(FDPart3_298, FDPart3_367, FusedMulAddSIMD(FDPart3_306, FDPart3_362, FusedMulAddSIMD(FDPart3_272, FDPart3_364, FusedMulAddSIMD(FDPart3_276, FDPart3_365, FusedMulAddSIMD(FDPart3_270, betU_dupD12, FusedMulAddSIMD(FDPart3_271, FDPart3_364, FusedMulAddSIMD(FDPart3_266, FDPart3_363, FusedMulAddSIMD(FDPart3_268, FDPart3_363, FusedMulAddSIMD(FDPart3_263, betU_dupD11, FusedMulAddSIMD(FDPart3_264, FDPart3_362, FusedMulAddSIMD(FDPart3_258, FDPart3_360, FusedMulAddSIMD(FDPart3_260, FDPart3_360, FusedMulAddSIMD(FDPart3_251, FDPart3_64, FusedMulAddSIMD(FDPart3_256, FDPart3_359, FusedMulAddSIMD(FDPart3_228, FDPart3_344, FusedMulAddSIMD(FDPart3_245, FDPart3_61, FusedMulAddSIMD(FDPart3_218, FDPart3_48, FusedMulAddSIMD(FDPart3_222, AddSIMD(FDPart3_247, FDPart3_342), FusedMulAddSIMD(FDPart3_209, FDPart3_61, FusedMulAddSIMD(FDPart3_211, FDPart3_64, FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_8, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_364, FDPart3_4), MulSIMD(lambdaU2, vetU1))), FusedMulSubSIMD(FDPart3_208, FDPart3_48, MulSIMD(FDPart3_11, MulSIMD(FDPart3_Rational_3_4, lambdaU0))))))))))))))))))))))))))))))))))))))))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_9 = MulSIMD(FDPart3_98, FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_8, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_389, FDPart3_4), MulSIMD(lambdaU1, vetU2))), FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_4, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_2, FDPart3_388), MulSIMD(lambdaU0, vetU2))), FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_4, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_2, FDPart3_388), MulSIMD(lambdaU2, vetU0))), NegFusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_387, FDPart3_8), MulSIMD(lambdaU1, vetU1)), FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_8, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_179, FDPart3_390), MulSIMD(lambdaU2, vetU2))), NegFusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_2, FDPart3_385), MulSIMD(lambdaU0, vetU1)), NegFusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_2, FDPart3_385), MulSIMD(lambdaU1, vetU0)), FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_384, FDPart3_NegativeOne_), MulSIMD(lambdaU0, vetU0)), NegFusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_179, FDPart3_8), MulSIMD(lambdaU2, vetU_dD22)), FusedMulAddSIMD(FDPart3_67, MulSIMD(FDPart3_Rational_3_4, FusedMulAddSIMD(FDPart3_16, FDPart3_21, FusedMulAddSIMD(FDPart3_5, vetU_dDD200, FusedMulSubSIMD(FDPart3_14, FDPart3_350, MulSIMD(MulSIMD(FDPart3_4, FDPart3_8), MulSIMD(FDPart3_Integer_2, vetU_dD20)))))), SubSIMD(FusedMulAddSIMD(FDPart3_341, MulSIMD(FDPart3_4, betU2), FusedMulAddSIMD(FDPart3_61, MulSIMD(FDPart3_Rational_3_4, FusedMulAddSIMD(FDPart3_181, MulSIMD(FDPart3_230, FDPart3_Integer_2), FusedMulAddSIMD(FDPart3_5, vetU_dDD211, FusedMulAddSIMD(vetU2, FusedMulAddSIMD(FDPart3_21, FDPart3_381, MulSIMD(FDPart3_241, f1_of_xx1__DD11)), FusedMulAddSIMD(FDPart3_16, f0_of_xx0, FusedMulAddSIMD(FDPart3_376, FDPart3_6, FusedMulAddSIMD(FDPart3_2, MulSIMD(FDPart3_381, vetU2), NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_179, FDPart3_2), MulSIMD(f1_of_xx1__D1, vetU_dD21)), FDPart3_6)))))))), FusedMulAddSIMD(FDPart3_312, MulSIMD(FDPart3_Rational_3_4, NegFusedMulAddSIMD(FDPart3_Integer_4, MulSIMD(MulSIMD(FDPart3_55, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(aDD12, f1_of_xx1))), SubSIMD(SubSIMD(NegFusedMulAddSIMD(aDD02, MulSIMD(MulSIMD(FDPart3_55, FDPart3_Integer_4), MulSIMD(MulSIMD(FDPart3_280, FDPart3_53), MulSIMD(f0_of_xx0, f1_of_xx1))), NegFusedMulSubSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_285), aDD11), MulSIMD(MulSIMD(FDPart3_279, FDPart3_280), MulSIMD(FDPart3_Integer_2, aDD00)))), MulSIMD(MulSIMD(FDPart3_53, FDPart3_Integer_4), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(aDD01, f0_of_xx0)))), MulSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_29), MulSIMD(aDD22, MulSIMD(FDPart3_55, FDPart3_55))))))), FusedMulAddSIMD(FDPart3_315, MulSIMD(FDPart3_368, FDPart3_Rational_3_4), FusedMulAddSIMD(vetU0, FusedMulAddSIMD(FDPart3_248, betU2, MulSIMD(FDPart3_5, betU_dupD20)), FusedMulAddSIMD(FDPart3_278, MulSIMD(FDPart3_313, FDPart3_Rational_3_4), FusedMulAddSIMD(FDPart3_380, FDPart3_Rational_3_4, FusedMulAddSIMD(FDPart3_396, FDPart3_Rational_3_4, FusedMulAddSIMD(FDPart3_375, FDPart3_Rational_3_4, FusedMulAddSIMD(FDPart3_377, FDPart3_Rational_3_4, FusedMulAddSIMD(FDPart3_331, FDPart3_395, FusedMulAddSIMD(FDPart3_333, FDPart3_385, FusedMulAddSIMD(FDPart3_311, FDPart3_384, FusedMulAddSIMD(FDPart3_325, FDPart3_394, FusedMulAddSIMD(FDPart3_3, FusedMulAddSIMD(FDPart3_242, betU2, MulSIMD(FDPart3_5, betU_dupD21)), FusedMulAddSIMD(FDPart3_306, FDPart3_387, FusedMulAddSIMD(FDPart3_276, FDPart3_390, FusedMulAddSIMD(FDPart3_298, FDPart3_390, FusedMulAddSIMD(FDPart3_272, FDPart3_389, FusedMulAddSIMD(FDPart3_275, betU_dupD22, FusedMulAddSIMD(FDPart3_268, FDPart3_388, FusedMulAddSIMD(FDPart3_271, FDPart3_389, FusedMulAddSIMD(FDPart3_264, FDPart3_387, FusedMulAddSIMD(FDPart3_266, FDPart3_388, FusedMulAddSIMD(FDPart3_258, FDPart3_385, FusedMulAddSIMD(FDPart3_260, FDPart3_385, FusedMulAddSIMD(FDPart3_251, FDPart3_62, FusedMulAddSIMD(FDPart3_256, FDPart3_384, FusedMulAddSIMD(FDPart3_228, FDPart3_373, FusedMulAddSIMD(FDPart3_245, FDPart3_48, FusedMulAddSIMD(FDPart3_218, FDPart3_56, FusedMulAddSIMD(FDPart3_222, FDPart3_378, FusedMulAddSIMD(FDPart3_209, FDPart3_48, FusedMulAddSIMD(FDPart3_211, FDPart3_62, FusedMulAddSIMD(FDPart3_Rational_3_4, MulSIMD(MulSIMD(FDPart3_8, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_389, FDPart3_4), MulSIMD(lambdaU2, vetU1))), FusedMulSubSIMD(FDPart3_208, FDPart3_56, MulSIMD(FDPart3_16, MulSIMD(FDPart3_Rational_3_4, lambdaU0)))))))))))))))))))))))))))))))))))))), MulSIMD(MulSIMD(FDPart3_181, FDPart3_2), MulSIMD(FDPart3_Rational_3_4, lambdaU1))))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_10 = MulSIMD(MulSIMD(FDPart3_Integer_2, FDPart3_NegativeOne_), MulSIMD(cf, NegFusedMulAddSIMD(FDPart3_Rational_1_6, MulSIMD(alpha, trK), NegFusedMulAddSIMD(FDPart3_Rational_1_2, MulSIMD(MulSIMD(FDPart3_2, FDPart3_72), MulSIMD(cf_dupD1, vetU1)), FusedMulAddSIMD(FDPart3_24, MulSIMD(FDPart3_Rational_1_6, vetU1), FusedMulAddSIMD(FDPart3_5, MulSIMD(FDPart3_Rational_1_6, vetU_dD22), FusedMulAddSIMD(FDPart3_Rational_1_6, vetU_dD00, FusedMulAddSIMD(FDPart3_2, MulSIMD(FDPart3_Rational_1_3, vetU0), FusedMulAddSIMD(FDPart3_Rational_1_2, MulSIMD(MulSIMD(FDPart3_72, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_2, FDPart3_4), MulSIMD(cf_dupD2, vetU2))), FusedMulSubSIMD(FDPart3_20, FDPart3_Rational_1_6, MulSIMD(MulSIMD(FDPart3_72, FDPart3_Rational_1_2), MulSIMD(cf_dupD0, vetU0))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_11 = FusedMulAddSIMD(FDPart3_12, MulSIMD(FDPart3_16, FDPart3_45), FusedMulAddSIMD(FDPart3_6, hDD_dupD002, FusedMulAddSIMD(hDD_dupD000, vetU0, FusedMulAddSIMD(FDPart3_3, hDD_dupD001, FusedMulAddSIMD(FDPart3_400, FusedMulAddSIMD(FDPart3_Rational_2_3, hDD00, FDPart3_Rational_2_3), FusedMulAddSIMD(FDPart3_32, MulSIMD(FDPart3_Integer_2, vetU_dD00), FusedMulSubSIMD(FDPart3_220, FDPart3_28, MulSIMD(FDPart3_Integer_2, MulSIMD(aDD00, alpha)))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_12 = MulSIMD(FDPart3_2, FusedMulAddSIMD(vetU0, FusedMulAddSIMD(f0_of_xx0, hDD_dupD010, hDD01), FusedMulAddSIMD(FDPart3_102, MulSIMD(FDPart3_16, hDD12), FusedMulAddSIMD(hDD01, vetU_dD11, FusedMulAddSIMD(hDD_dupD011, vetU1, FusedMulAddSIMD(FDPart3_181, FDPart3_52, FusedMulAddSIMD(FDPart3_32, vetU_dD01, FusedMulAddSIMD(FDPart3_14, hDD_dupD012, FusedMulAddSIMD(FDPart3_174, hDD01, FusedMulAddSIMD(MulSIMD(FDPart3_400, FDPart3_Rational_2_3), MulSIMD(f0_of_xx0, hDD01), FusedMulSubSIMD(FDPart3_11, FDPart3_35, MulSIMD(MulSIMD(FDPart3_Integer_2, aDD01), MulSIMD(f0_of_xx0, alpha)))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_13 = MulSIMD(FDPart3_5, FusedMulAddSIMD(vetU0, FusedMulAddSIMD(FDPart3_98, hDD_dupD020, FDPart3_45), FusedMulAddSIMD(FDPart3_102, MulSIMD(FDPart3_11, hDD12), FusedMulAddSIMD(hDD02, vetU_dD22, FusedMulAddSIMD(hDD_dupD022, vetU2, FusedMulAddSIMD(FDPart3_32, vetU_dD02, FusedMulAddSIMD(hDD01, vetU_dD12, FusedMulAddSIMD(FDPart3_174, FDPart3_45, FusedMulAddSIMD(FDPart3_3, FusedMulAddSIMD(FDPart3_98, hDD_dupD021, FDPart3_97), FusedMulAddSIMD(FDPart3_400, MulSIMD(FDPart3_52, FDPart3_Rational_2_3), FusedMulSubSIMD(FDPart3_16, FDPart3_39, MulSIMD(f0_of_xx0, MulSIMD(MulSIMD(FDPart3_Integer_2, aDD02), MulSIMD(f1_of_xx1, alpha))))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_14 = MulSIMD(FDPart3_8, FusedMulAddSIMD(FDPart3_28, MulSIMD(f0_of_xx0, vetU_dD01), FusedMulAddSIMD(FDPart3_14, MulSIMD(f0_of_xx0, hDD_dupD112), FusedMulAddSIMD(FDPart3_20, MulSIMD(FDPart3_35, FDPart3_Integer_2), FusedMulAddSIMD(vetU0, FusedMulAddSIMD(FDPart3_7, hDD_dupD110, FDPart3_93), FusedMulAddSIMD(FDPart3_115, MulSIMD(FDPart3_181, hDD12), FusedMulAddSIMD(f0_of_xx0, MulSIMD(hDD_dupD111, vetU1), FusedMulSubSIMD(FDPart3_400, FusedMulAddSIMD(FDPart3_34, FDPart3_Rational_2_3, MulSIMD(FDPart3_7, FDPart3_Rational_2_3)), MulSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(aDD11, alpha))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_15 = MulSIMD(FDPart3_203, FusedMulAddSIMD(f0_of_xx0, MulSIMD(hDD12, vetU_dD22), FusedMulAddSIMD(f0_of_xx0, MulSIMD(hDD_dupD122, vetU2), FusedMulAddSIMD(FDPart3_98, MulSIMD(hDD12, vetU_dD11), FusedMulAddSIMD(f0_of_xx0, MulSIMD(hDD01, vetU_dD02), FusedMulAddSIMD(vetU0, FusedMulAddSIMD(FDPart3_102, hDD_dupD120, FDPart3_101), FusedMulAddSIMD(FDPart3_2, MulSIMD(FDPart3_35, vetU_dD12), FusedMulAddSIMD(FDPart3_3, FusedMulAddSIMD(FDPart3_102, hDD_dupD121, FDPart3_117), FusedMulAddSIMD(FDPart3_52, vetU_dD01, FusedMulAddSIMD(FDPart3_Rational_2_3, MulSIMD(MulSIMD(FDPart3_400, FDPart3_7), MulSIMD(f1_of_xx1, hDD12)), FusedMulSubSIMD(FDPart3_181, FDPart3_39, MulSIMD(aDD12, MulSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(f1_of_xx1, alpha))))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_16 = MulSIMD(FDPart3_205, FusedMulAddSIMD(FDPart3_98, MulSIMD(hDD_dupD222, vetU2), FusedMulAddSIMD(vetU0, FusedMulAddSIMD(FDPart3_36, hDD_dupD220, FDPart3_135), FusedMulAddSIMD(FDPart3_12, MulSIMD(FDPart3_45, vetU_dD02), FusedMulAddSIMD(FDPart3_3, FusedMulAddSIMD(FDPart3_36, hDD_dupD221, FDPart3_151), FusedMulAddSIMD(FDPart3_400, FusedMulAddSIMD(FDPart3_36, FDPart3_Rational_2_3, MulSIMD(FDPart3_38, FDPart3_Rational_2_3)), FusedMulAddSIMD(MulSIMD(FDPart3_21, FDPart3_39), MulSIMD(FDPart3_4, vetU_dD22), FusedMulSubSIMD(FDPart3_101, vetU_dD12, MulSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_29, FDPart3_7), MulSIMD(aDD22, alpha)))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_17 = NegFusedMulAddSIMD(FDPart3_Rational_4_3, MulSIMD(MulSIMD(FDPart3_44, FDPart3_59), MulSIMD(trK_dD1, alpha)), FusedMulAddSIMD(FDPart3_232, MulSIMD(FDPart3_48, FDPart3_Integer_2), NegFusedMulAddSIMD(FDPart3_Rational_4_3, MulSIMD(MulSIMD(FDPart3_44, FDPart3_53), MulSIMD(trK_dD2, alpha)), FusedMulAddSIMD(lambdaU_dupD00, vetU0, FusedMulAddSIMD(FDPart3_225, MulSIMD(FDPart3_4, lambdaU2), FusedMulAddSIMD(FDPart3_61, AddSIMD(vetU_dDD011, NegFusedMulAddSIMD(FDPart3_Integer_2, vetU_dD11, SubSIMD(FDPart3_174, vetU0))), FusedMulAddSIMD(FDPart3_67, vetU_dDD000, FusedMulAddSIMD(FDPart3_56, NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(f1_of_xx1, vetU_dD22), FusedMulAddSIMD(FDPart3_148, vetU_dD01, FusedMulAddSIMD(FDPart3_223, vetU_dD00, FusedMulAddSIMD(f1_of_xx1, MulSIMD(MulSIMD(FDPart3_Integer_2, FDPart3_NegativeOne_), MulSIMD(f1_of_xx1__D1, vetU1)), NegFusedMulAddSIMD(FDPart3_29, vetU0, vetU_dDD022))))), FusedMulAddSIMD(FDPart3_6, lambdaU_dupD02, FusedMulAddSIMD(FDPart3_406, FDPart3_64, FusedMulAddSIMD(FDPart3_407, FDPart3_67, FusedMulAddSIMD(FDPart3_315, FDPart3_316, FusedMulAddSIMD(FDPart3_405, FDPart3_62, FusedMulAddSIMD(FDPart3_3, lambdaU_dupD01, FusedMulAddSIMD(FDPart3_312, FDPart3_313, FusedMulAddSIMD(FDPart3_284, FDPart3_409, FusedMulAddSIMD(FDPart3_299, FDPart3_410, FusedMulAddSIMD(FDPart3_269, FDPart3_413, FusedMulAddSIMD(FDPart3_278, NegFusedMulAddSIMD(FDPart3_Integer_4, MulSIMD(MulSIMD(FDPart3_59, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_53), MulSIMD(aDD12, f1_of_xx1))), FusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_29, FDPart3_7), MulSIMD(MulSIMD(FDPart3_279, FDPart3_280), MulSIMD(FDPart3_NegativeOne_, aDD22))), SubSIMD(NegFusedMulAddSIMD(aDD02, MulSIMD(MulSIMD(FDPart3_66, FDPart3_Integer_4), MulSIMD(MulSIMD(FDPart3_280, FDPart3_53), MulSIMD(f0_of_xx0, f1_of_xx1))), NegFusedMulSubSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_281), aDD11), MulSIMD(MulSIMD(FDPart3_280, FDPart3_Integer_2), MulSIMD(aDD00, MulSIMD(FDPart3_66, FDPart3_66))))), MulSIMD(MulSIMD(FDPart3_66, FDPart3_Integer_4), MulSIMD(MulSIMD(FDPart3_280, FDPart3_59), MulSIMD(aDD01, f0_of_xx0)))))), FusedMulAddSIMD(FDPart3_257, FDPart3_415, FusedMulAddSIMD(FDPart3_265, FDPart3_414, FusedMulAddSIMD(FDPart3_219, lambdaU1, FusedMulAddSIMD(FDPart3_255, FDPart3_411, FusedMulAddSIMD(FDPart3_113, FDPart3_221, FusedMulAddSIMD(FDPart3_144, FDPart3_227, NegFusedMulAddSIMD(FDPart3_Rational_4_3, MulSIMD(MulSIMD(FDPart3_44, FDPart3_66), MulSIMD(trK_dD0, alpha)), NegFusedMulAddSIMD(lambdaU0, vetU_dD00, FDPart3_340)))))))))))))))))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_18 = MulSIMD(f0_of_xx0, NegFusedMulAddSIMD(FDPart3_Rational_4_3, MulSIMD(MulSIMD(FDPart3_44, FDPart3_47), MulSIMD(trK_dD2, alpha)), NegFusedMulAddSIMD(FDPart3_Rational_4_3, MulSIMD(MulSIMD(FDPart3_44, FDPart3_59), MulSIMD(trK_dD0, alpha)), FusedMulAddSIMD(vetU0, FusedMulSubSIMD(FDPart3_2, lambdaU_dupD10, MulSIMD(FDPart3_8, lambdaU1)), NegFusedMulAddSIMD(FDPart3_203, MulSIMD(lambdaU2, vetU_dD12), FusedMulAddSIMD(FDPart3_56, FusedMulAddSIMD(FDPart3_237, FDPart3_352, FusedMulAddSIMD(FDPart3_148, FDPart3_20, FusedMulAddSIMD(FDPart3_2, vetU_dDD122, FusedMulAddSIMD(FDPart3_29, FDPart3_3, FusedMulSubSIMD(FDPart3_11, FDPart3_223, MulSIMD(MulSIMD(FDPart3_2, FDPart3_Integer_2), MulSIMD(f1_of_xx1__D1, vetU_dD22))))))), FusedMulAddSIMD(FDPart3_67, FusedMulAddSIMD(FDPart3_2, vetU_dDD100, FusedMulAddSIMD(FDPart3_350, vetU1, FusedMulSubSIMD(FDPart3_11, FDPart3_21, MulSIMD(FDPart3_8, MulSIMD(FDPart3_Integer_2, vetU_dD10))))), FusedMulAddSIMD(FDPart3_407, FDPart3_64, FusedMulAddSIMD(FDPart3_48, FusedMulAddSIMD(FDPart3_237, FDPart3_6, FusedMulAddSIMD(FDPart3_6, NegFusedMulSubSIMD(f1_of_xx1, f1_of_xx1__DD11, FDPart3_237), FusedMulAddSIMD(FDPart3_178, f1_of_xx1, FDPart3_348))), FusedMulAddSIMD(FDPart3_405, FDPart3_48, FusedMulAddSIMD(FDPart3_406, FDPart3_61, FusedMulAddSIMD(FDPart3_367, FDPart3_409, FusedMulAddSIMD(FDPart3_371, FDPart3_415, FusedMulAddSIMD(FDPart3_363, FDPart3_414, FusedMulAddSIMD(FDPart3_364, FDPart3_413, FusedMulAddSIMD(FDPart3_359, FDPart3_411, FusedMulAddSIMD(FDPart3_362, FDPart3_410, FusedMulAddSIMD(FDPart3_315, NegFusedMulAddSIMD(aDD02, MulSIMD(MulSIMD(FDPart3_59, FDPart3_Integer_4), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(f0_of_xx0, f1_of_xx1))), FusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_29, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_285), MulSIMD(FDPart3_NegativeOne_, aDD22))), SubSIMD(NegFusedMulAddSIMD(FDPart3_Integer_4, MulSIMD(MulSIMD(FDPart3_60, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(aDD12, f1_of_xx1))), FusedMulSubSIMD(MulSIMD(FDPart3_Integer_2, FDPart3_NegativeOne_), MulSIMD(MulSIMD(FDPart3_280, FDPart3_7), MulSIMD(aDD11, MulSIMD(FDPart3_60, FDPart3_60))), MulSIMD(MulSIMD(FDPart3_280, FDPart3_281), MulSIMD(FDPart3_Integer_2, aDD00)))), MulSIMD(MulSIMD(FDPart3_60, FDPart3_Integer_4), MulSIMD(MulSIMD(FDPart3_280, FDPart3_59), MulSIMD(aDD01, f0_of_xx0)))))), FusedMulAddSIMD(FDPart3_348, FDPart3_48, FusedMulAddSIMD(FDPart3_278, FDPart3_316, FusedMulAddSIMD(FDPart3_312, FDPart3_368, FusedMulAddSIMD(FDPart3_263, lambdaU_dupD11, FusedMulAddSIMD(FDPart3_270, lambdaU_dupD12, FusedMulAddSIMD(FDPart3_144, FDPart3_344, FusedMulAddSIMD(FDPart3_246, lambdaU1, AddSIMD(FusedMulAddSIMD(FDPart3_113, AddSIMD(FDPart3_247, FDPart3_342), FDPart3_372), NegFusedMulAddSIMD(FDPart3_Rational_4_3, MulSIMD(MulSIMD(FDPart3_44, FDPart3_60), MulSIMD(trK_dD1, alpha)), NegFusedMulAddSIMD(FDPart3_11, lambdaU0, FDPart3_346))))))))))))))))))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_19 = MulSIMD(FDPart3_98, NegFusedMulAddSIMD(FDPart3_Rational_4_3, MulSIMD(MulSIMD(FDPart3_44, FDPart3_47), MulSIMD(trK_dD1, alpha)), NegFusedMulAddSIMD(FDPart3_Rational_4_3, MulSIMD(MulSIMD(FDPart3_44, FDPart3_53), MulSIMD(trK_dD0, alpha)), NegFusedMulAddSIMD(MulSIMD(FDPart3_181, FDPart3_2), lambdaU1, SubSIMD(FusedMulAddSIMD(FDPart3_67, FusedMulAddSIMD(FDPart3_16, FDPart3_21, FusedMulAddSIMD(FDPart3_5, vetU_dDD200, FusedMulSubSIMD(FDPart3_14, FDPart3_350, MulSIMD(MulSIMD(FDPart3_4, FDPart3_8), MulSIMD(FDPart3_Integer_2, vetU_dD20))))), FusedMulAddSIMD(vetU0, FusedMulAddSIMD(FDPart3_248, lambdaU2, MulSIMD(FDPart3_5, lambdaU_dupD20)), FusedMulAddSIMD(FDPart3_407, FDPart3_62, FusedMulAddSIMD(FDPart3_61, FusedMulAddSIMD(FDPart3_181, MulSIMD(FDPart3_230, FDPart3_Integer_2), FusedMulAddSIMD(FDPart3_5, vetU_dDD211, FusedMulAddSIMD(vetU2, FusedMulAddSIMD(FDPart3_21, FDPart3_381, MulSIMD(FDPart3_241, f1_of_xx1__DD11)), FusedMulAddSIMD(FDPart3_16, f0_of_xx0, FusedMulAddSIMD(FDPart3_376, FDPart3_6, FusedMulAddSIMD(FDPart3_2, MulSIMD(FDPart3_381, vetU2), NegFusedMulAddSIMD(FDPart3_Integer_2, MulSIMD(MulSIMD(FDPart3_179, FDPart3_2), MulSIMD(f1_of_xx1__D1, vetU_dD21)), FDPart3_6))))))), FusedMulAddSIMD(FDPart3_405, FDPart3_56, FusedMulAddSIMD(FDPart3_406, FDPart3_48, FusedMulAddSIMD(FDPart3_394, FDPart3_413, FusedMulAddSIMD(FDPart3_395, FDPart3_414, FusedMulAddSIMD(FDPart3_387, FDPart3_410, FusedMulAddSIMD(FDPart3_390, FDPart3_409, FusedMulAddSIMD(FDPart3_384, FDPart3_411, FusedMulAddSIMD(FDPart3_385, FDPart3_415, FusedMulAddSIMD(FDPart3_312, NegFusedMulAddSIMD(FDPart3_Integer_4, MulSIMD(MulSIMD(FDPart3_55, FDPart3_7), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(aDD12, f1_of_xx1))), SubSIMD(SubSIMD(NegFusedMulAddSIMD(aDD02, MulSIMD(MulSIMD(FDPart3_55, FDPart3_Integer_4), MulSIMD(MulSIMD(FDPart3_280, FDPart3_53), MulSIMD(f0_of_xx0, f1_of_xx1))), NegFusedMulSubSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_285), aDD11), MulSIMD(MulSIMD(FDPart3_279, FDPart3_280), MulSIMD(FDPart3_Integer_2, aDD00)))), MulSIMD(MulSIMD(FDPart3_53, FDPart3_Integer_4), MulSIMD(MulSIMD(FDPart3_280, FDPart3_47), MulSIMD(aDD01, f0_of_xx0)))), MulSIMD(MulSIMD(FDPart3_7, FDPart3_Integer_2), MulSIMD(MulSIMD(FDPart3_280, FDPart3_29), MulSIMD(aDD22, MulSIMD(FDPart3_55, FDPart3_55)))))), FusedMulAddSIMD(FDPart3_315, FDPart3_368, FusedMulAddSIMD(FDPart3_278, FDPart3_313, FusedMulAddSIMD(FDPart3_3, FusedMulAddSIMD(FDPart3_242, lambdaU2, MulSIMD(FDPart3_5, lambdaU_dupD21)), FusedMulAddSIMD(FDPart3_144, FDPart3_373, FusedMulAddSIMD(FDPart3_275, lambdaU_dupD22, AddSIMD(FusedMulAddSIMD(FDPart3_113, FDPart3_378, FDPart3_396), AddSIMD(AddSIMD(FDPart3_377, FDPart3_380), NegFusedMulAddSIMD(FDPart3_Rational_4_3, MulSIMD(MulSIMD(FDPart3_44, FDPart3_55), MulSIMD(trK_dD2, alpha)), NegFusedMulAddSIMD(FDPart3_16, lambdaU0, FDPart3_375)))))))))))))))))))))), MulSIMD(MulSIMD(FDPart3_179, FDPart3_8), MulSIMD(lambdaU2, vetU_dD22)))))));
                   const REAL_SIMD_ARRAY __RHS_exp_20 = FusedMulAddSIMD(FDPart3_Rational_1_3, MulSIMD(alpha, MulSIMD(trK, trK)), NegFusedMulAddSIMD(MulSIMD(FDPart3_61, FDPart3_69), FusedMulAddSIMD(FDPart3_120, alpha_dD2, FusedMulAddSIMD(FDPart3_122, alpha_dD1, FusedMulAddSIMD(FDPart3_124, alpha_dD0, NegFusedMulAddSIMD(FDPart3_85, alpha_dD1, alpha_dDD11)))), FusedMulAddSIMD(FDPart3_292, MulSIMD(FDPart3_324, alpha), FusedMulAddSIMD(FDPart3_310, MulSIMD(aDD00, alpha), FusedMulAddSIMD(FDPart3_18, MulSIMD(FDPart3_330, alpha), FusedMulAddSIMD(FDPart3_189, MulSIMD(FDPart3_296, alpha), FusedMulAddSIMD(FDPart3_13, MulSIMD(FDPart3_332, alpha), FusedMulAddSIMD(FDPart3_176, MulSIMD(FDPart3_305, alpha), FusedMulAddSIMD(FDPart3_6, trK_dupD2, FusedMulAddSIMD(trK_dupD0, vetU0, FusedMulAddSIMD(FDPart3_423, AddSIMD(FDPart3_145, FDPart3_422), FusedMulAddSIMD(FDPart3_423, AddSIMD(FDPart3_146, FDPart3_422), FusedMulAddSIMD(FDPart3_421, AddSIMD(FDPart3_129, FDPart3_420), FusedMulAddSIMD(FDPart3_421, AddSIMD(FDPart3_131, FDPart3_420), FusedMulAddSIMD(FDPart3_419, AddSIMD(FDPart3_418, FDPart3_87), FusedMulAddSIMD(FDPart3_419, AddSIMD(FDPart3_418, FDPart3_90), NegFusedMulAddSIMD(MulSIMD(FDPart3_67, FDPart3_69), FusedMulAddSIMD(FDPart3_77, alpha_dD2, FusedMulAddSIMD(FDPart3_79, alpha_dD1, FusedMulAddSIMD(FDPart3_81, alpha_dD0, NegFusedMulAddSIMD(FDPart3_88, alpha_dD0, alpha_dDD00)))), FusedMulSubSIMD(FDPart3_3, trK_dupD1, MulSIMD(FDPart3_56, MulSIMD(FDPart3_69, FusedMulAddSIMD(FDPart3_165, alpha_dD2, FusedMulAddSIMD(FDPart3_167, alpha_dD1, FusedMulAddSIMD(FDPart3_169, alpha_dD0, NegFusedMulAddSIMD(FDPart3_127, alpha_dD2, alpha_dDD22))))))))))))))))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_21 = FusedMulAddSIMD(FDPart3_274, FDPart3_429, FusedMulAddSIMD(FDPart3_3, vetU_dupD01, FusedMulAddSIMD(FDPart3_265, FDPart3_427, FusedMulAddSIMD(FDPart3_269, FDPart3_428, FusedMulAddSIMD(FDPart3_257, FDPart3_425, FusedMulAddSIMD(FDPart3_262, FDPart3_426, FusedMulAddSIMD(FDPart3_6, vetU_dupD02, FusedMulAddSIMD(vetU0, vetU_dupD00, FusedMulAddSIMD(FDPart3_255, FDPart3_424, betU0)))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_22 = MulSIMD(f0_of_xx0, FusedMulAddSIMD(FDPart3_363, FDPart3_427, FusedMulAddSIMD(FDPart3_364, FDPart3_428, FusedMulAddSIMD(FDPart3_360, FDPart3_425, FusedMulAddSIMD(FDPart3_362, FDPart3_426, FusedMulAddSIMD(FDPart3_270, vetU_dupD12, FusedMulAddSIMD(FDPart3_359, FDPart3_424, FusedMulAddSIMD(FDPart3_365, FDPart3_429, FusedMulAddSIMD(vetU0, FusedMulAddSIMD(FDPart3_2, vetU_dupD10, FDPart3_10), FusedMulAddSIMD(FDPart3_2, betU1, MulSIMD(FDPart3_263, vetU_dupD11)))))))))));
                   const REAL_SIMD_ARRAY __RHS_exp_23 = MulSIMD(FDPart3_98, FusedMulAddSIMD(FDPart3_389, FDPart3_428, FusedMulAddSIMD(FDPart3_390, FDPart3_429, FusedMulAddSIMD(FDPart3_387, FDPart3_426, FusedMulAddSIMD(FDPart3_388, FDPart3_427, FusedMulAddSIMD(FDPart3_384, FDPart3_424, FusedMulAddSIMD(FDPart3_385, FDPart3_425, FusedMulAddSIMD(FDPart3_5, betU2, FusedMulAddSIMD(vetU0, FusedMulAddSIMD(FDPart3_5, vetU_dupD20, FDPart3_15), FusedMulAddSIMD(FDPart3_275, vetU_dupD22, MulSIMD(FDPart3_3, FusedMulAddSIMD(FDPart3_5, vetU_dupD21, FDPart3_180))))))))))));
                   WriteSIMD(&rhs_gfs[IDX4S(ADD00GF, i0, i1, i2)], __RHS_exp_0);
                   WriteSIMD(&rhs_gfs[IDX4S(ADD01GF, i0, i1, i2)], __RHS_exp_1);
                   WriteSIMD(&rhs_gfs[IDX4S(ADD02GF, i0, i1, i2)], __RHS_exp_2);
                   WriteSIMD(&rhs_gfs[IDX4S(ADD11GF, i0, i1, i2)], __RHS_exp_3);
                   WriteSIMD(&rhs_gfs[IDX4S(ADD12GF, i0, i1, i2)], __RHS_exp_4);
                   WriteSIMD(&rhs_gfs[IDX4S(ADD22GF, i0, i1, i2)], __RHS_exp_5);
                   WriteSIMD(&rhs_gfs[IDX4S(ALPHAGF, i0, i1, i2)], __RHS_exp_6);
                   WriteSIMD(&rhs_gfs[IDX4S(BETU0GF, i0, i1, i2)], __RHS_exp_7);
                   WriteSIMD(&rhs_gfs[IDX4S(BETU1GF, i0, i1, i2)], __RHS_exp_8);
                   WriteSIMD(&rhs_gfs[IDX4S(BETU2GF, i0, i1, i2)], __RHS_exp_9);
                   WriteSIMD(&rhs_gfs[IDX4S(CFGF, i0, i1, i2)], __RHS_exp_10);
                   WriteSIMD(&rhs_gfs[IDX4S(HDD00GF, i0, i1, i2)], __RHS_exp_11);
                   WriteSIMD(&rhs_gfs[IDX4S(HDD01GF, i0, i1, i2)], __RHS_exp_12);
                   WriteSIMD(&rhs_gfs[IDX4S(HDD02GF, i0, i1, i2)], __RHS_exp_13);
                   WriteSIMD(&rhs_gfs[IDX4S(HDD11GF, i0, i1, i2)], __RHS_exp_14);
                   WriteSIMD(&rhs_gfs[IDX4S(HDD12GF, i0, i1, i2)], __RHS_exp_15);
                   WriteSIMD(&rhs_gfs[IDX4S(HDD22GF, i0, i1, i2)], __RHS_exp_16);
                   WriteSIMD(&rhs_gfs[IDX4S(LAMBDAU0GF, i0, i1, i2)], __RHS_exp_17);
                   WriteSIMD(&rhs_gfs[IDX4S(LAMBDAU1GF, i0, i1, i2)], __RHS_exp_18);
                   WriteSIMD(&rhs_gfs[IDX4S(LAMBDAU2GF, i0, i1, i2)], __RHS_exp_19);
                   WriteSIMD(&rhs_gfs[IDX4S(TRKGF, i0, i1, i2)], __RHS_exp_20);
                   WriteSIMD(&rhs_gfs[IDX4S(VETU0GF, i0, i1, i2)], __RHS_exp_21);
                   WriteSIMD(&rhs_gfs[IDX4S(VETU1GF, i0, i1, i2)], __RHS_exp_22);
                   WriteSIMD(&rhs_gfs[IDX4S(VETU2GF, i0, i1, i2)], __RHS_exp_23);
                }
            } // END LOOP: for (int i0 = NGHOSTS; i0 < NGHOSTS+Nxx0; i0 += SIMD_width)
        } // END LOOP: for (int i1 = NGHOSTS; i1 < NGHOSTS+Nxx1; i1++)
    } // END LOOP: for (int i2 = NGHOSTS; i2 < NGHOSTS+Nxx2; i2++)
}
